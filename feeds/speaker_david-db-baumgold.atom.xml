<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_david-db-baumgold.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-05-19T00:00:00+00:00</updated><entry><title>Looping Like a Pro in Python</title><link href="http://pyvideo.org/pycon-us-2017/looping-like-a-pro-in-python.html" rel="alternate"></link><published>2017-05-19T00:00:00+00:00</published><updated>2017-05-19T00:00:00+00:00</updated><author><name>David "DB" Baumgold</name></author><id>tag:pyvideo.org,2017-05-19:pycon-us-2017/looping-like-a-pro-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The humble loop: it's hard to write a program without it. Whether it's
processing numbers in a sequence, lines in a text file, users in a
database, or any other list of things, you use loops all the time. But
did you know that Python has a lot of different ways to write loops?
Reaching for the right looping tool can make your code cleaner, more
readable, easier to test, and it can even make it run faster! By the end
of this talk, you'll be looping like a pro, and your code will be better
for it.&lt;/p&gt;
</summary></entry></feed>