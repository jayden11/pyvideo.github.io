<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sat, 20 May 2017 00:00:00 +0000</lastBuildDate><item><title>Keynote: Python all the things!</title><link>http://pyvideo.org/python-brasil-2016/keynote-python-all-the-things.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Keynote Russell Keith-Magee - Python all the things!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Mon, 17 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-17:python-brasil-2016/keynote-python-all-the-things.html</guid></item><item><title>DjangoCon 2008 Panel: Schema Evolution</title><link>http://pyvideo.org/djangocon-2008/djangocon-2008-panel-schema-evolution.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Moderator:
Michael Trier&lt;/p&gt;
&lt;p&gt;Panelists:
Simon Willison, Russ Keith-Magee, Andrew Godwin&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.djangocon.org"&gt;http://www.djangocon.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Trier</dc:creator><pubDate>Sat, 06 Sep 2008 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2008-09-06:djangocon-2008/djangocon-2008-panel-schema-evolution.html</guid><category>Django</category><category>panel</category><category>djangocon</category><category>djangocon2008</category></item><item><title>How to write a Python transpiler</title><link>http://pyvideo.org/pycon-us-2017/how-to-write-a-python-transpiler.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all know Python is a powerful and expressive programming language.
What you may not know is how much of the internals of Python itself is
exposed for you to use and manipulate.&lt;/p&gt;
&lt;p&gt;In this talk, you'll be introduced to the tools and libraries Python
provides to manipulate the compilation and execution of Python code. You
will also see how you can use those tools to target execution
environments other than the CPython virtual machine.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-20:pycon-us-2017/how-to-write-a-python-transpiler.html</guid></item><item><title>Django 1.6 and beyond: The Django Roadmap</title><link>http://pyvideo.org/pycon-russia-2013/django-16-and-beyond-the-django-roadmap.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With the impending release of Django 1.5, now is a good time to reflect on the roadmap for Django 1.6 and beyond. In this talk, Django Core Developer Russell Keith-Magee will gaze into his crystal ball and speculate about what the future may hold for Django -- both in the short term, and possibilities for the long term.
Audience: Existing Django users interested in what the future holds for their web framework of choice.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Mon, 25 Feb 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-02-25:pycon-russia-2013/django-16-and-beyond-the-django-roadmap.html</guid></item><item><title>Building a development community: Lessons and challenges</title><link>http://pyvideo.org/pycon-russia-2013/building-a-development-community-lessons-and-challenges.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the last 7 years, Django has grown from an in-house project in an obscure Kansas newsroom, to a project with global reach, in use on all 7 continents, with contributors and users all over the planet. How has the Django project managed this process of growth? What lessons can other projects learn from Django's successes and failures? And how can Django protect it's long term survival? In this talk, Django Core Developer Russell Keith-Magee will reflect on the history of the Django project, and look at how Django -- and other open source projects -- can build, grow and sustain their communities. Audience: Anyone involved in open source.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Sun, 24 Feb 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-02-24:pycon-russia-2013/building-a-development-community-lessons-and-challenges.html</guid></item><item><title>DjangoCon EU 2013: Russell Keith-Magee - Class-Based Views: Untangling the mess</title><link>http://pyvideo.org/djangocon-eu-2013/djangocon-eu-2013-russell-keith-magee-class-based-views-untangling-the-mess.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Videos from DjangoCon Europe 2013 are kindly provided by Heroku, a cloud application platform -- a new way of building and deploying web apps: &lt;a class="reference external" href="http://heroku.com/"&gt;http://heroku.com/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Wed, 15 May 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-05-15:djangocon-eu-2013/djangocon-eu-2013-russell-keith-magee-class-based-views-untangling-the-mess.html</guid></item><item><title>Python All the Things</title><link>http://pyvideo.org/pycon-au-2016/python-all-the-things.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Russell Keith-Magee
&lt;a class="reference external" href="https://2016.pycon-au.org/schedule/198/view_talk"&gt;https://2016.pycon-au.org/schedule/198/view_talk&lt;/a&gt;
Weâ€™re familiar with Python as a scripting language, as a web server language, as a teaching language, as a data analysis language, and as a teaching language. But is that the limit of where Python can be used? What is the future for Python on other platforms? Is the prospect of using Python on those platforms a novelty, or a viable way to fend off an existential threat to the language? And how does this threat intersect with other threats we have to our community, and to our industry?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-15:pycon-au-2016/python-all-the-things.html</guid></item><item><title>Making a Splash with your Open Source Project</title><link>http://pyvideo.org/djangocon-us-2016/making-a-splash-with-your-open-source-project.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making a Splash with your Open Source Project by Russell Keith Magee&lt;/p&gt;
&lt;p&gt;So you've written a bunch of code, and you think others might find it useful. You open source it, and... profit, right? Well, no. PyPI is filled with thousands of projects that have been released with the best of intentions, but never really break into the mainstream. How do you escape this trap, and maximize the chance that your project will actually be used, grow and thrive?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-12:djangocon-us-2016/making-a-splash-with-your-open-source-project.html</guid></item><item><title>Beyond Web 2.0 - Django and Python in the modern web ecosystem</title><link>http://pyvideo.org/djangocon-europe-2016/beyond-web-20-django-and-python-in-the-modern-web-ecosystem.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You can find more about this talk on &lt;a class="reference external" href="https://2016.djangocon.eu/speakers/5"&gt;djangocon.eu&lt;/a&gt;. This video is hosted by &lt;a class="reference external" href="http://opbeat.com/community/posts/beyond-web-2-0-django-and-python-in-the-modern-web-ecosystem-by-russell-keith-magee/"&gt;opbeat.com&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-04-01:djangocon-europe-2016/beyond-web-20-django-and-python-in-the-modern-web-ecosystem.html</guid><category>django</category></item><item><title>A tale of two cellphones: Python on Android and iOS</title><link>http://pyvideo.org/pycon-us-2016/russell-keith-magee-a-tale-of-two-cellphones-python-on-android-and-ios-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Russell Keith-Magee&lt;/p&gt;
&lt;p&gt;Python is enjoying a surge in popularity due to it's features as a language. However, over the last 10 years, mobile platforms have increased in importance, and Python doesn't have a good story on these platforms.&lt;/p&gt;
&lt;p&gt;In this talk, Dr Russell Keith-Magee will give a technical dive into the work the BeeWare project has been doing to make Python as simple to use on Mobile as it is on other platforms.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/russell-keith-magee-a-tale-of-two-cellphones-python-on-android-and-ios-pycon-2016.html</guid></item><item><title>I am a doctor</title><link>http://pyvideo.org/djangocon-europe-2015/russel-keith-magee-i-am-a-doctor-at-djangocon-2015.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-10:djangocon-europe-2015/russel-keith-magee-i-am-a-doctor-at-djangocon-2015.html</guid></item><item><title>What on earth are Python &amp; Django?</title><link>http://pyvideo.org/djangocon-europe-2015/russell-keith-magee-what-on-earth-are-python-at.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Sat, 08 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-08:djangocon-europe-2015/russell-keith-magee-what-on-earth-are-python-at.html</guid></item><item><title>Snakes in a Browser</title><link>http://pyvideo.org/pyohio-2016/snakes-in-a-browser.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We all know that Python and Django can be used to write server-side software, but what about the client side? What about the browser? Can you use Python to power client-side interactions? Can you deploy Python logic (such as validation logic) on both the client and the server?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Sun, 31 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-31:pyohio-2016/snakes-in-a-browser.html</guid></item><item><title>No! Bad Pony!</title><link>http://pyvideo.org/djangocon-2009/no--bad-pony.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;No! Bad Pony!&lt;/p&gt;
&lt;p&gt;Presented by Russell Keith-Magee&lt;/p&gt;
&lt;p&gt;Talks about ponies, genesis of ponies, the history of the pony, magical
powers, and everything else you want to know about ponies. Talks about
how django feature proposals are handled.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Thu, 10 Sep 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-09-10:djangocon-2009/no--bad-pony.html</guid><category>djangocon</category><category>djangocon2009</category><category>ponies</category></item><item><title>Django Technical Design Panel</title><link>http://pyvideo.org/djangocon-2009/django-technical-design-panel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django Technical Design Panel&lt;/p&gt;
&lt;p&gt;Featuring Joseph K, Russell Keith-Magee, Simon Willison, James Bennett,
Brian&lt;/p&gt;
&lt;p&gt;Moderated question and answer period covering a bunch of topics.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: sound only from left speaker]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Bennett</dc:creator><pubDate>Tue, 08 Sep 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-09-08:djangocon-2009/django-technical-design-panel.html</guid><category>djangocon</category><category>djangocon2009</category></item><item><title>NoSQL and Django Panel</title><link>http://pyvideo.org/djangocon-2010/djangocon-2010--nosql-and-django-panel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A panel to discuss the future of no-sql/non-related databases in Django.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The proliferation of non-SQL speaking datastores has caused a lot of
discourse and debate over their potential role in Django's decidedly
SQL-speaking ORM. The goal of this panel is to consolidate and discuss
the root questions of this debate.&lt;/p&gt;
&lt;p&gt;The panel will consist of Django orm contributors and heavy end-users of
both Django and a variety of NoSQL database solutions. Questions to the
panel will briefly cover the NoSQL movement in general and it's staying
power. After that introduction to the debates at hand outside of Django,
questions will shift to focus closely on the issues into integrating
NoSQL and Django--both on current best practices and future plans for
integrating it into the core.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Burch</dc:creator><pubDate>Thu, 09 Sep 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-09-09:djangocon-2010/djangocon-2010--nosql-and-django-panel.html</guid><category>casestudy</category><category>djangocon</category><category>djangocon2010</category><category>nosql</category><category>orm</category></item><item><title>Sprints Kickoff</title><link>http://pyvideo.org/djangocon-2010/djangocon-2010--sprints-kickoff.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This is the sprints kickoff where Russell explains how sprints work and
what to expect.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Thu, 09 Sep 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-09-09:djangocon-2010/djangocon-2010--sprints-kickoff.html</guid><category>djangocon</category><category>djangocon2010</category><category>sprints</category></item><item><title>First steps in performance tuning</title><link>http://pyvideo.org/djangocon-2010/djangocon-2010--first-steps-in-performance-tuning.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you've built your first Django website. You've tested it, you've
released it, you've got a few customers... and a few more... and a few
more... and now you're having performance problems. What do you do? This
talk will look at some performance problems you may experience, and show
some simple (and creative) ways to squeeze the most out of your server
hardware.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The talk is especially aimed at web developers that haven't got a
background in computing, but nonetheless have fallen into a web
development role. Topics will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to work out that you have a problem&lt;/li&gt;
&lt;li&gt;Getting computation out of the request/response loop&lt;/li&gt;
&lt;li&gt;Caching -- when, how, and problems that caching introduces&lt;/li&gt;
&lt;li&gt;Setting up a webserver to avoid deadlocks&lt;/li&gt;
&lt;li&gt;Likely causes (and solutions) of database bottlenecks&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Wed, 08 Sep 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-09-08:djangocon-2010/djangocon-2010--first-steps-in-performance-tuning.html</guid><category>djangocon</category><category>djangocon2010</category><category>performance</category><category>tuning</category></item><item><title>Technical Design Panel</title><link>http://pyvideo.org/djangocon-2010/djangocon-2010--technical-design-panel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Come one! Come all! Pay sixpence to see the freaks! Real Live Core
Developers, answering questions for your edification!&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This is a repeat of the ever-popular &amp;quot;hit the core developers with hard
questions&amp;quot; panel.&lt;/p&gt;
&lt;p&gt;Covers issues brought up by Eric's talk, checkin rights, portable apps,
the global settings file, backwards incompatible changes, contrib,
educating users on finding tools and libraries, what's coming in django
1.3, memory usage in django, required resources for django core
development, best part of django today, and problems with external
dependencies not shipped with django.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Justin Braun</dc:creator><pubDate>Wed, 08 Sep 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-09-08:djangocon-2010/djangocon-2010--technical-design-panel.html</guid><category>djangocon</category><category>djangocon2010</category></item><item><title>DSF Announcements and Q&amp;A</title><link>http://pyvideo.org/djangocon-2010/djangocon-2010--dsf-announcements-and-q-amp-a.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Django software foundation is the entity which hold the IP for
django and guides efforts to develop the community around Django. In
this session several members of the DSF will be announcing some changes
at the DSF and will be available for a general Q&amp;amp;A.;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Tue, 07 Sep 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-09-07:djangocon-2010/djangocon-2010--dsf-announcements-and-q-amp-a.html</guid><category>djangocon</category><category>djangocon2010</category><category>dsf</category></item><item><title>So you want to be a core developer?</title><link>http://pyvideo.org/djangocon-2010/djangocon-2010--so-you-want-to-be-a-core-develope.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The most important part of Django is its community of contributors --
without contributors, Django would never improve. However, as a newcomer
to Django, the prospect of contributing may be somewhat daunting. This
presentation will show you how to make the transition from user to
contributor -- what to do, how to do it, and some guidelines on how to
do the job well.&lt;/p&gt;
&lt;p&gt;The aim of this presentation is to explain how we do things in the core,
and how to work with us to get the job done. It will cover dealing with
Trac and the triage lifecycle, how to find tickets to triage, other
non-obvious ways to contribute, and cover some basic design
philosophies.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Tue, 07 Sep 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-09-07:djangocon-2010/djangocon-2010--so-you-want-to-be-a-core-develope.html</guid><category>core</category><category>djangocon</category><category>djangocon2010</category></item><item><title>State of the DSF Keynote</title><link>http://pyvideo.org/djangocon-2011/djangocon-2011--state-of-the-dsf-keynote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;State of the DSF Keynote&lt;/p&gt;
&lt;p&gt;Presented by Russell Keith-Magee&lt;/p&gt;
&lt;p&gt;For this keynote Russ will be providing some background on what the DSF
is, what it has been up to recently, and what it plans to do over the
next year. If you're interested in contributing to the Django community,
this will be a great way to find out what opportunities are out there
and to find out how the DSF can help.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Mon, 01 Jan 1990 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,1990-01-01:djangocon-2011/djangocon-2011--state-of-the-dsf-keynote.html</guid><category>djangocon</category><category>djangocon2011</category><category>dsf</category></item><item><title>DjangoCon 2012 Keynote - Russell Keith-Magee</title><link>http://pyvideo.org/djangocon-2012/djangocon-2012-keynote-russell-keith-magee.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;DjangoCon 2012 - Keynote - Russell Keith-Magee&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Sat, 06 Oct 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-10-06:djangocon-2012/djangocon-2012-keynote-russell-keith-magee.html</guid><category>django</category></item><item><title>Get off the bench: Making the leap from user to contributor</title><link>http://pyvideo.org/djangocon-2012/get-off-the-bench-making-the-leap-from-user-to-c.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django -- like all Open Source projects -- is only as good as the
community of people that contribute to it. We have a huge user
community, but the vast majority of users never make the leap and become
contributors. This talk will walk you through the process of making the
transition from Django user, to Django Project contributor.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django needs you! No -- seriously -- Django is a volunteer project, and
the ability of Django to continue to improve is entirely controlled by
the time and dedication people like you are willing to put into making
Django better.&lt;/p&gt;
&lt;p&gt;However, it's not just a matter of sitting down and writing code. If you
don't have a plan for how you're going to engage with the rest of the
community, it's very easy to put in a lot of effort, and then have that
effort go entirely to waste. This talk will give you some tips on how to
engage the community so that you can see your effort turn into progress,
and not just be lost in a mailing list.&lt;/p&gt;
&lt;p&gt;Getting involved doesn't just mean contributing code, either. There are
lots of other ways that you can be a valuable member of the community,
and this talk will give you several suggestions for how your talents
could be used to improve the entire Django ecosystem.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Thu, 06 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-06:djangocon-2012/get-off-the-bench-making-the-leap-from-user-to-c.html</guid><category>django</category></item><item><title>Guerilla APIs: integrating web systems that weren't designed to be integrated</title><link>http://pyvideo.org/djangocon-2013/guerilla-apis-integrating-web-systems-that-werent.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;GUERILLA APIS: INTEGRATING WEB SYSTEMS THAT WEREN'T DESIGNED TO BE
INTEGRATED&lt;/p&gt;
&lt;p&gt;Thursday 12:15 p.m.--1 p.m.&lt;/p&gt;
&lt;p&gt;Audience level: Intermediate&lt;/p&gt;
&lt;p&gt;DESCRIPTION In an ideal world, every web system would provide a well
designed REST API with oAuth authentication. But what do you do when
those things don't exist?&lt;/p&gt;
&lt;p&gt;ABSTRACT In an ideal world, every web system would provide a well
designed REST API with oAuth authentication. But what do you do when
that doesn't exist?&lt;/p&gt;
&lt;p&gt;In this talk, Russell Keith-Magee will explore some unorthodox
techniques for extracting and inserting information into the sort of
systems you see in the real world outside Silicon Valley -- systems that
don't provide a nice ReSTful API.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Thu, 03 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-03:djangocon-2013/guerilla-apis-integrating-web-systems-that-werent.html</guid></item><item><title>Red User, Blue User, MyUser, auth.User</title><link>http://pyvideo.org/djangocon-2013/red-user-blue-user-myuser-auth-user.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Red User, Blue User, MyUser, auth.User&lt;/p&gt;
&lt;p&gt;Wednesday 11:30 a.m.--12:15 p.m.&lt;/p&gt;
&lt;p&gt;Audience level: Intermediate&lt;/p&gt;
&lt;p&gt;Description&lt;/p&gt;
&lt;p&gt;An exploration of one of the banner features of Django 1.5 -- Custom
User models. Includes worked examples, a discussion of design decisions
that must be made, and a look at the internal architecture that makes it
all possible. Abstract&lt;/p&gt;
&lt;p&gt;One of the banner features of Django 1.5 was the introduction of custom
User models. Using this new feature, you are free to use any model you
wish as your User, instead of being bound to the '30 character username
and optional email' requirement of auth.User.&lt;/p&gt;
&lt;p&gt;In this talk, Django core developer Russell Keith-Magee will give an
overview of the API, and walk through some examples for some common --
and some not so common -- use cases for a custom User.&lt;/p&gt;
&lt;p&gt;He will also explore some common pitfalls and limitations of the custom
User model API, and look at the design decisions that face any use of
the custom User model API.&lt;/p&gt;
&lt;p&gt;Finally, we'll take a brief look under the hood to see how the feature
actually works, and see how the same technique could be used for other
pluggable apps.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Thu, 03 Oct 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-10-03:djangocon-2013/red-user-blue-user-myuser-auth-user.html</guid></item><item><title>Do you wanna be a core dev? (You don't have to be core dev...)</title><link>http://pyvideo.org/djangocon-2014/do-you-wanna-be-a-core-dev-you-dont-have-to-be-dev.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The most important part of Django is it's community of contributors --
without contributors, Django would never improve. However, while it's
relatively easy to work out how to use Django, the process of getting
involved in development is a little more opaque. How does the the core
team operate? What tools and decision making processes exist? And how do
you, as a Django user, get involved?&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FOPV/"&gt;http://amara.org/v/FOPV/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Tue, 16 Sep 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-09-16:djangocon-2014/do-you-wanna-be-a-core-dev-you-dont-have-to-be-dev.html</guid></item><item><title>Class-based Views: Past, Present and Future</title><link>http://pyvideo.org/djangocon-2014/class-based-views-past-present-and-future.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;One of the big changes in Django 1.3 was the introduction of Class-Based
Views. Opinion on them is strongly divided; some love them, some hate
them.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FNEo/"&gt;http://amara.org/v/FNEo/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Sat, 13 Sep 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-09-13:djangocon-2014/class-based-views-past-present-and-future.html</guid></item><item><title>I am a doctor... (TW)</title><link>http://pyvideo.org/djangocon-2015/i-am-a-doctor-tw-by-russell-keith-magee.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-18:djangocon-2015/i-am-a-doctor-tw-by-russell-keith-magee.html</guid></item><item><title>I never Meta model I didn't like: The Django 1.8 Meta Interface</title><link>http://pyvideo.org/djangocon-2015/i-never-meta-model-i-didnt-like-by-russell-keith.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;I never Meta model I didn't like: The Django 1.8 Meta Interface&lt;/p&gt;
&lt;p&gt;This talk will explain the new Meta API, and look at Daniel Pyrathon's
django-mailer as an example of using Meta in the real world.&lt;/p&gt;
&lt;p&gt;Talk outline: What is meta programming - Reflection in Python - What
this means in Django History of Django's Meta The new Meta API -
Daniel's GSoC project - API walkthrough So why bother? - How Forms use
meta - How Admin uses meta - django-mailer: GMail in contrib.admin *
Other options? - A teaser of other places where this could be used.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-18:djangocon-2015/i-never-meta-model-i-didnt-like-by-russell-keith.html</guid></item><item><title>Lightning Talks - Part 2</title><link>http://pyvideo.org/djangocon-2015/lightning-talks-part-2.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Lightning Talks&lt;/p&gt;
&lt;p&gt;Dmitry Filippov &amp;quot;Django assistance in PyCharm&amp;quot;&lt;/p&gt;
&lt;p&gt;Paul Bailey &amp;quot;End the Holy Wars of Formatting&amp;quot;&lt;/p&gt;
&lt;p&gt;Trey Hunner &amp;quot;JavaScript is Becoming Pythonic&amp;quot;&lt;/p&gt;
&lt;p&gt;Eduardo Rivas &amp;quot; Sublime Text Django&amp;quot;&lt;/p&gt;
&lt;p&gt;Jeff Sumner &amp;quot;Texas Swim Center&amp;quot;&lt;/p&gt;
&lt;p&gt;Francisco Saldana &amp;quot;Keeping Fast Fast: Rapid Iteration with
TransactionTestCase&amp;quot;&lt;/p&gt;
&lt;p&gt;Raphael Merx &amp;quot;Mocking Outbound Requests with HTTPretty&amp;quot;&lt;/p&gt;
&lt;p&gt;James Tauber &amp;quot;Building a Learning Management System with Pinax&amp;quot;&lt;/p&gt;
&lt;p&gt;Miroslav Shubernetskiy &amp;quot;Filtering in Django&amp;quot;&lt;/p&gt;
&lt;p&gt;Armin Ronacher &amp;quot;rb - Scaling Redis in Python&amp;quot;&lt;/p&gt;
&lt;p&gt;Brendan Sterne &amp;quot;Code Wiki&amp;quot;&lt;/p&gt;
&lt;p&gt;Russell Keith-Magee &amp;quot;Professional Yak Coiffure&amp;quot;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dmitry Filippov</dc:creator><pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-18:djangocon-2015/lightning-talks-part-2.html</guid></item><item><title>Money, Money, Money - Writing software, in a rich (wo)man's world</title><link>http://pyvideo.org/djangocon-2015/money-money-money-by-russell-keith-magee.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Money, Money, Money - Writing software, in a rich (wo)man's world&lt;/p&gt;
&lt;p&gt;Free software advocates talk about two types of &amp;quot;Free&amp;quot;: Free as in
freedom, and Free as in beer. While Free (as in freedom) software is
unquestionably better for users and developers alike, Free (as in beer)
software doesn't pay the bills.&lt;/p&gt;
&lt;p&gt;Talk to any prominent open source developer, and amongst the success
stories, you'll also hear some consistent troubles - that they've got
great ideas and grand plans, but no time to execute; that they're about
to burn out due to the pressues of maintaining their project; or that
they've had yet another mailing list discussion with someone who doesn't
understand they're a volunteer. All of these problems stem from a
fundamental disconnect: the discrepancy between the clear demand for a
software product, and the ability to convert that demand into time
needed to service that demand - and that means money.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-18:djangocon-2015/money-money-money-by-russell-keith-magee.html</guid></item><item><title>Secrets of the testing masters</title><link>http://pyvideo.org/djangocon-au-2013/secrets-of-the-testing-masters.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django ship with a wide range of tools to help you test your web
application, but some of the best tools for testing Django don't come in
the box.&lt;/p&gt;
&lt;p&gt;In this talk, you'll get a brief introduction to two of those tools -
Mock and Factory Boy - showing when they should be used, and some
practical examples of their usage in a Django test suite.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-05:djangocon-au-2013/secrets-of-the-testing-masters.html</guid></item><item><title>Lightning Talks (day 3)</title><link>http://pyvideo.org/djangocon-eu-2010/djangoconeu-lightingtalksthirdday663flv.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Lehnardt</dc:creator><pubDate>Wed, 26 May 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-05-26:djangocon-eu-2010/djangoconeu-lightingtalksthirdday663flv.html</guid></item><item><title>Django Technical Design Panel</title><link>http://pyvideo.org/djangocon-eu-2010/djangoconeu-djangotechnicaldesignpanel420flv.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Tue, 25 May 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-05-25:djangocon-eu-2010/djangoconeu-djangotechnicaldesignpanel420flv.html</guid></item><item><title>No! Bad Pony! or, Explaining Django's development process</title><link>http://pyvideo.org/djangocon-eu-2010/djangoconeu-russellkeithmageenobadponyorexplainin.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Tue, 25 May 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-05-25:djangocon-eu-2010/djangoconeu-russellkeithmageenobadponyorexplainin.html</guid></item><item><title>PyConAU 2010: What's new in Django 1.2</title><link>http://pyvideo.org/pycon-au-2010/pyconau-2010--what--39-s-new-in-django-1-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What's new in Django 1.2&lt;/p&gt;
&lt;p&gt;Presented by Dr. Russell Keith-Magee (Django Project)&lt;/p&gt;
&lt;p&gt;Django 1.2 added a number of major, long anticipated features to Django.
This talk will give an overview of these new features (both large and
small), as well as giving a look into what the future may hold for
Django.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Mon, 01 Jan 1990 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,1990-01-01:pycon-au-2010/pyconau-2010--what--39-s-new-in-django-1-2.html</guid><category>pyconau</category><category>pyconau2010</category><category>web</category></item><item><title>Panel: Python in the webs</title><link>http://pyvideo.org/pycon-au-2011/panel-python-in-the-webs.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This will be a panel discussion wherein we wax philosophical about the
state of web frameworks in Python - talking about invention,
reinvention, multitudes of choice, how all of them suck, etc. Panelists
will include Dylan Jay, Malcolm Tredinnick, Russell Keith-Magee and
Richard Jones.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dylan Jay</dc:creator><pubDate>Mon, 22 Aug 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-08-22:pycon-au-2011/panel-python-in-the-webs.html</guid><category>panel</category><category>web</category></item><item><title>No! Bad Pony!</title><link>http://pyvideo.org/pycon-au-2012/no-bad-pony.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Django community is not short of ideas that could be added to the
core repository. Some of these ideas are great, and are just waiting for
the right implementation or the attention of a core developer. Other
ideas are just not going to happen. However, it's not always obvious why
an idea will be rejected. This talk will attempt explain the reasoning
behind a couple of specific decisions. More broadly, this talk will aims
to provide general guidance on the decision making process of the Django
core. It will also address how you can get started contributing to
Django.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Wed, 22 Aug 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-08-22:pycon-au-2012/no-bad-pony.html</guid><category>django</category></item><item><title>Tinkering with Tkinter</title><link>http://pyvideo.org/pycon-au-2013/tinkering-with-tkinter.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Tkinter - the Python wrapper to the Tk graphics library - has been part
of the Python standard library since very early on. However, that
inclusion hasn't translated into extensive use.&lt;/p&gt;
&lt;p&gt;There was a very good reason for this. Tk's documentation was beyond
awful. And if you managed to get over that hurdle, Tkinter apps looked
awful - they had a woefully inadequate set of widgets, styled with the
very best of mid 1990's open source graphic skill.&lt;/p&gt;
&lt;p&gt;And then, the world got obsessed with web frameworks, and the desktop
was declared as dead.&lt;/p&gt;
&lt;p&gt;However, in the last few years, many of the reasons Tkinter was ignored
have been quietly fixed. Tk 8.4 massively improved the visual appearance
of Tk. tkdocs.com has emerged, addressing many of the problems with Tk
documentation.&lt;/p&gt;
&lt;p&gt;In this talk, you'll get a re-introduction to an old friend, and an
explanation of why, in a web and mobile world, you should care.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Sun, 07 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-07:pycon-au-2013/tinkering-with-tkinter.html</guid></item><item><title>Grug make fire! Grug make wheel! by Russell Keith-Magee</title><link>http://pyvideo.org/pycon-au-2014/grug-make-fire-grug-make-wheel-by-russell-keith.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In prehistoric times, Python developers were faced with a confusing
landscape of tools and conflicting advice when they wanted to package
their Python modules for public release. As a result of all the
distutils/distribute/setuptools changes over the last 5 years, there's
lots of confusion about what you should do when preparing a package for
distribution - and even some confusion about what the purpose of
packaging is in the first place.&lt;/p&gt;
&lt;p&gt;After a mammoth effort from a number of volunteers in the community,
over several years, this situation is changing. It's taken a while, but
the Python community has invented the wheel!&lt;/p&gt;
&lt;p&gt;In this talk, we'll look at the process that has led to the development
of the wheel format. But more importantly, we'll look at the steps you
need to take when packaging a module of Python code for others to use,
and get it on the Python Package Index (PyPI).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-08-11:pycon-au-2014/grug-make-fire-grug-make-wheel-by-russell-keith.html</guid></item><item><title>Core Team Panel, featuring: Chris Beaven, Markus Holterman, Russell Keith-Magee, Curtis Maloney</title><link>http://pyvideo.org/pycon-au-2015/core-team-panel-featuring-chris-beaven-markus.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Beaven</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-04:pycon-au-2015/core-team-panel-featuring-chris-beaven-markus.html</guid></item><item><title>Money, Money, Money - Writing software, in a rich (wo)man's world</title><link>http://pyvideo.org/pycon-au-2015/money-money-money-writing-software-in-a-rich.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Free software advocates talk about two types of &amp;quot;Free&amp;quot;: Free as in
freedom, and Free as in beer. While Free (as in freedom) software is
unquestionably better for users and developers alike, Free (as in beer)
software doesn't pay the bills.&lt;/p&gt;
&lt;p&gt;Talk to any prominent open source developer, and amongst the success
stories, you'll also hear some consistent troubles - that they've got
great ideas and grand plans, but no time to execute; that they're about
to burn out due to the pressues of maintaining their project; or that
they've had yet another mailing list discussion with someone who doesn't
understand they're a volunteer. All of these problems stem from a
fundamental disconnect: the discrepancy between the clear demand for a
software product, and the ability to convert that demand into time
needed to service that demand - and that means money.&lt;/p&gt;
&lt;p&gt;So is there a way to pay the piper? Or is open source doomed to eek out
an existence at the edges of &amp;quot;a real job&amp;quot;?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-04:pycon-au-2015/money-money-money-writing-software-in-a-rich.html</guid></item><item><title>Python on the move: The state of mobile Python</title><link>http://pyvideo.org/pycon-au-2015/python-on-the-move-the-state-of-mobile-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the last 5-10 years, the &amp;quot;desktop/server&amp;quot; split that dominated
computing in the 80s, 90s and early 2000s has been joined by a third
player - mobile devices such as phones and tablets.&lt;/p&gt;
&lt;p&gt;So, what is the story for running Python on these devices? Although
there hasn't been much to say in the past, the good news is that over
the last year, there's been some signficant changes in the landscape,
and Python on Mobile is now teetering on the brink of being a genuine
reality.&lt;/p&gt;
&lt;p&gt;In this talk, Russell Keith-Magee will survey the current state of using
Python on mobile devices, the work that is currently being done, areas
where more work is requried, and the prospects for the future.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-04:pycon-au-2015/python-on-the-move-the-state-of-mobile-python.html</guid></item></channel></rss>