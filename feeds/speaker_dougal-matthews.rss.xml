<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 31 Jul 2016 00:00:00 +0000</lastBuildDate><item><title>MkDocs: Documenting projects with Markdown</title><link>http://pyvideo.org/europython-2015/mkdocs-documenting-projects-with-markdown.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dougal Matthews - MkDocs: Documenting projects with Markdown
[EuroPython 2015]
[23 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;MkDocs is a Python library for creating documentation with
Markdown. The primary goal of the project is to lower the barrier
for documentation writers and to help enable high quality prose
based documentation.&lt;/p&gt;
&lt;p&gt;The primary maintainer of MkDocs will cover the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;An introduction to MkDocs and the project goals.&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;How and why did the project start?&lt;/li&gt;
&lt;li&gt;Who uses MkDocs today?&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Discuss what we need to do to create great documentation and how MkDocs can help.&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;A tour of the key features currently in MkDocs&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Adding MkDocs to your project.&lt;/li&gt;
&lt;li&gt;Using themes in the documentation and making customisations&lt;/li&gt;
&lt;li&gt;Publishing your documentation with ReadTheDocs and GitHub     pages.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;A look at the up and coming features in MkDocs and how you can help make these happen.&lt;/li&gt;
&lt;li&gt;A comparison with Sphinx and why you should consider MkDocs.&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dougal Matthews</dc:creator><pubDate>Wed, 05 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-05:europython-2015/mkdocs-documenting-projects-with-markdown.html</guid></item><item><title>Effective Code Review</title><link>http://pyvideo.org/europython-2016/effective-code-review.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dougal Matthews - Effective Code Review
[EuroPython 2016]
[19 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/effective-code-review"&gt;https://ep2016.europython.eu//conference/talks/effective-code-review&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Developers usually state that finding defects is the primary
motivation for doing code reviews. However, research has shown that
the main benefits of code reviews are; knowledge transfer, team
awareness and finding alternative solutions.&lt;/p&gt;
&lt;p&gt;Code reviews when done well are more than just finding defects; it
should be a discussion and conversation with other developers about
finding the best solutions. We will talk about re-framing code review
to encourage open discussions.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;This talk is for everyone that is already involved in regular code
review and those hoping to start. I will talk through the code review
process with the aim of making it a better and more useful experience
for both the authors and the reviewers.&lt;/p&gt;
&lt;p&gt;The talk will follow the following rough outline:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Why do code reviews&lt;/li&gt;
&lt;li&gt;What are we aiming to get out of it&lt;/li&gt;
&lt;li&gt;Submitting code for review&lt;/li&gt;
&lt;li&gt;How can you help reviewers?&lt;/li&gt;
&lt;li&gt;What should you avoid doing?&lt;/li&gt;
&lt;li&gt;Removing ownership of the code&lt;/li&gt;
&lt;li&gt;Reviewing code&lt;/li&gt;
&lt;li&gt;How should you give feedback?&lt;/li&gt;
&lt;li&gt;What should you look for?&lt;/li&gt;
&lt;li&gt;How can you encourage people to review more?&lt;/li&gt;
&lt;li&gt;How to avoid and remove bike-shedding&lt;/li&gt;
&lt;li&gt;Code review tools and how they impact on the process.&lt;/li&gt;
&lt;li&gt;Wrap up and conclusion&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dougal Matthews</dc:creator><pubDate>Sun, 31 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-31:europython-2016/effective-code-review.html</guid></item><item><title>Using asyncio (aka Tulip) for home automation</title><link>http://pyvideo.org/europython-2014/using-asyncio-aka-tulip-for-home-automation.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will cover the new asyncio library in Python 3.4 (also known
as Tulip) and will use the area of home automation as a case study to
explore its features. This talk will be based on code using Python 3.3+.&lt;/p&gt;
&lt;p&gt;Home automation is a growing area and the number of devices and
potential applications is huge. From monitoring electricity usage to the
temperature inside or outside your house to remote control of lights and
other appliances the options are almost endless. However, managing and
monitoring these devices is typically a problem that works best with
event driven applications.&lt;/p&gt;
&lt;p&gt;This is where asnycio comes in, it was originally proposed in PEP 3156
by our BDFL, Guido van Rossum. Asyncio aims to bring a clear approach to
the python ecosystem and borrows from a number of existing solutions to
come up with something clean and modern for the Python stdlib.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will cover the new asyncio library in Python 3.4 (also known
as Tulip) and will use the area of home automation as a case study to
explore its features. This talk will be based on code using Python 3.3+.&lt;/p&gt;
&lt;p&gt;Home automation is a growing area and the number of devices and
potential applications is huge. From monitoring electricity usage to the
temperature inside or outside your house to remote control of lights and
other appliances the options are almost endless. However, managing and
monitoring these devices is typically a problem that works best with
event driven applications.&lt;/p&gt;
&lt;p&gt;This is where asnycio comes in, it was originally proposed in PEP 3156
by our BDFL, Guido van Rossum. Asyncio aims to bring a clear approach to
the python ecosystem and borrows from a number of existing solutions to
come up with something clean and modern for the Python stdlib.&lt;/p&gt;
&lt;p&gt;This talk will introduce asyncio and use it within the context of home
automation and dealing with multiple event driven devices. Therefore we
will cover asyncio and the lessions learned from using different devices
in this context.&lt;/p&gt;
&lt;p&gt;Some of the devices that will be used include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;RFXCom's RFXtrx, USB serial tranciever.&lt;/li&gt;
&lt;li&gt;Owl CM160 electricity tracker.&lt;/li&gt;
&lt;li&gt;Oregon scientific thermometers.&lt;/li&gt;
&lt;li&gt;Foscam IP cameras.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk will also briefly cover the previous solution I used which was
developed with Twisted and compare it briefly with my new code using
asyncio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dougal Matthews</dc:creator><pubDate>Fri, 25 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-25:europython-2014/using-asyncio-aka-tulip-for-home-automation.html</guid></item></channel></rss>