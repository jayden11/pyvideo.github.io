<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_sklearn.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-09-17T00:00:00+00:00</updated><entry><title>Deploying Machine Learning using sklearn pipelines</title><link href="http://pyvideo.org/pydata-chicago-2016/deploying-machine-learning-using-sklearn-pipelines.html" rel="alternate"></link><published>2016-08-27T00:00:00+00:00</published><updated>2016-08-27T00:00:00+00:00</updated><author><name>Kevin Goetsch</name></author><id>tag:pyvideo.org,2016-08-27:pydata-chicago-2016/deploying-machine-learning-using-sklearn-pipelines.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Sklearn pipeline objects provide an framework that simplifies the lifecycle of data science models. This talk will cover the how and why of encoding feature engineering, estimators, and model ensembles in a single deployable object.&lt;/p&gt;
</summary><category term="deploying"></category><category term="learning"></category><category term="machine learning"></category><category term="sklearn"></category></entry><entry><title>Data driven literary analysis</title><link href="http://pyvideo.org/pydata-amsterdam-2016/data-driven-literary-analysis.html" rel="alternate"></link><published>2016-03-26T00:00:00+00:00</published><updated>2016-03-26T00:00:00+00:00</updated><author><name>Serena Peruzzo</name></author><id>tag:pyvideo.org,2016-03-26:pydata-amsterdam-2016/data-driven-literary-analysis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2016&lt;/p&gt;
&lt;p&gt;Can unsupervised learning mimic a literary critic? This talk will give an overview of unsupervised document classification techniques and apply them to the analysis and classification of Shakespeare’s plays.&lt;/p&gt;
&lt;p&gt;Unsupervised document classification addresses the problem of assigning categories to documents without the use of a training set or predefined categories. This is useful to enhance information retrieval, the basic assumption being that similar contents are also relevant to the same query. A similar assumption is made in literature to define literary genres and sub-genres, where works which share specific conventions in terms of form and content are described by the same genre.&lt;/p&gt;
&lt;p&gt;The talk gives an overview of document clustering and its challenges, with a focus on dimensionality reduction and how to address it with topic modelling techniques like LDA (Latent Dirichlet Allocation). Using Shakespeare’s body of work as a case study, the talk describes how to use nltk, sklearn and gensim to process and analyse theatrical works with the final goal of testing whether document clustering yields to the same classification given by literature experts.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="https://speakerdeck.com/sereprz/data-driven-literary-analysis-an-unsupervised-approach-to-text-analysis-and-classification"&gt;https://speakerdeck.com/sereprz/data-driven-literary-analysis-an-unsupervised-approach-to-text-analysis-and-classification&lt;/a&gt;&lt;/p&gt;
</summary><category term="nltk"></category><category term="sklearn"></category><category term="gensim"></category></entry><entry><title>¡Eureka! (Python y ciencia)</title><link href="http://pyvideo.org/pyday-galicia-2016/eureka-python-y-ciencia.html" rel="alternate"></link><published>2016-09-17T00:00:00+00:00</published><updated>2016-09-17T00:00:00+00:00</updated><author><name>Miguel Sánchez de León Peque</name></author><id>tag:pyvideo.org,2016-09-17:pyday-galicia-2016/eureka-python-y-ciencia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla se plantea una pregunta de física básica que se resolverá científicamente con ingenio, mátemáticas y python, aprovechando para (de una manera amena) ver librerías habituales en el entorno científico como sympy, numpy, scipy, matplotlib, bokeh, numba, pandas y sklearn.&lt;/p&gt;
</summary><category term="pyday"></category><category term="sympy"></category><category term="numpy"></category><category term="scipy"></category><category term="matplotlib"></category><category term="bokeh"></category><category term="numba"></category><category term="pandas"></category><category term="sklearn"></category></entry></feed>