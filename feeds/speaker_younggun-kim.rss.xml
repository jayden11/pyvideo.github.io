<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 30 Aug 2015 00:00:00 +0000</lastBuildDate><item><title>Opening 2015-08-30</title><link>http://pyvideo.org/pycon-korea-2015/opening-2015-08-30.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Younggun Kim</dc:creator><pubDate>Sun, 30 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-30:pycon-korea-2015/opening-2015-08-30.html</guid></item><item><title>Writing fast code</title><link>http://pyvideo.org/pycon-korea-2015/writing-fast-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you want to make your code run faster, it is important to
understanding how computers (and also Python!) do work under the hood.
By understanding this and having knowledge of good profiler, you can
make your code run faster.&lt;/p&gt;
&lt;p&gt;This talk will introduce nice tools for the job. Using &lt;tt class="docutils literal"&gt;dis&lt;/tt&gt; module,
you can understand the workflow of Python code. Using various profiler
(such as, &lt;tt class="docutils literal"&gt;cProfile&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;line_profiler&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;profiling&lt;/tt&gt;), you can find
bottlenecks in your code easily.&lt;/p&gt;
&lt;p&gt;After that, you can write fast code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Younggun Kim</dc:creator><pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-29:pycon-korea-2015/writing-fast-code.html</guid></item></channel></rss>