<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Thu, 14 Jul 2016 00:00:00 +0000</lastBuildDate><item><title>Teaching with IPython:Jupyter Notebooks and JupyterHub</title><link>http://pyvideo.org/scipy-2015/teaching-with-ipythonjupyter-notebooks-and-jupyterhub.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica Hamrick</dc:creator><pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-08:scipy-2015/teaching-with-ipythonjupyter-notebooks-and-jupyterhub.html</guid></item><item><title>Reproducible, One Button Workflows with the Jupyter Notebook &amp; Scons</title><link>http://pyvideo.org/scipy-2016/reproducible-one-button-workflows-with-the-jupyter-notebook-scons-scipy-2016-jessica-hamrick.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is the best way to develop analysis code in the Jupyter notebook, while managing complex dependencies between analyses? In this talk, I will introduce nbflow, which is a project that integrates a Python-based build system (SCons) with the Jupyter notebook, enabling researchers to easily build sophisticated,
complex analysis pipelines entirely within notebooks while still maintaining a &amp;quot;one-button workflow&amp;quot; in which all analyses can be executed, in the correct order, from a single command. I will show how nbflow can be applied to existing analyses and how it can be used to construct an analysis pipeline stretching the entire way from data cleaning, to computing statistics, to generating figures,
and even to automatically generating LaTeX commands that can be used in publications to format results without the risk of copy-and-paste error.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica Hamrick</dc:creator><pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-14:scipy-2016/reproducible-one-button-workflows-with-the-jupyter-notebook-scons-scipy-2016-jessica-hamrick.html</guid><category>SciPy 2016</category><category>jupyter</category><category>jupyter notebook</category><category>workflow</category><category>nbflow</category></item><item><title>Games for Science: Creating interactive psychology experiments</title><link>http://pyvideo.org/pycon-us-2014/games-for-science-creating-interactive-psycholog.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Have you ever wanted to play video games while also contributing to
science? In psychology experiments developed by myself and Peter
Battaglia, participants are immersed in an interactive 3D world which is
experimentally well-controlled, yet also extremely fun. This talk will
explain how we created these &amp;quot;game-like&amp;quot; experiments in Python using the
Panda3D video game engine.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica Hamrick</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-04-13:pycon-us-2014/games-for-science-creating-interactive-psycholog.html</guid></item></channel></rss>