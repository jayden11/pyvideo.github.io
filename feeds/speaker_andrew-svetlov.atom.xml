<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_andrew-svetlov.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-02-04T00:00:00+00:00</updated><entry><title>Advanced py.test usage techniques</title><link href="http://pyvideo.org/pycon-ukraine-2016/advanced-pytest-usage-techniques.html" rel="alternate"></link><published>2016-04-23T00:00:00+00:00</published><updated>2016-04-23T00:00:00+00:00</updated><author><name>Andrew Svetlov</name></author><id>tag:pyvideo.org,2016-04-23:pycon-ukraine-2016/advanced-pytest-usage-techniques.html</id><summary type="html"></summary></entry><entry><title>State of aiohttp, winter 2016</title><link href="http://pyvideo.org/pycon-belarus-2016/state-of-aiohttp-winter-2016.html" rel="alternate"></link><published>2016-02-06T00:00:00+00:00</published><updated>2016-02-06T00:00:00+00:00</updated><author><name>Andrew Svetlov</name></author><id>tag:pyvideo.org,2016-02-06:pycon-belarus-2016/state-of-aiohttp-winter-2016.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Андрей Светлов – State of aiohttp, winter 2016&lt;/p&gt;
</summary></entry><entry><title>Создание Open Source библиотек</title><link href="http://pyvideo.org/pycon-belarus-2017/sozdanie-open-source-bibliotek.html" rel="alternate"></link><published>2017-02-04T00:00:00+00:00</published><updated>2017-02-04T00:00:00+00:00</updated><author><name>Andrew Svetlov</name></author><id>tag:pyvideo.org,2017-02-04:pycon-belarus-2017/sozdanie-open-source-bibliotek.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Все используют &lt;em&gt;чужой&lt;/em&gt; открытый код для решения ежедневных задач. В ходе
доклада я поделюсь опытом по созданию более или менее популярных &lt;em&gt;своих&lt;/em&gt;
библиотек: - Описание разницы между коммерческим закрытым кодом и
открытым - Советы по организации кода, тестов, документации -
Рекомендации по работе с community - Некоторые трюки, упрощающие жизнь&lt;/p&gt;
</summary></entry><entry><title>PEP 3156 — Standard of asynchronous IO Support Rebooted in Python.</title><link href="http://pyvideo.org/pycon-russia-2013/pep-3156-standard-of-asynchronous-io-support-rebooted-in-python.html" rel="alternate"></link><published>2013-02-24T00:00:00+00:00</published><updated>2013-02-24T00:00:00+00:00</updated><author><name>Andrew Svetlov</name></author><id>tag:pyvideo.org,2013-02-24:pycon-russia-2013/pep-3156-standard-of-asynchronous-io-support-rebooted-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python already has a lot of libraries for network programming. The most famous are twisted, tornado, gevent, medusa/asyncore. These systems are not compatible with each other, that does not give a possibility to write cross-platform libraries working in any event loop. PEP 3156 proposes new general standart, that will be able to support all developers.&lt;/p&gt;
</summary></entry><entry><title>Дискуссионная панель: Как и зачем писать свои библиотеки на python</title><link href="http://pyvideo.org/pycon-russia-2016/diskussionnaia-panel-kak-i-zachem-pisat-svoi-biblioteki-na-python.html" rel="alternate"></link><published>2016-07-04T00:00:00+00:00</published><updated>2016-07-04T00:00:00+00:00</updated><author><name>Grigory Petrov</name></author><id>tag:pyvideo.org,2016-07-04:pycon-russia-2016/diskussionnaia-panel-kak-i-zachem-pisat-svoi-biblioteki-na-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Round table&lt;/p&gt;
</summary></entry><entry><title>Продвинутое использование py.test</title><link href="http://pyvideo.org/pycon-russia-2016/prodvinutoe-ispolzovanie-pytest.html" rel="alternate"></link><published>2016-07-03T00:00:00+00:00</published><updated>2016-07-03T00:00:00+00:00</updated><author><name>Andrew Svetlov</name></author><id>tag:pyvideo.org,2016-07-03:pycon-russia-2016/prodvinutoe-ispolzovanie-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Большинство разработчиков пишут тесты с помощью стандартной библиотеки unittest и довольны жизнью. Я тоже был из таких - пока не начал интенсивно использовать py.test.&lt;/p&gt;
&lt;p&gt;К сожалению, библиотека недостаточно популяризирована, и мы попробуем восполнить этот недостаток.&lt;/p&gt;
&lt;p&gt;В докладе речь пойдет о написании pytest fixtures (основном инструменте расширения), добавлении конфигурационных параметров, написании plugins и прочих полезных штуках.&lt;/p&gt;
</summary></entry><entry><title>Introduction of aiohttp</title><link href="http://pyvideo.org/pycon-italia-2016/introduction-of-aiohttp.html" rel="alternate"></link><published>2016-06-20T00:00:00+00:00</published><updated>2016-06-20T00:00:00+00:00</updated><author><name>Andrew Svetlov</name></author><id>tag:pyvideo.org,2016-06-20:pycon-italia-2016/introduction-of-aiohttp.html</id><summary type="html"></summary></entry><entry><title>Introduction into aiohttp</title><link href="http://pyvideo.org/pycon-apac-2016/introduction-into-aiohttp.html" rel="alternate"></link><published>2016-08-31T00:00:00+00:00</published><updated>2016-08-31T00:00:00+00:00</updated><author><name>Andrew Svetlov</name></author><id>tag:pyvideo.org,2016-08-31:pycon-apac-2016/introduction-into-aiohttp.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker : Andrew Svetlov
Slide : &lt;a class="reference external" href="https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160813-104-24-andrew_svetlov_aiohttp.pdf"&gt;https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160813-104-24-andrew_svetlov_aiohttp.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.pycon.kr/2016apac/program/24"&gt;https://www.pycon.kr/2016apac/program/24&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Description :&lt;/p&gt;
&lt;p&gt;aiohttp is a HTTP client and server library built on top of asyncio.&lt;/p&gt;
&lt;p&gt;The library allows to write user friendly code which looks like well-known linear one (Requests library for client and Django/Flask/Pyramid for server) but utilizes the power of nonblocking sockets and has a native websockets support.&lt;/p&gt;
&lt;p&gt;The intro describes basic programming patterns for both client and server API as well as advanced techniques like server signals and middlewares.&lt;/p&gt;
&lt;p&gt;The main target of the talk is displaying an alternative to people who want to avoid classic WSGI frameworks (Django/Flask/Pyramid etc) limitations but found Twisted and Tornado too cumbersome.&lt;/p&gt;
</summary></entry><entry><title>Introduction to aiohttp</title><link href="http://pyvideo.org/europython-2016/introduction-to-aiohttp.html" rel="alternate"></link><published>2016-08-01T00:00:00+00:00</published><updated>2016-08-01T00:00:00+00:00</updated><author><name>Andrew Svetlov</name></author><id>tag:pyvideo.org,2016-08-01:europython-2016/introduction-to-aiohttp.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Andrew Svetlov - Introduction to aiohttp
[EuroPython 2016]
[20 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/introduction-to-aiohttp"&gt;https://ep2016.europython.eu//conference/talks/introduction-to-aiohttp&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;aiohttp is asynchronous HTTP client and server library built on top of asyncio.&lt;/p&gt;
&lt;p&gt;The intro describes basic programming patterns for both client
and server API as well as more advanced techniques.&lt;/p&gt;
&lt;p&gt;The main target of the talk is displaying an alternative to
people who want to avoid classic WSGI
frameworks (Django/Flask/Pyramid etc) limitations but found
Twisted and Tornado too cumbersome.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;aiohttp is asynchronous HTTP client and server library built on top of asyncio.&lt;/p&gt;
&lt;p&gt;The library  allows to write user friendly code which looks like well-known
linear one (requests library for client and Django/Flask/Pyramid for
server) but utilizes the power of non-blocking sockets and
supports websockets natively.&lt;/p&gt;
&lt;p&gt;The intro describes basic programming patterns for both client
and server API as well as more advanced techniques.
Tips and tricks for writing asyncio-based code are included as well.&lt;/p&gt;
&lt;p&gt;The main target of the talk is displaying an alternative to
people who want to avoid classic WSGI
frameworks (Django/Flask/Pyramid etc) limitations but found
Twisted and Tornado too cumbersome.&lt;/p&gt;
&lt;p&gt;Dive into aiohttp usage with the library author.&lt;/p&gt;
</summary></entry></feed>