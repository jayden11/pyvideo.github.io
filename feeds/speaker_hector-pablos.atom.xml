<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_hector-pablos.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-10-08T00:00:00+00:00</updated><entry><title>Adelgazando los modelos de Django</title><link href="http://pyvideo.org/pycon-es-2016/adelgazando-los-modelos-de-django.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Héctor Pablos</name></author><id>tag:pyvideo.org,2016-10-08:pycon-es-2016/adelgazando-los-modelos-de-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Probablemente empezaste creando una aplicación de Django que podía presumir de &amp;quot;limpia&amp;quot;. Tus modelos tienen un par de métodos añadidos, con lógica sencilla. Tus vistas hacen consultas simples y devuelven templates con un contexto razonable.&lt;/p&gt;
&lt;p&gt;Con el tiempo, los modelos empiezan a cambiar, necesitas hacer vistas que devuelven contextos con datos más complejos, aumenta la cantidad de métodos en los modelos, las vistas empiezan a implementar lógica y, ahora que lo piensas, puedes reutilizar esa función, así que la sacas a un módulo de utilidades, quizá lo decides bautizar como controlador.&lt;/p&gt;
&lt;p&gt;Después de todas esas fantásticas nuevas features que has conseguido implementar, tienes modelos de cientos de líneas, lógica desparramada en varios ¨controladores&amp;quot; que importas en tantos módulos que, cada vez que creas uno nuevo, optas por copiar y pegar los import de siempre. Ah, y cada vista tienen más lógica que tu trabajo fin de carrera. ¿En cual de los &amp;quot;controladores&amp;quot; estaba esa función que te da una lista de ids y nombres de usuarios con datos sobres sus vehículos y sus casas? ¿En el controlador de usuarios, el de vehículos, el de casas o el controlador de controladores?&lt;/p&gt;
&lt;p&gt;No te preocupes, hay varias soluciones. Nosotros te proponemos la que utilizamos en StyleSage, basada en una clara división de responsabilidades entre modelos, proxy models, managers y vistas. Verás como lo encuentras todo a la primera, ¡Y sin dependencias circulares!&lt;/p&gt;
&lt;p&gt;Presentación disponible en &lt;a class="reference external" href="http://slides.com/hectorpablos/adelgazando-modelos-django"&gt;http://slides.com/hectorpablos/adelgazando-modelos-django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://2016.es.pycon.org/"&gt;http://2016.es.pycon.org/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>