<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_peadar-coyle.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-05-06T00:00:00+00:00</updated><entry><title>Variational Inference and Python</title><link href="http://pyvideo.org/pydata-london-2017/variational-inference-and-python.html" rel="alternate"></link><published>2017-05-06T00:00:00+00:00</published><updated>2017-05-06T00:00:00+00:00</updated><author><name>Peadar Coyle</name></author><id>tag:pyvideo.org,2017-05-06:pydata-london-2017/variational-inference-and-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Filmed at PyData London 2017&lt;/p&gt;
&lt;p&gt;Description
Recent improvements in Probabilistic Programming have led to a new method called Variational Inference. This is an alternative method to the standard method of Markov Chain Monte-Carlo. We'll discuss these methods in PyMC3 and Edward, explain the theory and the limitations and apply these methods to realistic examples.&lt;/p&gt;
&lt;p&gt;Abstract
The state of the nation
There are currently three big trends in machine learning: Probabilistic Programming, Deep Learning and &amp;quot;Big Data&amp;quot;. Inside of PP, a lot of innovation is in making things scale using Variational Inference. In this talk , I will show how to use Variational Inference in PyMC3 to fit a simple Bayesian Neural Network. I will also discuss how bridging Probabilistic Programming and Deep Learning can open up very interesting avenues to explore in future research.&lt;/p&gt;
&lt;p&gt;Probabilistic Programming
Probabilistic Programming allows very flexible creation of custom probabilistic models and is mainly concerned with insight and learning from your data. The approach is inherently Bayesian so we can specify priors to inform and constrain our models and get uncertainty estimation in form of a posterior distribution. Using MCMC sampling algorithms we can draw samples from this posterior to very flexibly estimate these models. PyMC3 and Stan are the current state-of-the-art tools to consruct and estimate these models.&lt;/p&gt;
&lt;p&gt;One major drawback of sampling, however, is that it's often very slow, especially for high-dimensional models. That's why more recently, variational inference algorithms have been developed that are almost as flexible as MCMC but much faster. Instead of drawing samples from the posterior, these algorithms instead fit a distribution (e.g. normal) to the posterior turning a sampling problem into and optimization problem. ADVI -- Automatic Differentation Variational Inference -- is implemented in PyMC3 and Stan, as well as a new package called Edward which is mainly concerned with Variational Inference.&lt;/p&gt;
&lt;p&gt;In this talk we'll apply these methods of Variational Inference to regression and neural network problems, and explain the advantages for solving big data problems in probabilistic programming. You'll leave this talk with methods you can apply in your own work, and will showcase some of the new features in PyMC3 and Edward.&lt;/p&gt;
&lt;p&gt;The speakers are both contributors to PyMC3.&lt;/p&gt;
</summary></entry><entry><title>An exploration of Rugby Data using Python and Bayesian Statistics (PyData)</title><link href="http://pyvideo.org/pycon-ireland-2015/an-exploration-of-rugby-data-using-python-and-bayesian-statistics-pydata.html" rel="alternate"></link><published>2015-10-24T00:00:00+00:00</published><updated>2015-10-24T00:00:00+00:00</updated><author><name>Peadar Coyle</name></author><id>tag:pyvideo.org,2015-10-24:pycon-ireland-2015/an-exploration-of-rugby-data-using-python-and-bayesian-statistics-pydata.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The World Cup of Rugby is on. Join me as I talk about how you can use Python and the PyData stack to gain insight into Rugby.
I've a case study from the Six Nations last year, where I leveraged Bayesian Statistics to extract insight.
I'll also give other examples of the power of PyMC3.&lt;/p&gt;
</summary></entry><entry><title>Probabilistic Programming and Sports Analytics</title><link href="http://pyvideo.org/euroscipy-2015/probabilistic-programming-and-sports-analytics.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Peadar Coyle</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/probabilistic-programming-and-sports-analytics.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you use Probabilistic Programming and PyMC to predict the Six Nations Rugby?&lt;/p&gt;
</summary></entry><entry><title>Lies damned lies and statistics in Python</title><link href="http://pyvideo.org/pydata-london-2016/peadar-coyle-lies-damned-lies-and-statistics-in-python.html" rel="alternate"></link><published>2016-05-11T00:00:00+00:00</published><updated>2016-05-11T00:00:00+00:00</updated><author><name>Peadar Coyle</name></author><id>tag:pyvideo.org,2016-05-11:pydata-london-2016/peadar-coyle-lies-damned-lies-and-statistics-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData London 2016&lt;/p&gt;
&lt;p&gt;Join Peadar as he talks you through how to do good statistical analysis with Statsmodels, scikit-learn and PyMC3&lt;/p&gt;
&lt;p&gt;We'll compare and debug models (logistic regression and more advanced versions) in three different statistics packages in Python.&lt;/p&gt;
&lt;p&gt;Peadar will show you how Python can help you fake statistics without having to open up your graduate textbook :)&lt;/p&gt;
&lt;p&gt;Statistical inference is a fundamental tool in science and engineering, but it is often poorly understood. This tutorial will take you from first principles through how to do good statistical analysis in Python.&lt;/p&gt;
&lt;p&gt;Both frequentist and Bayesian versions will be included, and attendees will leave the talk with a good understanding of statistical inference, how to use Scikit-learn, Statsmodels and PyMC3.&lt;/p&gt;
&lt;p&gt;This will be an entire case study comparing three different libraries for solving the same regression problem.&lt;/p&gt;
&lt;p&gt;Attendees should bring a Laptop with Anaconda installed and the latest version of Scikitlearn, PyMC3 and Scikit-Learn.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://slides.com/springcoil/deck-17#/"&gt;http://slides.com/springcoil/deck-17#/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Repo:  &lt;a class="reference external" href="https://github.com/springcoil/PyDataLondonTutorial"&gt;https://github.com/springcoil/PyDataLondonTutorial&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>How to get Data Science Models into production on a budget</title><link href="http://pyvideo.org/pycon-italia-2015/how-to-get-data-science-models-into-production-on.html" rel="alternate"></link><published>2015-05-29T00:00:00+00:00</published><updated>2015-05-29T00:00:00+00:00</updated><author><name>Peadar Coyle</name></author><id>tag:pyvideo.org,2015-05-29:pycon-italia-2015/how-to-get-data-science-models-into-production-on.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the biggest challenges we have as data scientists is getting our
models into production. I’ve worked with Java developers to get models
into production and there aren’t always the same libraries in Java as
there are in Python. Example try porting Scikitlearn code to Java.
Possible solution: PMML (from last time) or you write spec. An even
better solution: I will explain how to use Science Ops from YhatHQ to
build better data products. Specifically I will talk about how to use a
Python, Pandas etc to build a model. Test it locally and then deploy it
so thatdevelopers can get an easy to use RESTful API. I will remark some
of my experiences from working with it, and give a use case and some
architectural remarks. I’ll also give a run down of alternatives to
Science Ops that I’ve found. Pre Requisites - some experience with
Pandas and the scientific Python would be beneficial. This talk is aimed
at Data Science enthusiasts or professionals.&lt;/p&gt;
</summary></entry></feed>