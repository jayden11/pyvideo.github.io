<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_sanket-saurav.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-02-17T00:00:00+00:00</updated><entry><title>Django on Steroids -- Lessons from Scale</title><link href="http://pyvideo.org/pycon-pune-2017/django-on-steroids-lessons-from-scale.html" rel="alternate"></link><published>2017-02-17T00:00:00+00:00</published><updated>2017-02-17T00:00:00+00:00</updated><author><name>Sanket Saurav</name></author><id>tag:pyvideo.org,2017-02-17:pycon-pune-2017/django-on-steroids-lessons-from-scale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk summarizes my learnings (best practices and gotchas) by using
Django as the core application engine in a production application for
the past two years at DoSelect. I’ll discuss about the common, and
&lt;em&gt;not-so-common&lt;/em&gt; patterns you should take care of when you hit scale with
Django, complete with real- life scenarios. Topics include
(non-exhaustive) – production server configuration, best practices when
using Django as provider for an SPA (Single-page app), caching, query
optimization while using the ORM, gotchas while using async tasks, et
al.&lt;/p&gt;
&lt;p&gt;The talk is intended for people who have a basic knowlegde of Python /
Django, know how web applications work in general. Key take-aways would
be things you can directly drop into your production Django application
for better performance.&lt;/p&gt;
&lt;div class="section" id="the-usual-suspects"&gt;
&lt;h4&gt;The Usual Suspects&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Tuning your web server configuration (using Nginx and Gunicorn as
example)&lt;/li&gt;
&lt;li&gt;Caching whatever you can, but no more&lt;/li&gt;
&lt;li&gt;How to write Django ORM queries that scale&lt;/li&gt;
&lt;li&gt;When NOT to write Django ORM queries&lt;/li&gt;
&lt;li&gt;Async tasks while maintaining data consistency&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="the-non-usual-suspects"&gt;
&lt;h4&gt;The Non-usual Suspects&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Using Django with an SPA front-end&lt;/li&gt;
&lt;li&gt;Scaling Postgres while scaling Django&lt;/li&gt;
&lt;li&gt;Optmizing async task runners (more stuff to be added)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The talk will include real-world code examples while illustating the
points above – explaining what we faced in production, and how we solved
it (and then realized that’s what we should have done in the first
place). I plan to have a bit longer Q&amp;amp;A session, due to the nature of
this talk.&lt;/p&gt;
&lt;/div&gt;
</summary></entry></feed>