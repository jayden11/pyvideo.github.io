<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sat, 31 Jan 2015 00:00:00 +0000</lastBuildDate><item><title>Введение в aiohttp</title><link>http://pyvideo.org/pycon-belarus-2015/vvedenie-v-aiohttp.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;aiohttp -- это HTTP Web сервер и клиент для asyncio (PEP-3156). Лекция
даёт общее представление о библиотеке, показывает как выполнять
клиентские запросы и строить Web сервер с поточной выдачей и
Web-сокетами.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Андрей Светлов</dc:creator><pubDate>Sat, 31 Jan 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-01-31:pycon-belarus-2015/vvedenie-v-aiohttp.html</guid></item><item><title>Как не надо делать, чтобы ваш Open Source продукт стал пользоваться успехом</title><link>http://pyvideo.org/pycon-russia-2014/kak-ne-nado-delat-chtoby-vash-open-source-produkt-stal-polzovatsia-uspekhom.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Вы запилили нечто очень полезное и даже выложили на github.Только этим никто не пользуется.
Разбираем проблемы, ищем решение.
Чтобы на поделку обратили внимание нужны:
-- Социальность и публичность
-- Документация
-- Тесты
-- Система контроля версий (версии, релизы) и багтрекер
-- setup.py, pypi и readthedocs&lt;/p&gt;
&lt;p&gt;И, наконец, Программный Код.
-- Ясность интерфейсов и абстракций
-- Четкое разделение на Public API и детали реализации (напишешь пером - не вырубишь и топором)
-- Docstrings
-- Выбор хороших имен классов-методов
-- Естественная полнота Public API
-- Следование устоявшимся соглашениям
-- магические методы
-- collections.abc
-- предметная область или почему нельзя перегружать &amp;quot;+&amp;quot; для матрицы.&lt;/p&gt;
&lt;p&gt;Каждый пункт снабжен примерами и антипримерами.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Андрей Светлов</dc:creator><pubDate>Tue, 03 Jun 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-06-03:pycon-russia-2014/kak-ne-nado-delat-chtoby-vash-open-source-produkt-stal-polzovatsia-uspekhom.html</guid></item><item><title>Как писать для asyncio. Советы от разработчика библиотеки.</title><link>http://pyvideo.org/pycon-russia-2014/kak-pisat-dlia-asyncio-sovety-ot-razrabotchika-biblioteki.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;В Python 3.4 вошла стандартная библиотека asyncio для асинхронного сетевого программирования.
Она строилась с учетом опыта использования Twisted и Tornado, авторы этих библиотек принимали участие в обсуждениях и выработке концепций.
В результате получилось очень неплохо.
Тем не менее пока что мало информации по правильному использованию и написанию кода для asyncio -- по сути есть только документация и несколько постов в блогах.
Лекция включает
Обзор базовых примитивов и принципов построения пользовательского кода.
Какие части библиотеки предназначены для &amp;quot;простого программиста&amp;quot;
Что не нужно использовать, т.к. некоторые API слишком низкоуровневые и нужны только создания &amp;quot;человеческих&amp;quot; библиотек.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Андрей Светлов</dc:creator><pubDate>Tue, 03 Jun 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-06-03:pycon-russia-2014/kak-pisat-dlia-asyncio-sovety-ot-razrabotchika-biblioteki.html</guid></item></channel></rss>