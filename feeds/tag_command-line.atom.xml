<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_command-line.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-06-20T00:00:00+00:00</updated><entry><title>External Commands</title><link href="http://pyvideo.org/scipyla-2016/external-commands.html" rel="alternate"></link><published>2016-06-20T00:00:00+00:00</published><updated>2016-06-20T00:00:00+00:00</updated><author><name>Juan Cabral</name></author><id>tag:pyvideo.org,2016-06-20:scipyla-2016/external-commands.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Palestrante: Juan Cabral&lt;/p&gt;
&lt;p&gt;Resumo:
Probably as a scientist you need to develop your fancy new experiment code around some obscure inherited piece of legacy software in some obscure language. In the worst scenario you can't access the original source code. The only alternative is (sadly) run the command and capture their output. This dissertation try to review all the available alternatives to interact with external commands in Python.&lt;/p&gt;
</summary><category term="command line"></category></entry></feed>