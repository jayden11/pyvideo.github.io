<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_mark-williams.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-05-20T00:00:00+00:00</updated><entry><title>Designing secure APIs with state machines</title><link href="http://pyvideo.org/pycon-us-2017/designing-secure-apis-with-state-machines.html" rel="alternate"></link><published>2017-05-20T00:00:00+00:00</published><updated>2017-05-20T00:00:00+00:00</updated><author><name>Ashwini Oruganti</name></author><id>tag:pyvideo.org,2017-05-20:pycon-us-2017/designing-secure-apis-with-state-machines.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Did you ever need to create an application whose behavior varies with
its state, while still presenting a consistent interface to its callers?
A good, layered design using state machines can help avoid the tedious
'if' checks for flags, and ensure that if your code runs at all, it will
run with all the required values initialized. I will demonstrate this
with examples, and talk about some available tools and libraries to
build state machines in Python.&lt;/p&gt;
&lt;p&gt;I will also discuss how to effectively use the process of threat
modeling to build secure web applications. Threat modeling is a computer
security technique that helps you better understand the systems you
create, identify attacks, and build defenses. I will talk about things
that we, as software developers, can do to assess the security of our
applications in the real world through this process.&lt;/p&gt;
</summary></entry></feed>