<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Tue, 31 May 2016 00:00:00 +0000</lastBuildDate><item><title>Metaprogramación Práctica</title><link>http://pyvideo.org/pycon-es-2014/metaprogramacion-practica.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Metaprogramar es la acción de escribir programas con la habilidad de tratarse a sí mismos o a otros programas como si fueran datos. Esto quiere decir que un programa se puede diseñar para leer, generar, analizar y/o transformar otros programas, incluso modificarse a sí mismo mientras se ejecuta. - Gracias Wikipedia ;)&lt;/p&gt;
&lt;p&gt;Durante esta charla repasaremos algunos ejemplos de nuestro día a día, con la intención de desmitificar esta práctica y de comprender los beneficios que nos aporta su buen uso.&amp;quot;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roberto Martinez</dc:creator><pubDate>Wed, 08 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-08:pycon-es-2014/metaprogramacion-practica.html</guid><category>metaprogramming</category></item><item><title>What Is and What Can Be: An Exploration from `type` to Metaclasses</title><link>http://pyvideo.org/pycon-us-2016/dustin-ingram-what-is-and-what-can-be-an-exploration-from-type-to-metaclasses-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dustin Ingram&lt;/p&gt;
&lt;p&gt;Most of us use &lt;cite&gt;type&lt;/cite&gt; every day, but few can say they know it well. This talk explores &lt;cite&gt;type&lt;/cite&gt; and along the way, reveals how it relates to &lt;cite&gt;object&lt;/cite&gt;, &lt;cite&gt;class&lt;/cite&gt; and more, eventually arriving at deeper understanding of metaclasses in Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/dustin-ingram-what-is-and-what-can-be-an-exploration-from-type-to-metaclasses-pycon-2016.html</guid><category>metaclasses</category><category>metaprogramming</category><category>types</category></item><item><title>Python Metaprogramming (#64)</title><link>http://pyvideo.org/pycon-us-2010/pycon-2010--python-metaprogramming---64.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Metaprogramming&lt;/p&gt;
&lt;p&gt;Presented by Nicolas Lara&lt;/p&gt;
&lt;p&gt;Python makes a great metaprogramming languages. Metaprogramming is great
for solving problems faster, in a more generic way and providing rich
APIs. This talk explores the different options provided in python to do
metaprogramming and the right way to use them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicolas Lara</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--python-metaprogramming---64.html</guid><category>metaprogramming</category><category>pycon</category><category>pycon2010</category></item></channel></rss>