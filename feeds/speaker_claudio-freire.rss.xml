<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Fri, 25 Nov 2016 00:00:00 +0000</lastBuildDate><item><title>Caching para hordas y estampidas</title><link>http://pyvideo.org/pycon-uy-2013/caching-para-hordas-y-estampidas.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Caching para muchos es functools.lrucache, o (dios) un diccionario. Para muchos es memcache y chau pichi. Pero cuando se implementa a gran escala, las hordas y las estampidas, ambas de miedo por sí solas, se juntan en el fenómeno de las &amp;quot;stampeding herds&amp;quot;. No es moco'e pavo combatir semejante alianza, y en esta charla, espero introducir a quienes estén interesados al mundo del cacheo más complejo, del que hace falta cuando se tienen decenas de servers en unísono.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Claudio Freire</dc:creator><pubDate>Sat, 02 Nov 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-11-02:pycon-uy-2013/caching-para-hordas-y-estampidas.html</guid></item><item><title>Compartiendo memoria eficientemente con proxies</title><link>http://pyvideo.org/pycon-ar-2016/compartiendo-memoria-eficientemente-con-proxies.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyconAR 2016 - Bahía Blanca&lt;/p&gt;
&lt;p&gt;Compartiendo memoria eficientemente con proxies por Claudio Freire&lt;/p&gt;
&lt;p&gt;Audience level: Avanzada&lt;/p&gt;
&lt;p&gt;Descripción&lt;/p&gt;
&lt;p&gt;¿Cuántas tuviste que escalar, con multiprocessing, o tu framework favorito? ¿Notaste que los requisitos de memoria se te iban a las nubes? Presentaré una lib recién salida de la panadería, sharedbuffers, y las técnicas y conceptos detrás de la misma. Cómo crear segmentos de memoria compartida, cómo usarlos para compartir objetos y estructuras complejas, e incluso que no entran en memoria.&lt;/p&gt;
&lt;p&gt;Resumen&lt;/p&gt;
&lt;p&gt;La charla intenta exponer dos cosas:&lt;/p&gt;
&lt;p&gt;Por un lado, técnicas interesantes para compartir memoria de forma eficiente en Python, algo que suele ser complejo con las herramientas normalmente a disposición de los desarrolladores.&lt;/p&gt;
&lt;p&gt;Por otro lado, expone una librería que hice a tal efecto, sharedbuffers, con el objetivo de hacer la tarea más sencilla para el próximo que intente.&lt;/p&gt;
&lt;p&gt;Se van a cubrir conceptos de alto nivel, aptos para usuarios intermedios, como es el uso de la librería, pero para poder sacar el provecho máximo a la charla, en particular la segunda parte en que se exponen los detalles de la implementación, es necesario tener conocimientos más avanzados. Así que la estoy marcando como una charla avanzada.&lt;/p&gt;
&lt;p&gt;Y sí, no tengo ni idea si se dice librería o biblioteca. Pero se instala en /usr/lib así que yo le digo librería :-p&lt;/p&gt;
&lt;p&gt;El flujo de la charla está planeado a grandes rasgos como sigue:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Motivación 4'&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;El cache que no entra en memoria 7 veces&lt;/li&gt;
&lt;li&gt;Cuando el costo de serialización se vuelve prohibitivo&lt;/li&gt;
&lt;li&gt;Transición de un cache a un bundle compartido&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Ejemplo rápido 3'&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Base de user agents de 30GB&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;La técnica por arriba 12'&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Compartiendo un buffer de bytes mediante archivos mapeados 2'&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Embebiendo objetos simples en el buffer 5'&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Definición de schemas 2'&lt;/li&gt;
&lt;li&gt;Manipulación sin deserialización con proxies 3'&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Complejizando los objetos 5'&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Colecciones 1'&lt;/li&gt;
&lt;li&gt;Estructuras jerárquicas 2'&lt;/li&gt;
&lt;li&gt;Estructuras cíclicas 2'&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;La técnica a bajo nivel 16'&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Estructura en memoria de un objeto 4'&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Atributos con tipos estáticos&lt;/li&gt;
&lt;li&gt;Wrappers con RTTI para atributos con tipo dinámico&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Secuencias lineales 4'&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Mapeos 8'&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;El hash table compacto 5'&lt;/li&gt;
&lt;li&gt;Características de performance 3'&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Logrando que vaya rápido 6'&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Cython magic 3'&lt;/li&gt;
&lt;li&gt;Reuso de proxies, transmutación de tipos 3'&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;El futuro 4'&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Compatibilidad/chequeo de schemas 1'&lt;/li&gt;
&lt;li&gt;Proxies transparentes transmutando mixins 1'&lt;/li&gt;
&lt;li&gt;Estructuras mutables y lockless 2'&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Preguntas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slides:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Slides de la charla, en &lt;a class="reference external" href="http://ar.pycon.org/proposals/document/6/2003fb75-dd55-44f1-90ca-d1496e8a818a.pdf"&gt;formato pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Slides de la charla, en &lt;a class="reference external" href="http://ar.pycon.org/proposals/document/5/ff4059c7-f10e-4c1f-b34e-47739f212464.odp"&gt;formato libreoffice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Claudio Freire</dc:creator><pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-11-25:pycon-ar-2016/compartiendo-memoria-eficientemente-con-proxies.html</guid></item></channel></rss>