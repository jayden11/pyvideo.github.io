<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Thu, 11 Aug 2016 00:00:00 +0000</lastBuildDate><item><title>Practical Metaclasses and Decorators</title><link>http://pyvideo.org/pycon-israel-2016/practical-metaclasses-and-decorators.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python gives developers direct control over every stage of the OOP process. Metaclasses are the framework used in creating classes themselves and descriptors are what goes on behind the scene when you call a function or set an attribute. These programming tools are often considered to be among the black magic tools of expert python developers. However, they are not as scary as they look. In this talk, I will explain how metaclasses work and present some practical examples, including a minimally invasive way to add full usage/error logging to your entire application. When you leave my talk, you will have a newfound understanding of the power that metaclass programming and descriptor manipulation can give you.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://il.pycon.org/2016/static/sessions/sim-zacks.pdf"&gt;http://il.pycon.org/2016/static/sessions/sim-zacks.pdf&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sim Zacks</dc:creator><pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-11:pycon-israel-2016/practical-metaclasses-and-decorators.html</guid></item></channel></rss>