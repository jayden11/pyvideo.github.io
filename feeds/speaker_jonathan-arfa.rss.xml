<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Tue, 20 Sep 2016 00:00:00 +0000</lastBuildDate><item><title>Algorithms to Sample From Streams - Reservoir Sampling &amp; Variants</title><link>http://pyvideo.org/pycon-israel-2016/algorithms-to-sample-from-streams-reservoir-sampling-variants.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Those of us who build systems that deal with constant streams of incoming data (which includes anybody whose code touches the internet) often need algorithms that keep a fixed-size sample from the stream for on-the-fly analytics. Reservoir sampling is a commonly used algorithm for keeping a sample that's unbiased over all events in the stream. But what if you want your algorithm to keep a representative sample from the past 10 minutes instead of the entire stream? In this talk I'll start with a gentle introduction to Reservoir sampling for those who are not familiar with it, and then discuss several variants which keep a sample that is biased towards the present. One of these is the VIRB (Variable Incoming Rate Biased) sampler, which we have developed in-house at Magnetic. This talk covers the same material as this blog post: &lt;a class="reference external" href="http://tech.magnetic.com/2016/04/virbs-sampling-events-from-streams.html"&gt;http://tech.magnetic.com/2016/04/virbs-sampling-events-from-streams.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://il.pycon.org/2016/static/sessions/jonathan-arfa.pdf"&gt;http://il.pycon.org/2016/static/sessions/jonathan-arfa.pdf&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Arfa</dc:creator><pubDate>Tue, 20 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-20:pycon-israel-2016/algorithms-to-sample-from-streams-reservoir-sampling-variants.html</guid></item></channel></rss>