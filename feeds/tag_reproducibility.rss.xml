<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 09 Oct 2016 00:00:00 +0000</lastBuildDate><item><title>You got your engineering in my Data Science: Addressing the reproducibility crisis</title><link>http://pyvideo.org/pydata-dc-2016/you-got-your-engineering-in-my-data-science-addressing-the-reproducibility-crisis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://www.slideshare.net/jonbodner/you-got-your-engineering-in-my-data-science-addressing-the-reproducibility-crisis-with-software-engineering"&gt;http://www.slideshare.net/jonbodner/you-got-your-engineering-in-my-data-science-addressing-the-reproducibility-crisis-with-software-engineering&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Data science is the backbone of modern scientific discovery and industry. Unfortunately, multiple recent studies have been found to be unreliable and non-reproducible. Adopting techniques from software engineering might help mitigate some of these problems.&lt;/p&gt;
&lt;p&gt;Data science is the backbone of modern scientific discovery and industry. It makes sense of everything from cancer trials to package delivery logistics. But all is not well with data science. Over the past decade, multiple studies have been found to be unreliable and non-reproducible when other scientists tried to recreate their results. This is due to a variety of factors, including fraud, pressure to publish, improper data handling practices, and bugs in analytic tools.&lt;/p&gt;
&lt;p&gt;The problems faced by data science mirror problems that software engineering has been trying to solve. While there are no silver bullets to guarantee quality software, techniques have been developed over time that have improved quality and reliability. Some of these techniques, including open source, version control, automation, and fuzzing could be adapted to the data science domain to improve reliability and help address the reproducibility crisis.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Bodner</dc:creator><pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-09:pydata-dc-2016/you-got-your-engineering-in-my-data-science-addressing-the-reproducibility-crisis.html</guid><category>Data</category><category>data science</category><category>engineering</category><category>reproducibility</category></item><item><title>More of your pandas questions answered!</title><link>http://pyvideo.org/data-school/pandas-23-viewer-questions.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this video, I'm answering a few of the pandas questions I've received in the YouTube comments: Could you explain how to read the pandas documentation? What is the difference between ufo.isnull() and pd.isnull(ufo)? Why are DataFrame slices inclusive when using .loc, but exclusive when using .iloc? How do I randomly sample rows from a DataFrame?&lt;/p&gt;
&lt;p&gt;This is video 23 of 30 in the series, &lt;a class="reference external" href="http://www.dataschool.io/easier-data-analysis-with-pandas/"&gt;Easier data analysis in Python with pandas&lt;/a&gt;. The notebook and datasets shown in the video are available on &lt;a class="reference external" href="https://github.com/justmarkham/pandas-videos"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Markham</dc:creator><pubDate>Tue, 05 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-05:data-school/pandas-23-viewer-questions.html</guid><category>data science</category><category>data analysis</category><category>data wrangling</category><category>data processing</category><category>pandas</category><category>tutorial</category><category>Data School</category><category>reproducibility</category></item><item><title>MPCite: Continuous and High-throughput Allocation of Digital Object Identifiers for Calculated and Contributed Data in the Materials Project</title><link>http://pyvideo.org/scipy-2016/mpcite-continuous-and-high-throughput-allocation-of-digital-object-identifiers-for-calculated-and.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We introduce 'MPCite' which enables the continuous request, validation, and dissemination of Digital Object Identifiers (DOIs) for all inorganic materials currently available in the Materials Project (&lt;a class="reference external" href="https://www.materialsproject.org/"&gt;https://www.materialsproject.org/&lt;/a&gt;). It provides our users with the necessary software infrastructure to achieve a new level of reproducibility in their research: It allows for the convenient and persistent citation of our materials data in online and print publications and facilitates sharing amongst collaborators. We also demonstrate how we extend the use of MPCite to non-core database entries such as theoretical and experimental data contributed through 'MPContribs' or suggested by the user for calculation via the â€œMPComplete' service. We expect MPCite to be easily extendable to other scientific domains where the number of data records demands high-throughput and continuous allocation of DOIs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Huck</dc:creator><pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-14:scipy-2016/mpcite-continuous-and-high-throughput-allocation-of-digital-object-identifiers-for-calculated-and.html</guid><category>reproducibility</category></item><item><title>A Portrait of One Scientist as a Graduate Student</title><link>http://pyvideo.org/scipy-2013/a-portrait-of-one-scientist-as-a-graduate-student.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;a focus on specific tools and techniques invaluable in doing research in
a reproducible manner.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Authors: Ivanov, Paul, UC Berkeley&lt;/p&gt;
&lt;p&gt;Track: General&lt;/p&gt;
&lt;p&gt;In this talk, I will focus on the how of reproducible research. I will
focus on specific tools and techniques I have found invaluable in doing
research in a reproducible manner. In particular, I will cover the
following general topics (with specific examples in parentheses):
version control and code provenance (git), code verification (test
driven development, nosetests), data integrity (sha1, md5, git-annex),
seed saving ( random seed retention ) distribution of datasets
(mirroring, git-annex, metalinks), light-weight analysis capture (
ttyrec, ipython notebook)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Ivanov</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:scipy-2013/a-portrait-of-one-scientist-as-a-graduate-student.html</guid><category>git</category><category>reproducibility</category></item><item><title>Emacs + org-mode + python in reproducible research; SciPy 2013 Presentation</title><link>http://pyvideo.org/scipy-2013/emacs-org-mode-python-in-reproducible-researc.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We discuss the use of emacs + org-mode + python in enabling reproducible
research.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Authors: Kitchin, John Carnegie Mellon University&lt;/p&gt;
&lt;p&gt;Track: Reproducible Science&lt;/p&gt;
&lt;p&gt;We will discuss the use of emacs + org-mode + python in enabling
reproducible research. This combination of software enables researchers
to intertwine narrative and mathematical text with figures and code that
is executable within a document, with capture of the output. Portions of
the document can be selectively exported to LaTeX, HTML, pdf and other
other formats. We have used this method to produce technical manuscripts
submitted for peer review in scientific journals, in the preparation of
two e-books (about 300 pages each) on using python in scientific and
engineering applications (&lt;a class="reference external" href="http://jkitchin.github.com/pycse"&gt;http://jkitchin.github.com/pycse&lt;/a&gt;), and in
using python in the modeling of the properties of materials with density
functional theory (&lt;a class="reference external" href="http://jkitchin.github.com/dft-book"&gt;http://jkitchin.github.com/dft-book&lt;/a&gt;), as well as a
python-powered blog at &lt;a class="reference external" href="http://jkitchin.github.com"&gt;http://jkitchin.github.com&lt;/a&gt;. Our experience
suggests all three components are critical for enabling reproducible
research in practice: an extensible editor, a markup language that
separates text, math, data and code, and an effective language such as
python. We will show examples of the pros and cons of this particular
implementation of editor/markup/code combination.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Kitchin</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:scipy-2013/emacs-org-mode-python-in-reproducible-researc.html</guid><category>emacs</category><category>reproducibility</category></item><item><title>Using Sumatra to Manage Numerical Simulations</title><link>http://pyvideo.org/scipy-2013/using-sumatra-to-manage-numerical-simulations-sc.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Sumatra is a lightweight system for recording the history and provenance
data for numerical simulations. ... The speaker will provide an
introduction to Sumatra as well as demonstrate some typical usage
patterns and discuss achievable future goals.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Authors: Davison, Andrew, CNRS (principal developer); Wheeler, Daniel,
NIST (speaker)&lt;/p&gt;
&lt;p&gt;Track: Reproducible Science&lt;/p&gt;
&lt;p&gt;Sumatra is a lightweight system for recording the history and provenance
data for numerical simulations. It works particularly well for
scientists that are in the intermediate stage between developing a code
base and using that code base for active research. This is a common
scenario and often results in a mode of development that mixes branching
for both code development and production simulations. Using Sumatra
avoids this unintended use of the versioning system by providing a
lightweight design for recording the provenance data independently from
the versioning system used for the code development. The lightweight
design of Sumatra fits well with existing ad-hoc patterns of simulation
management contrasting with more pervasive workflow tools, which can
require a wholesale alteration of work patterns. Sumatra uses a
straightforward Django-based data model enabling persistent data storage
independently from the Sumatra installation. Sumatra provides a command
line utility with a rudimentary web interface, but has the potential to
become a full web-based simulation management solution. During the talk,
the speaker will provide an introduction to Sumatra as well as
demonstrate some typical usage patterns and discuss achievable future
goals.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Wheeler</dc:creator><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-02:scipy-2013/using-sumatra-to-manage-numerical-simulations-sc.html</guid><category>numerical simulations</category><category>provenance</category><category>reproducibility</category><category>sumatra</category></item><item><title>SciPy 2013 Keynote: The New Scientific Publishers</title><link>http://pyvideo.org/scipy-2013/scipy-2013-keynote-the-new-scientific-publishers-0.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;...As software becomes increasingly important to the practice of
science, and data becomes larger and more complex, the conventional
scientific journal is no longer an adequate vehicle to communicate
scientific findings and ensure reproducibility. So who are the new
scientific publishers filling these needs, and what roles will they play
in the future of science?&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presenter: William Schroeder, Kitware&lt;/p&gt;
&lt;p&gt;Track: Keynotes&lt;/p&gt;
&lt;p&gt;Scientific societies such as the Royal Society were formed in the 17th
century with the goals of sharing information and ensuring
reproducibility. Very quickly scientific letters and publications were
assembled into collected transactions and eventually journals. For
hundreds of years publishers served admirably as disseminators of
scientific knowledge. Publications, and the associated peer review
process, became central to the scientific process, greatly impacting how
science is practiced, knowledge disseminated, and careers made. However,
as software becomes increasingly important to the practice of science,
and data becomes larger and more complex, the conventional scientific
journal is no longer an adequate vehicle to communicate scientific
findings and ensure reproducibility. So who are the new scientific
publishers filling these needs, and what roles will they play in the
future of science?&lt;/p&gt;
&lt;p&gt;In this presentation we'll discuss the central mandate of
reproducibility, and the role of Open Science, in particular Open
Access, Open Source and Open Data, and how emerging communities and
organizations are filling the needs of the scientific community. We'll
also discuss the challenges of curating the avalanche of scientific
knowledge, whether it be software, data or publications, and how these
communities and organizations can work together to support science
progress, and ensure continued technological innovation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">William Schroeder</dc:creator><pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-01:scipy-2013/scipy-2013-keynote-the-new-scientific-publishers-0.html</guid><category>open science</category><category>reproducibility</category></item></channel></rss>