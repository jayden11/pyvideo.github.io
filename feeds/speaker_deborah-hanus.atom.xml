<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_deborah-hanus.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-05-20T00:00:00+00:00</updated><entry><title>Lights, camera, action! Scraping a great dataset to predict Oscar winners</title><link href="http://pyvideo.org/pycon-us-2017/lights-camera-action-scraping-a-great-dataset-to-predict-oscar-winners.html" rel="alternate"></link><published>2017-05-20T00:00:00+00:00</published><updated>2017-05-20T00:00:00+00:00</updated><author><name>Deborah Hanus</name></author><id>tag:pyvideo.org,2017-05-20:pycon-us-2017/lights-camera-action-scraping-a-great-dataset-to-predict-oscar-winners.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Jupyter notebooks and scikit-learn, you’ll predict whether a movie
is likely to &lt;a class="reference external" href="http://oscarpredictor.github.io/"&gt;win an Oscar&lt;/a&gt; or be a
box office hit. Together, we’ll step through the creation of an
effective dataset: asking a question your data can answer, writing a web
scraper, and answering those questions using nothing but Python
libraries and data from the Internet.&lt;/p&gt;
</summary></entry><entry><title>Constructing Models to Deal with Missing Data</title><link href="http://pyvideo.org/scipy-2016/constructing-models-to-deal-with-missing-data-scipy-2016-deborah-hanus.html" rel="alternate"></link><published>2016-07-15T00:00:00+00:00</published><updated>2016-07-15T00:00:00+00:00</updated><author><name>Deborah Hanus</name></author><id>tag:pyvideo.org,2016-07-15:scipy-2016/constructing-models-to-deal-with-missing-data-scipy-2016-deborah-hanus.html</id><summary type="html"></summary><category term="SciPy 2016"></category><category term="data science"></category></entry><entry><title>How to “Scrape” Together a Great Dataset Using Things You Find on the Internet Using Python &amp; SciP</title><link href="http://pyvideo.org/scipy-2016/how-to-scrape-together-a-great-dataset-using-things-you-find-on-the-internet-using-python-scip.html" rel="alternate"></link><published>2016-07-14T00:00:00+00:00</published><updated>2016-07-14T00:00:00+00:00</updated><author><name>Deborah Hanus</name></author><id>tag:pyvideo.org,2016-07-14:scipy-2016/how-to-scrape-together-a-great-dataset-using-things-you-find-on-the-internet-using-python-scip.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using Jupyter notebooks and scikit-learn, you’ll predict whether a movie is likely to win an Oscar or be a box office hit. I’ll walk through the most important steps of creating an effective dataset using information that you find on the Internet: asking a question your data can answer, writing a web scraper, and answering those questions using nothing but Python libraries and data from the Internet. To illustrate how these steps fit together, I walk through building a dataset from IMDB data and use it to predict &lt;a class="reference external" href="http://oscarpredictor.github.io/"&gt;what makes a winning Oscar movie&lt;/a&gt;. To preview our findings, check out &lt;a class="reference external" href="https://youtu.be/84IZ8Gn6PJ"&gt;this trailer&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/oscarpredictor/oscar-predictor"&gt;github repository&lt;/a&gt;!&lt;/p&gt;
</summary><category term="scrapping"></category><category term="oscarpredictor"></category><category term="jupyter notebook"></category><category term="scikit-learn"></category></entry></feed>