<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sat, 07 Nov 2015 00:00:00 +0000</lastBuildDate><item><title>How Wave does database sharding with Django</title><link>http://pyvideo.org/pycon-ca-2015/how-wave-does-database-sharding-with-django-joseph.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn how we handle a large amount of data in Django by sharding the data using a developer friendly interface. I'll be talking about what we learned from our initial implementation and sharding style as well as the details we used in implementing a newer system.&lt;/p&gt;
&lt;p&gt;First, learn about why we shard, why you probably want to shard, what we originally tried and why it didn't work.&lt;/p&gt;
&lt;p&gt;Next, learn about how we re-implemented sharding including the router, unique id generation and all the code that went into the project.&lt;/p&gt;
&lt;p&gt;Finally, I'll touch on some of the more advanced topics such as shard re-balancing and dealing with replication lag time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joseph Kahn</dc:creator><pubDate>Sat, 07 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-07:pycon-ca-2015/how-wave-does-database-sharding-with-django-joseph.html</guid></item></channel></rss>