<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Thu, 04 Aug 2016 00:00:00 +0000</lastBuildDate><item><title>Real virtual environments without virtualenv</title><link>http://pyvideo.org/europython-2016/real-virtual-environments-without-virtualenv.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Mihai Iachimovschi - Real virtual environments without virtualenv
[EuroPython 2016]
[21 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/real-virtual-environments-without-virtualenv"&gt;https://ep2016.europython.eu//conference/talks/real-virtual-environments-without-virtualenv&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Virtualenv is a great tool for the development environment but it's
definitely not suitable for every use case. Also, Docker is great for
running the application in production, but not everyone that use it in
production tried to use it in the development environment. Why not use
the same tool from the beginning of the project and until it hits the
production in a uniform stack of tooling? This talk will show use
cases of using Docker in the process of development as well.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;The process of developing using Python is very straightforward and
easy. Still, each and every developer has his own style of developing
and building his entire dev environment. Most of us use virtualenvs
which are reliable and comfortable to use. But there are some issues.
For instance, the repeatability and immutability of the built
environment are not guaranteed.&lt;/p&gt;
&lt;p&gt;Virtualenv does a lot of work that targets the direction of somehow
isolated and independent environments. They are &lt;em&gt;almost&lt;/em&gt; &lt;em&gt;fully&lt;/em&gt;
repeatable. In any team, we can hear the notorious expression &amp;quot;It
works for me!&amp;quot;.&lt;/p&gt;
&lt;p&gt;For some time now, I am using Docker instead of virtualenv for
building custom and really-virtual environments that are entirely
isolated. The containers are immutable and consistent, so this
workflow guarantees repeatability.  Using such technique, not only
enables the user to have unique and immutable environments, it also
allows de developer to create full app architecture that can then be
tested and deployed as is. So the production version will be in
identical conditions as the one from the development environment.
These features are not provided by virtualenv at all.&lt;/p&gt;
&lt;p&gt;The goal of this exercise is to try to use totally different tooling
for building the application from its first line of code until the
production.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mihai Iachimovschi</dc:creator><pubDate>Thu, 04 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-04:europython-2016/real-virtual-environments-without-virtualenv.html</guid></item></channel></rss>