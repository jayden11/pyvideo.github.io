<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 05 Feb 2017 00:00:00 +0000</lastBuildDate><item><title>BDD To The Bone - Using Behave and Selenium to Test-Drive Web Applications</title><link>http://pyvideo.org/pytennessee-2017/bdd-to-the-bone-using-behave-and-selenium-to-test-drive-web-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever felt that unit tests just weren't enough? It feels like something always still goes wrong when your customers start to use your application. All your unit tests pass, so what is going on? In this talk, we're going to look how to use the behave library to explore behavior driven development as well as the selenium library to control your web application through a browser.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pat Viafore</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:pytennessee-2017/bdd-to-the-bone-using-behave-and-selenium-to-test-drive-web-applications.html</guid><category>selenium</category><category>bdd</category><category>behave</category><category>test-driver</category></item><item><title>Outside-In TDD</title><link>http://pyvideo.org/pycon-us-2016/harry-percival-outside-in-tdd-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Harry Percival&lt;/p&gt;
&lt;p&gt;An intermediate-level Test-Driven-Development workshop, presented as a hands-on exploration of &amp;quot;&amp;quot;outside-in&amp;quot;&amp;quot; TDD, in the style of a code-dojo code kata.  Will include discussion of &amp;quot;&amp;quot;double-loop&amp;quot;&amp;quot; BDD/TDD, outside-in vs inside-out, a detailed discussion of the pros + cons of mocking, test isolation, letting the tests drive design, and what are tests for anyway?&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harry Percival</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-06-09:pycon-us-2016/harry-percival-outside-in-tdd-pycon-2016.html</guid><category>testing</category><category>tdd</category><category>Django</category><category>bdd</category></item><item><title>Making Your Application Behave</title><link>http://pyvideo.org/pycon-au-2012/making-your-application-behave.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Behave is a tool for behaviour-driven development inspired by the
Cucumber tool for Ruby. It allows developers and stakeholders to agree
on how a particular piece of software should behave using an
English-like Given-When- Then syntax and f&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Behave is a tool for behaviour-driven development inspired by the
Cucumber tool for Ruby. It allows developers and stakeholders to agree
on how a particular piece of software should behave using an
English-like Given-When- Then syntax and for that behaviour for then to
be easily tested in whatever manner is appropriate.&lt;/p&gt;
&lt;p&gt;This presentation will provide an introduction to behaviour-driven
development, behaviour testing in general and the behave tool along with
its advantages over alternatives such as lettuce and freshen.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benno Rice</dc:creator><pubDate>Wed, 22 Aug 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-08-22:pycon-au-2012/making-your-application-behave.html</guid><category>bdd</category><category>behave</category></item></channel></rss>