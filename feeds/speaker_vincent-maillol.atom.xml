<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_vincent-maillol.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-10-15T00:00:00+00:00</updated><entry><title>L'utilisation des métaclasses</title><link href="http://pyvideo.org/pycon-fr-2015/lutilisation-des-metaclasses.html" rel="alternate"></link><published>2015-10-18T00:00:00+00:00</published><updated>2015-10-18T00:00:00+00:00</updated><author><name>vincent maillol</name></author><id>tag:pyvideo.org,2015-10-18:pycon-fr-2015/lutilisation-des-metaclasses.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Comprendre les métaclasses et de voir différents exemples d'utilisations&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Objet, Classe et... Métaclasse ! C'est une troisième dimension qui
s'ouvre dans laquelle, le design pattern observateur peut devenir
exhibitionniste, à nous de découvrir comment voyager dedans. Facilité
l'injection de dépendance, Offrir une API plus déclarative, concevoir
des métaframeworks. Les Métaclasses sont une fonctionnalité puissante et
peu utilisée que nous tenterons d'apprivoiser.&lt;/p&gt;
</summary></entry><entry><title>Utilisation de unittest</title><link href="http://pyvideo.org/pycon-fr-2015/utilisation-de-unittest.html" rel="alternate"></link><published>2015-10-18T00:00:00+00:00</published><updated>2015-10-18T00:00:00+00:00</updated><author><name>vincent maillol</name></author><id>tag:pyvideo.org,2015-10-18:pycon-fr-2015/utilisation-de-unittest.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Apprendre à utiliser le module unittest&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;À quoi servent les tests unitaires ? Comment les écrire ? Quand utiliser
Mock et quand ne pas l'utiliser ?&lt;/p&gt;
&lt;p&gt;Une conférence sur comment prendre en main le module unittest et qui
conclue sur quelques astuces pour ne pas tomber dans le piège d'avoir
plus de tests à maintenir que de code.&lt;/p&gt;
</summary></entry><entry><title>La programmation asynchrone avec Python.</title><link href="http://pyvideo.org/pycon-fr-2016/la-programmation-asynchrone-avec-python.html" rel="alternate"></link><published>2016-10-15T00:00:00+00:00</published><updated>2016-10-15T00:00:00+00:00</updated><author><name>Vincent Maillol</name></author><id>tag:pyvideo.org,2016-10-15:pycon-fr-2016/la-programmation-asynchrone-avec-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Coroutine, boucle d'événement, entrés sorties non-blocantes ...
Besoin de faire le tri ?
Depuis plusieurs années de plus en plus d'outils facilitent la programmation asynchrone. Un monde qui peut paraitre étrange dans lequel des serveurs gèrent des millier de connections simultanément sans utiliser de threads.
Cette présentation explique les différents concepts de la programmation asynchrone et l'évolution de celle-ci avec l'arrivée des nouveaux mots clé async et await dans python 3.5.
Nous verrons comment utiliser la librairie Asyncio, qui est à python ce que NodeJS est à JavaScript, puis nous découvrirons comment faire du web asynchrone grâce au framework Tornado et comment faire un pont entre Asyncio et Tornado.&lt;/p&gt;
</summary></entry></feed>