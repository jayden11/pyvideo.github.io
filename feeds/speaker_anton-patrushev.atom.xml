<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_anton-patrushev.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2015-09-19T00:00:00+00:00</updated><entry><title>Оптимизация: на грани и за</title><link href="http://pyvideo.org/pycon-russia-2015/optimizatsiia-na-grani-i-za.html" rel="alternate"></link><published>2015-09-19T00:00:00+00:00</published><updated>2015-09-19T00:00:00+00:00</updated><author><name>Anton Patrushev</name></author><id>tag:pyvideo.org,2015-09-19:pycon-russia-2015/optimizatsiia-na-grani-i-za.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Нередко при разработке мы сталкиваемся с ситуациями, когда для увеличения производительности приложения надо делать крупные рефакторинги, менять архитектуру. Но что делать, если на это нет времени и производительность нужна прямо здесь и сейчас? Конечно, в первую очередь, нужно прибегнуть к традиционной медицине — профилировать и править узкие места. Но об этом уже сказано очень много. Я бы хотел рассказать о нескольких нетрадиционных техниках, которые мне однажды помогли побороть проблемы с производительностью:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Жизнь без GC: как и зачем?&lt;/li&gt;
&lt;li&gt;Выжмем ещё немного, не переписывая весь код: модификация AST при импорте;&lt;/li&gt;
&lt;li&gt;Декораторы и байткод: пару процентов почти за просто так.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>