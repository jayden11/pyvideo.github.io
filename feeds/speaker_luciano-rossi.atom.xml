<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_luciano-rossi.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-11-25T00:00:00+00:00</updated><entry><title>Desarrollando aplicaciones con el framework Tryton</title><link href="http://pyvideo.org/pycon-ar-2016/desarrollando-aplicaciones-con-el-framework-tryton.html" rel="alternate"></link><published>2016-11-25T00:00:00+00:00</published><updated>2016-11-25T00:00:00+00:00</updated><author><name>Luciano Rossi</name></author><id>tag:pyvideo.org,2016-11-25:pycon-ar-2016/desarrollando-aplicaciones-con-el-framework-tryton.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyconAR 2016 - Bahia Blanca&lt;/p&gt;
&lt;p&gt;Desarrollando aplicaciones con el framework Tryton por Luciano Rossi (lukio), Sebastián Marró&lt;/p&gt;
&lt;p&gt;Audience level: Intermedia&lt;/p&gt;
&lt;p&gt;Descripción&lt;/p&gt;
&lt;p&gt;Tryton (www.tryton.org) ofrece todas las funcionalidades necesarias de una plataforma de desarrollo de aplicaciones libre completa: persistencia de datos, extensa modularidad, administración de usuarios (autenticación, control detallado de acceso a los datos, manejo concurrente a recursos), flujos de trabajo y motores de reportes, servicios web e internacionalización. ¡Desarrollando con Tryton!&lt;/p&gt;
&lt;p&gt;Resumen&lt;/p&gt;
&lt;p&gt;Tryton ofrece todas las funcionalidades necesarias de una plataforma de desarrollo de aplicaciones libre completa: persistencia de datos, extensa modularidad, administración de usuarios (autenticación, control detallado de acceso a los datos, manejo concurrente a recursos), flujos de trabajo y motores de reportes, servicios web e internacionalización.&lt;/p&gt;
&lt;p&gt;Dicho todo esto, la idea es mostrar como el framework Tryton se pueden desarrollar aplicaciones repasando por las funciones más importantes y por algunos de sus highlights a la hora de poder integrarse con otros sistemas totalmente distintos utilizando por ejemplo Tryton como backend de flask bajo la herramienta flask_tryton (&lt;a class="reference external" href="https://pypi.python.org/pypi/flask_tryton"&gt;https://pypi.python.org/pypi/flask_tryton&lt;/a&gt;)&lt;/p&gt;
</summary></entry></feed>