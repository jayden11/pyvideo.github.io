<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_http.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2013-10-15T00:00:00+00:00</updated><entry><title>PyOhio 2011: Creating Web APIs that are a joy to use</title><link href="http://pyvideo.org/pyohio-2011/pyohio-2011--creating-web-apis-that-are-a-joy-to-.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Issac Kelly</name></author><id>tag:pyvideo.org,1990-01-01:pyohio-2011/pyohio-2011--creating-web-apis-that-are-a-joy-to-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Creating Web APIs that are a joy to use&lt;/p&gt;
&lt;p&gt;Presented by Issac Kelly&lt;/p&gt;
&lt;p&gt;Issac is an avid API consumer. He&amp;amp;aposll cover how to make an API that
is not terrible. This is apparently very difficult to do, and many
anti-patterns will be shown. No care will be taken to protect the
guilty. This talk is not as focused on Python, as it is on creating Web
APIs, and an understanding of HTTP is assumed.&lt;/p&gt;
</summary><category term="api"></category><category term="http"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="webapi"></category></entry><entry><title>Echtzeit Web-Apps mit Mushroom</title><link href="http://pyvideo.org/pycon-de-2013/echtzeit-web-apps-mit-mushroom.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Michael P. Jung</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/echtzeit-web-apps-mit-mushroom.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;&lt;a class="reference external" href="https://bitbucket.org/terreon/mushroom"&gt;Mushroom&lt;/a&gt; ist ein einfach zu
verwendendes Echtzeit-Web-Messaging-Framework, welches neben
Browser-Push-Nachrichten auch Funktionen für die
Interprozesskommunikation zur Verfügung stellt.&lt;/p&gt;
&lt;p&gt;Dieser Vortrag versucht, Lust auf das Echtzeit-Web zu machen und
beantwortet grundlegende Fragen zu Themen wie Skalierbarkeit und
Deployment.&lt;/p&gt;
</summary><category term="echtzeit"></category><category term="gevent"></category><category term="http"></category><category term="ipc"></category><category term="javascript"></category><category term="long polling"></category><category term="messagin"></category><category term="mushroom"></category><category term="network"></category><category term="python"></category><category term="real-time"></category><category term="websocket"></category></entry><entry><title>Hacking the Social Web with Python</title><link href="http://pyvideo.org/pycon-us-2010/pycon-2010--hacking-the-social-web-with-python.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>David Recordon</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--hacking-the-social-web-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open Stack: Hacking the Social Web&lt;/p&gt;
&lt;p&gt;Presented by David Recordon/Mike Malone&lt;/p&gt;
&lt;p&gt;In this tutorial we'll explain what the Open Stack is and how you can
use tools like OAuth, OpenID, and Portable Contacts to integrate your
app with the rest of the web. We'll cover each component in depth, and
walk through example Python implementations for a variety of scenarios.&lt;/p&gt;
&lt;p&gt;Intended Audience&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Beginning to intermediate Python programmers interested in Web
Development&lt;/li&gt;
&lt;li&gt;Python programmers who provide or consumer web service APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Class Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Intro: what is the &amp;quot;Open Stack&amp;quot;&lt;/li&gt;
&lt;li&gt;Working with HTTP in Python&lt;/li&gt;
&lt;li&gt;Working with responses: JSON, XML, Atom, RSS, HTML&lt;/li&gt;
&lt;li&gt;Decentralized identity with OpenID&lt;ul&gt;
&lt;li&gt;Implementing a Provider in Python&lt;/li&gt;
&lt;li&gt;Implementing a Relying Party in Python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Delegated authorization with OAuth&lt;ul&gt;
&lt;li&gt;Implementing a Provider in Python&lt;/li&gt;
&lt;li&gt;Implementing a Consumer in Python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exchanging contacts with Portable Contacts&lt;/li&gt;
&lt;li&gt;Aggregating activity with Activity Streams&lt;/li&gt;
&lt;li&gt;Discovering how to communicate: LRDD + XRD&lt;/li&gt;
&lt;li&gt;Making markup structured: microformats&lt;/li&gt;
&lt;li&gt;The future of the Open Stack&lt;/li&gt;
&lt;li&gt;Learn more &amp;amp; get involved: resources and communities&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Requirements&lt;/p&gt;
&lt;p&gt;Some experience doing web development or working with web service APIs&lt;/p&gt;
</summary><category term="atom"></category><category term="http"></category><category term="json"></category><category term="oauth"></category><category term="openid"></category><category term="pycon"></category><category term="pycon2010"></category><category term="rss"></category><category term="tutorial"></category><category term="xml"></category></entry></feed>