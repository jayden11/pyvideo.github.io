<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_oop.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2013-10-17T00:00:00+00:00</updated><entry><title>PyOhio 2011: Procedures, Objects, Reusability: "httplib", "urllib2", and Their Discontents</title><link href="http://pyvideo.org/pyohio-2011/pyohio-2011-procedures-objects-reusability-q.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Brandon Rhodes</name></author><id>tag:pyvideo.org,1990-01-01:pyohio-2011/pyohio-2011-procedures-objects-reusability-q.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Procedures, Objects, Reusability: httplib, urllib2 and their discontents&lt;/p&gt;
&lt;p&gt;Presented by Brandon Craig Rhodes&lt;/p&gt;
&lt;p&gt;Python supports two major programming paradigms: procedures, and object
orientation. This talk will claim that, when it comes to code re-use,
these two paradigms are NOT created equal: because object-oriented
programming encourages the programmer to write methods that consider
everything else inside of &amp;quot;self&amp;quot; to be fair game, it encourages highly
coupled code that proves brittle when extended.&lt;/p&gt;
</summary><category term="codereuse"></category><category term="httplib"></category><category term="oop"></category><category term="programming"></category><category term="pyohio"></category><category term="pyohio2011"></category><category term="reuse"></category><category term="self"></category><category term="urllib2"></category></entry><entry><title>Pythons Datenmodell - Ein Überblick</title><link href="http://pyvideo.org/pycon-de-2013/pythons-datenmodell-ein-uberblick.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Oliver Bestwalter</name></author><id>tag:pyvideo.org,2013-10-17:pycon-de-2013/pythons-datenmodell-ein-uberblick.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pythons Datenmodell ist sehr einfach: alles ist ein Objekt (wirklich
&lt;em&gt;alles&lt;/em&gt;). Darüberhinaus verfügt die Sprache über eine Reihe von
Konventionen und Protokollen, die es sehr einfach machen, die eigenen
Klassen dazu zu überreden, sich wie native Datentypen zu verhalten.&lt;/p&gt;
&lt;p&gt;In diesem Vortrag werden die dafür nötigen zentralen Konzepte eingeführt
und mittels einfacher Beispiele demonstriert.&lt;/p&gt;
</summary><category term="datenmodell"></category><category term="oop"></category><category term="protokolle"></category><category term="pythonisch"></category></entry><entry><title>Introduction to Object-Oriented Programming (1 of 3)</title><link href="http://pyvideo.org/pycon-us-2009/introduction-to-object-oriented-programming--1-of.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,1990-01-01:pycon-us-2009/introduction-to-object-oriented-programming--1-of.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a
&amp;quot;scripting&amp;quot; language, Python is an object-oriented programming language
at its core. This tutorial is designed for programmers who are familiar
with Python yet new to the concept of object-oriented programming. We
also welcome programmers who are experienced with other object-oriented
languages yet new to Python. We will begin the tutorial by introducing
the general principles of object- oriented programming. We then focus on
Python's treatment of object orientation. The tutorial will be organized
as a mix of formal presentations together with hands-on demonstrations
and exercises. Take your Python programming to the next level!&lt;/p&gt;
</summary><category term="oop"></category><category term="pycon"></category><category term="pycon2009"></category><category term="python-basics"></category></entry><entry><title>Introduction to Object-Oriented Programming (2 of 3)</title><link href="http://pyvideo.org/pycon-us-2009/introduction-to-object-oriented-programming--2-of.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,1990-01-01:pycon-us-2009/introduction-to-object-oriented-programming--2-of.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a
&amp;quot;scripting&amp;quot; language, Python is an object-oriented programming language
at its core. This tutorial is designed for programmers who are familiar
with Python yet new to the concept of object-oriented programming. We
also welcome programmers who are experienced with other object-oriented
languages yet new to Python. We will begin the tutorial by introducing
the general principles of object- oriented programming. We then focus on
Python's treatment of object orientation. The tutorial will be organized
as a mix of formal presentations together with hands-on demonstrations
and exercises. Take your Python programming to the next level!&lt;/p&gt;
</summary><category term="oop"></category><category term="pycon"></category><category term="pycon2009"></category><category term="python-basics"></category></entry><entry><title>Introduction to Object-Oriented Programming (3 of 3)</title><link href="http://pyvideo.org/pycon-us-2009/introduction-to-object-oriented-programming--3-of.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,1990-01-01:pycon-us-2009/introduction-to-object-oriented-programming--3-of.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a
&amp;quot;scripting&amp;quot; language, Python is an object-oriented programming language
at its core. This tutorial is designed for programmers who are familiar
with Python yet new to the concept of object-oriented programming. We
also welcome programmers who are experienced with other object-oriented
languages yet new to Python. We will begin the tutorial by introducing
the general principles of object- oriented programming. We then focus on
Python's treatment of object orientation. The tutorial will be organized
as a mix of formal presentations together with hands-on demonstrations
and exercises. Take your Python programming to the next level!&lt;/p&gt;
</summary><category term="oop"></category><category term="pycon"></category><category term="pycon2009"></category><category term="python-basics"></category></entry></feed>