<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_pickle.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2014-10-20T00:00:00+00:00</updated><entry><title>The failure of python object serialization: why HPC in python is broken</title><link href="http://pyvideo.org/pycon-uk-2014/the-failure-of-python-object-serialization-why-hpc-in-python-is-broken.html" rel="alternate"></link><published>2014-10-20T00:00:00+00:00</published><updated>2014-10-20T00:00:00+00:00</updated><author><name>Mike McKerns</name></author><id>tag:pyvideo.org,2014-10-20:pycon-uk-2014/the-failure-of-python-object-serialization-why-hpc-in-python-is-broken.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Presented by: Mike McKerns&lt;/p&gt;
&lt;p&gt;Parallel and asynchronous computing in python is crippled by pickle's poor object serialization. However, a more robust serialization package would drastically improve the situation. To leverage the cores found in modern processors we need to communicate functions between different processes -- and that means callables must be serialized without pickle barfing. Similarly, parallel and distributed computing with MPI, GPUs, sockets, and across other process boundaries all need serialized functions (or other callables). So why is pickling in python so broken? Python's ability to leverage these awesome communication technologies is limited by python's own inability to be a fully serializable language. In actuality, serialization in python is quite limited, and for really no good reason.&lt;/p&gt;
&lt;p&gt;Many raise security concerns for full object serialization, however it can be argued that it is not pickle's responsibility to do proper authentication. In fact, one could apply rather insecure serialization of all objects the objects were all sent across RSA-encrypted ssh-tunnels, for example.&lt;/p&gt;
&lt;p&gt;Dill is a serialization package that strives to serialize all of python. We have forked python's multiprocessing to use dill. Dill can also be leveraged by mpi4py, ipython, and other parallel or distributed python packages. Dill serves as the backbone for a distributed parallel computing framework that is being used to design the next generation of large-scale heterogeneous computing platforms, and has been leveraged in large-scale calculations of risk and uncertainty. Dill has been used to enable state persistence and recovery, global caching, and the coordination of distributed parallel calculations across a network of the world's largest computers.     &lt;a class="reference external" href="http://pythonhosted.org/dill"&gt;http://pythonhosted.org/dill&lt;/a&gt;     &lt;a class="reference external" href="https://github.com/uqfoundation"&gt;https://github.com/uqfoundation&lt;/a&gt;     &lt;a class="reference external" href="http://matthewrocklin.com/blog/work/2013/12/05/Parallelism-and-Serialization/"&gt;http://matthewrocklin.com/blog/work/2013/12/05/Parallelism-and-Serialization/&lt;/a&gt;     &lt;a class="reference external" href="http://stackoverflow.com/questions/19984152/what-can-multiprocessing-and-dill-do-together?rq=1"&gt;http://stackoverflow.com/questions/19984152/what-can-multiprocessing-and-dill-do-together?rq=1&lt;/a&gt;     &lt;a class="reference external" href="https://groups.google.com/forum/#!topic/mpi4py/1fd4FwdgpWY"&gt;https://groups.google.com/forum/#!topic/mpi4py/1fd4FwdgpWY&lt;/a&gt;     &lt;a class="reference external" href="http://nbviewer.ipython.org/gist/anonymous/5241793"&gt;http://nbviewer.ipython.org/gist/anonymous/5241793&lt;/a&gt;&lt;/p&gt;
</summary><category term="dill"></category><category term="serialization"></category><category term="pickle"></category></entry><entry><title>ChiPy: Chicago Python User Group Jan. '08 Meeting</title><link href="http://pyvideo.org/chipy/chipy--chicago-python-user-group-jan----39-08-mee.html" rel="alternate"></link><published>2008-01-01T00:00:00+00:00</published><updated>2008-01-01T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2008-01-01:chipy/chipy--chicago-python-user-group-jan----39-08-mee.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;pickle module -- Atul Varma&lt;/li&gt;
&lt;li&gt;PyStage, an animation framework -- Christopher Allan Webber&lt;/li&gt;
&lt;li&gt;Python Scripting for OpenOffice -- Steve Githens&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="chriswebber"></category><category term="openoffice"></category><category term="pickle"></category><category term="pystage"></category></entry><entry><title>PyCon 2009: Data Storage in Python - An Overview of Options (Part 2 of 3)</title><link href="http://pyvideo.org/pycon-us-2009/pycon-2009--data-storage-in-python---an-overview-.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,1990-01-01:pycon-us-2009/pycon-2009--data-storage-in-python---an-overview-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are many possibilities in Python to store data. This tutorials
explores some of them: flat file, Excel files, NetCDF and HDF5,
serialization with pickle and friends, relational databases, bsddb and
ZODB. The objective of this course is to give the participants an
overview over available options as well as there advantages and
disadvantages for different purposes. Participants are strongly
recommended to bring laptops because all topics are introduced with
examples and exercises.&lt;/p&gt;
</summary><category term="bsddb"></category><category term="databases"></category><category term="excel"></category><category term="flatfile"></category><category term="hdf5"></category><category term="netcdf"></category><category term="pickle"></category><category term="pycon"></category><category term="pycon2009"></category><category term="serialization"></category><category term="zodb"></category></entry><entry><title>PyCon 2009: Data Storage in Python - An Overview of Options (Part 1 of 3)</title><link href="http://pyvideo.org/pycon-us-2009/pycon-2009--data-storage-in-python---an-overview0.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,1990-01-01:pycon-us-2009/pycon-2009--data-storage-in-python---an-overview0.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are many possibilities in Python to store data. This tutorials
explores some of them: flat file, Excel files, NetCDF and HDF5,
serialization with pickle and friends, relational databases, bsddb and
ZODB. The objective of this course is to give the participants an
overview over available options as well as there advantages and
disadvantages for different purposes. Participants are strongly
recommended to bring laptops because all topics are introduced with
examples and exercises.&lt;/p&gt;
</summary><category term="bsddb"></category><category term="databases"></category><category term="excel"></category><category term="flatfile"></category><category term="hdf5"></category><category term="netcdf"></category><category term="pickle"></category><category term="pycon"></category><category term="pycon2009"></category><category term="serialization"></category><category term="zodb"></category></entry><entry><title>PyCon 2009: Data Storage in Python - An Overview of Options (Part 3 of 3)</title><link href="http://pyvideo.org/pycon-us-2009/pycon-2009--data-storage-in-python---an-overview1.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,1990-01-01:pycon-us-2009/pycon-2009--data-storage-in-python---an-overview1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are many possibilities in Python to store data. This tutorials
explores some of them: flat file, Excel files, NetCDF and HDF5,
serialization with pickle and friends, relational databases, bsddb and
ZODB. The objective of this course is to give the participants an
overview over available options as well as there advantages and
disadvantages for different purposes. Participants are strongly
recommended to bring laptops because all topics are introduced with
examples and exercises.&lt;/p&gt;
</summary><category term="bsddb"></category><category term="databases"></category><category term="excel"></category><category term="flatfile"></category><category term="hdf5"></category><category term="netcdf"></category><category term="pickle"></category><category term="pycon"></category><category term="pycon2009"></category><category term="serialization"></category><category term="zodb"></category></entry></feed>