<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_chris-withers.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2013-03-16T00:00:00+00:00</updated><entry><title>Things to make writing tests easier</title><link href="http://pyvideo.org/pycon-us-2013/things-to-make-writing-tests-easier.html" rel="alternate"></link><published>2013-03-16T00:00:00+00:00</published><updated>2013-03-16T00:00:00+00:00</updated><author><name>Chris Withers</name></author><id>tag:pyvideo.org,2013-03-16:pycon-us-2013/things-to-make-writing-tests-easier.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Writing tests is often hard enough as it is, without having to keep on
writing the same boiler plate to set things up and check outcomes. I've
collected a bunch of these tools that are all documented, flexible and
have unit tests of their own. I'd like to share those with people
interested in using them so they can spend more time writing code and
less time worrying about how to test it properly.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>