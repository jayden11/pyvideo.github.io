<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_michele-simionato.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-08-05T00:00:00+00:00</updated><entry><title>How to migrate from PostgreSQL to HDF5 and live happily ever after</title><link href="http://pyvideo.org/europython-2016/how-to-migrate-from-postgresql-to-hdf5-and-live-happily-ever-after.html" rel="alternate"></link><published>2016-08-05T00:00:00+00:00</published><updated>2016-08-05T00:00:00+00:00</updated><author><name>Michele Simionato</name></author><id>tag:pyvideo.org,2016-08-05:europython-2016/how-to-migrate-from-postgresql-to-hdf5-and-live-happily-ever-after.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Michele Simionato - How to migrate from PostgreSQL to HDF5 and live happily ever after
[EuroPython 2016]
[22 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/how-to-migrate-from-postgresql-to-hdf5-and-live-happily-ever-after"&gt;https://ep2016.europython.eu//conference/talks/how-to-migrate-from-postgresql-to-hdf5-and-live-happily-ever-after&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;This talk is for people who have a lot of floating numbers inside
PostgreSQL tables. I will bring as an example my personal experience
with a scientific project that used PostgreSQL as storage for a rather
complex set of composite multidimensional arrays and ran into all
sorts of performances issues, both in reading and writing the data. I
will explain how I solved all that by dropping the database in favor
of an HDF5 file, while keeping the application running and the users
happy.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;This talk is for people who have a lot of floating numbers inside
PostgreSQL tables and have problems with that. I will narrate my
experience with a scientific project that used PostgreSQL as storage
for a rather complex set of composite multidimensional arrays and ran
into all sorts of performances issues, both in reading and writing the
data.  I will discuss the issues and the approach that was taken first
to mitigate them (unsuccessfully) and then to remove them
(successfully) by a complete rethinking of the underlying architecture
and eventually the removal of the database. I will talk about the
migration strategies that were employed in the transition period and
how to live with a mixed environment of metadata in PostgreSQL and
data in an HDF5 file. I will also talk about concurrency, since the
underlying application is distributed and massively parallel, and
still it uses the purely sequential version of HDF5. Questions from
the audience are expected and welcome.
The talk is of interest to a large public, since it is mostly about
measuring things, monitoring and testing a legacy system,
making sure that the changes do not break the previous behavior
and keeping the users happy, while internally rewriting
all of the original code. And doing that in a small enough number of years!&lt;/p&gt;
</summary></entry><entry><title>Lightning Talks 2016-07-18</title><link href="http://pyvideo.org/europython-2016/lightning-talks-2016-07-18.html" rel="alternate"></link><published>2016-07-28T00:00:00+00:00</published><updated>2016-07-28T00:00:00+00:00</updated><author><name>Harald Massa</name></author><id>tag:pyvideo.org,2016-07-28:europython-2016/lightning-talks-2016-07-18.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Various speakers - Lightning Talks
[EuroPython 2016]
[18 July 2016]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Lightning talks, presented by Harald Massa&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Larry Hastings  - My life as a MEME&lt;/li&gt;
&lt;li&gt;Javier Domingo - Python exp!&lt;/li&gt;
&lt;li&gt;Danielle Procida - Python Adventures in Namibia&lt;/li&gt;
&lt;li&gt;Radomes Dopiralski - Win Fabulous Prizes&lt;/li&gt;
&lt;li&gt;Thomas Waldmann - Borg Backup&lt;/li&gt;
&lt;li&gt;Lasse Schuirmann - Cola - Lint and Fix All Code&lt;/li&gt;
&lt;li&gt;Tuna Vargi - arg√ºman.org&lt;/li&gt;
&lt;li&gt;Harry Percival &amp;amp; Fabian Kreutz - Sponsored Massage Training, in Aid of The Python Software Foundation&lt;/li&gt;
&lt;li&gt;Michele Simionato - Thanks for the Python3 Statement&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="lightning talks"></category></entry><entry><title>plac: more than just another command-line arguments parser</title><link href="http://pyvideo.org/europython-2011/plac-more-than-just-another-command-line-argumen.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Michele Simionato</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/plac-more-than-just-another-command-line-argumen.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Michele Simionato - 21 June 2011 in &amp;quot;Track Ravioli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;plac is general purpose tool than can be used to define command-oriented
domain specific languages (DSLs). In its simplest form it can be used as
a command-line arguments parser with an easier-to-use API than argparse.
It can also be used to replace the cmd module in the standard library.
Moreover it can be used to automatize functional tests and for much
more. The talk will touch upon many use cases where plac can make your
life as a developer simpler and better. Technically Plac is a wrapper
over argparse and works in all versions of Python starting from Python
2.3 up to Python 3.2. In Python 3.X it takes advantage of function
annotations to define the parser in a declarative way, instead of the
imperative way of argparse. In Python 2.X it uses decorators instead, to
reach the same goal. The talk is a hands-on interactive demonstration of
plac capabilities.&lt;/p&gt;
</summary><category term="api"></category><category term="argparse"></category><category term="cmd"></category><category term="decorators"></category><category term="parser"></category></entry></feed>