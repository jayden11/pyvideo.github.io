<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Fri, 19 May 2017 00:00:00 +0000</lastBuildDate><item><title>What's in your pip toolbox?</title><link>http://pyvideo.org/pycon-us-2017/whats-in-your-pip-toolbox.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; is a great tool, but dependency management doesn't stop there.
I'll explore several tools that work with &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; to make managing your
dependencies easier, faster, and safer. I'll cover generating
dependencies a better way, maintaining your &lt;tt class="docutils literal"&gt;requirements.txt&lt;/tt&gt; for the
long-term, and exploring existing Python environments. Afterward, you'll
never want to &lt;tt class="docutils literal"&gt;pip freeze &amp;gt; requirements.txt&lt;/tt&gt; again.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Banafato</dc:creator><pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-19:pycon-us-2017/whats-in-your-pip-toolbox.html</guid></item></channel></rss>