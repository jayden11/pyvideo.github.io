<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_aaron-oliver.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>1990-01-01T00:00:00+00:00</updated><entry><title>PyOhio 2011: Data-Transfer Objects Are a Disease. Meet the Cure.</title><link href="http://pyvideo.org/pyohio-2011/pyohio-2011--data-transfer-objects-are-a-disease-.html" rel="alternate"></link><published>1990-01-01T00:00:00+00:00</published><updated>1990-01-01T00:00:00+00:00</updated><author><name>Aaron Oliver</name></author><id>tag:pyvideo.org,1990-01-01:pyohio-2011/pyohio-2011--data-transfer-objects-are-a-disease-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Data-Transfer Objects are a Disease. Meet the Cure.&lt;/p&gt;
&lt;p&gt;Presented by Aaron Oliver&lt;/p&gt;
&lt;p&gt;Data Transfer Objects (DTOs) are commonplace. Every time you want to
shuffle data and be object-oriented about it, you crank out a new class.
But then someone extends it for their purposes. Badly. Then someone ELSE
extends it AGAIN and makes thing worse. Learn what makes our brains want
to create DTOs, how they've been (ab)used in the past, and how Python's
namedtuple makes it all better.&lt;/p&gt;
</summary><category term="datatransferobjects"></category><category term="namedtuple"></category><category term="pyohio"></category><category term="pyohio2011"></category></entry></feed>