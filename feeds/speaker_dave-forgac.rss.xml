<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 21 May 2017 00:00:00 +0000</lastBuildDate><item><title>Share Your Code! Python Packaging Without Complication</title><link>http://pyvideo.org/pycon-us-2017/share-your-code-python-packaging-without-complication.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you want people to use your code you should package it! You may have
heard that packaging is hard but the Python packaging ecosystem has
evolved a lot over the years. Taking your beautiful code and sharing it
with the world is complex but it doesn't have to be complicated. In this
talk you will learn how to take advantage of modern tooling and
practices so you can get boring stuff out of the way, publish quickly
and frequently, and focus on your code.&lt;/p&gt;
&lt;p&gt;This talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A (brief) history of Python packaging&lt;/li&gt;
&lt;li&gt;Python Packaging User Guide recommendations&lt;/li&gt;
&lt;li&gt;Distribution formats&lt;/li&gt;
&lt;li&gt;Anatomy of a package&lt;/li&gt;
&lt;li&gt;Automating package creation&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Adding:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;CI&lt;/li&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Testing package installation&lt;/li&gt;
&lt;li&gt;Releasing to PyPI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This talk is for you if you're new to Python packaging and would like to
learn how to share you code or if you've worked with Python for a while
and just aren't up-to-date with the latest packaging practices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Forgac</dc:creator><pubDate>Sun, 21 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-21:pycon-us-2017/share-your-code-python-packaging-without-complication.html</guid></item><item><title>Contract-First API Development Using The OpenAPI Specification (Swagger)</title><link>http://pyvideo.org/pycon-us-2017/contract-first-api-development-using-the-openapi-specification-swagger.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Often developers will implement APIs and then only after theyâ€™re
released think about things like specifications and documentation.
Instead we can make the design of the API contract an explicit part of
our development process using The OpenAPI Specification (Swagger) and
open source tools.&lt;/p&gt;
&lt;p&gt;In this workshop we will:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Discuss the contract-first approach&lt;/li&gt;
&lt;li&gt;Build and validate a simple OpenAPI Specification&lt;/li&gt;
&lt;li&gt;Generate reference documentation and show how you can incorporate it
with other docs&lt;/li&gt;
&lt;li&gt;Run a mock server so clients can test using the API&lt;/li&gt;
&lt;li&gt;Generate stub code based on the specification&lt;/li&gt;
&lt;li&gt;Implement a basic working API using Flask&lt;/li&gt;
&lt;li&gt;Show how you can iteratively add features and make changes&lt;/li&gt;
&lt;li&gt;Discuss generating specifications for existing APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Participants will leave with:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An understanding of how to incorporate a contract-first process into
their API development workflow&lt;/li&gt;
&lt;li&gt;An example specification that can be used as reference for their own
API design&lt;/li&gt;
&lt;li&gt;Working code for a basic API that can be used as a basis for their
own development&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Participants are expected to have a basic familiarity with HTTP /
RESTful APIs, understanding of simple git operations, and some
development experience.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Forgac</dc:creator><pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-17:pycon-us-2017/contract-first-api-development-using-the-openapi-specification-swagger.html</guid></item><item><title>Python Packaging from Init to Deploy</title><link>http://pyvideo.org/pyohio-2015/python-packaging-from-init-to-deploy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python packaging really isn't that bad (anymore.) In this talk you'll
learn how you can take your beautiful new Python code and share it with
the world in a way that everyone benefits. I will cover tools and
techniques you can use to get the boring stuff out of the way so you can
focus on your code and deploy quickly, frequently, and consistently.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Forgac</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/python-packaging-from-init-to-deploy.html</guid><category>talk</category></item><item><title>Fake It Before You Make It: Mocking Your Way to Better HTTP APIs</title><link>http://pyvideo.org/pyohio-2016/fake-it-before-you-make-it-mocking-your-way-to-better-http-apis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;HTTP/RESTful APIs are often designed and implemented before a client gets to see how they work. Then once an API is made public it can be hard to change. Let's discuss how we can improve this process by explicitly designing the API contract and getting client feedback before implementation. We will examine the process which promotes building HTTP APIs with a design first approach.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Zelikman</dc:creator><pubDate>Sun, 31 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-31:pyohio-2016/fake-it-before-you-make-it-mocking-your-way-to-better-http-apis.html</guid></item><item><title>Let's Make Better Command Line Applications</title><link>http://pyvideo.org/pyohio-2016/lets-make-better-command-line-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is great for making command line applications but a lot of the applications out in the world aren't that great. Why is that? Can we do better? Yes! Let's discuss how.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Forgac</dc:creator><pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-30:pyohio-2016/lets-make-better-command-line-applications.html</guid></item></channel></rss>