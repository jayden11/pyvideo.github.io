<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Thu, 28 Apr 2016 00:00:00 +0000</lastBuildDate><item><title>CART: Not only Classification and Regression Trees</title><link>http://pyvideo.org/pydata-amsterdam-2016/cart-not-only-classification-and-regression-trees.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2016&lt;/p&gt;
&lt;p&gt;Description&lt;/p&gt;
&lt;p&gt;Decision trees are very simple methods compared to Support Vector Machines, or Deep Learning. But they have some interesting properties that make them unique. For classification, for regression, or to extract probabilities, decision trees are easy to set up, and debug. And they are excellent to get a better understanding of your data.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This talk will cover Decision Trees, from theory, to their implementation in Python.&lt;/p&gt;
&lt;p&gt;The talk will have a very practical approach, using examples and real cases to illustrate how to use decision trees, what we can expect from using them, and what kind of problems we will need to address.&lt;/p&gt;
&lt;p&gt;The main topics covered will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What are decision trees?&lt;/li&gt;
&lt;li&gt;How decision trees are trained?&lt;/li&gt;
&lt;li&gt;Data preprocessing for decision trees&lt;/li&gt;
&lt;li&gt;Understanding your data better with decision tree visualization&lt;/li&gt;
&lt;li&gt;Debugging decision trees using common sense and prior domain knowledge&lt;/li&gt;
&lt;li&gt;Avoiding overfitting, without cross-validation&lt;/li&gt;
&lt;li&gt;Python implementation&lt;/li&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Sat, 26 Mar 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-03-26:pydata-amsterdam-2016/cart-not-only-classification-and-regression-trees.html</guid></item><item><title>Understanding Random Forests</title><link>http://pyvideo.org/pydata-madrid-2016/understanding-random-forests.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Madrid 2016&lt;/p&gt;
&lt;p&gt;Most of the talks and workshop tutorials can be found here: &lt;a class="reference external" href="https://github.com/PyDataMadrid2016/Conference-Info"&gt;https://github.com/PyDataMadrid2016/Conference-Info&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No machine learning algorithm dominates in every domain, but random forests are usually tough to beat by much. And they have some advantages compared to other models. No much input preparation needed, implicit feature selection, fast to train, and ability to visualize the model. While it is easy to get started with random forests, a good understanding of the model is key to get the most of them.&lt;/p&gt;
&lt;p&gt;This talk will cover decision trees from theory, to their implementation in scikit-learn. An overview of ensemble methods and bagging will follow, to end up explaining and implementing random forests and see how they compare to other state-of-the-art models.&lt;/p&gt;
&lt;p&gt;The talk will have a very practical approach, using examples and real cases to illustrate how to use both decision trees and random forests.&lt;/p&gt;
&lt;p&gt;We will see how the simplicity of decision trees, is a key advantage compared to other methods. Unlike black-box methods, or methods tough to represent in multivariate cases, decision trees can easily be visualized, analyzed, and debugged, until we see that our model is behaving as expected. This exercise can increase our understanding of the data and the problem, while making our model perform in the best possible way.&lt;/p&gt;
&lt;p&gt;Random Forests can randomize and ensemble decision trees to increase its predictive power, while keeping most of their properties.&lt;/p&gt;
&lt;p&gt;The main topics covered will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What are decision trees?&lt;/li&gt;
&lt;li&gt;How decision trees are trained?&lt;/li&gt;
&lt;li&gt;Understanding and debugging decision trees&lt;/li&gt;
&lt;li&gt;Ensemble methods&lt;/li&gt;
&lt;li&gt;Bagging&lt;/li&gt;
&lt;li&gt;Random Forests&lt;/li&gt;
&lt;li&gt;When decision trees and random forests should be used?&lt;/li&gt;
&lt;li&gt;Python implementation with scikit-learn&lt;/li&gt;
&lt;li&gt;Analysis of performance&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garc√≠a</dc:creator><pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-04-28:pydata-madrid-2016/understanding-random-forests.html</guid></item><item><title>Google Summer of Code Overview Panel</title><link>http://pyvideo.org/djangocon-2009/google-summer-of-code-overview-panel.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Google Summer of Code Overview Panel&lt;/p&gt;
&lt;p&gt;Featuring Zain Memon, Alex Gaynor, Honza Kral, Marc Garcia&lt;/p&gt;
&lt;p&gt;Moderated question and answer about GSOC and Django.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zain Memon</dc:creator><pubDate>Thu, 10 Sep 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-09-10:djangocon-2009/google-summer-of-code-overview-panel.html</guid><category>djangocon</category><category>djangocon2009</category><category>gsoc</category></item><item><title>Remote execution of Python scripts using Viri</title><link>http://pyvideo.org/europython-2011/remote-execution-of-python-scripts-using-viri.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Marc Garcia - 21 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Viri is a system for automatic distribution and execution of Python code
on remote machines. This is especially useful when dealing with a large
group of hosts.&lt;/p&gt;
&lt;p&gt;With Viri, Sysadmins can write their own scripts, and easily distribute
and execute them on any number of remote machines. Depending on the
number of computers to administrate, Viri can save thousands of hours,
that Sysadmins would spend transferring files, logging into remote
hosts, and waiting for the scripts to finish. Viri automates the whole
process.&lt;/p&gt;
&lt;p&gt;Viri can also be useful for remotely managing host settings. It should
work together with an application where the information about hosts
would be maintained. This information can include cron tasks, firewall
rules, backup settings,etc. After a simple Integration of this
application with your Viri infrastructure, you can change any settings
in the application, and see how it gets applied on the target host
automatically.&lt;/p&gt;
&lt;p&gt;The talk will cover next topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to Viri&lt;/li&gt;
&lt;li&gt;Live demo on how to install Viri, write a Viri task, and execute it
in a remote host&lt;/li&gt;
&lt;li&gt;Security concerns using Viri&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check &lt;a class="reference external" href="http://www.viriproject.com"&gt;Viri project page&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Garcia</dc:creator><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-18:europython-2011/remote-execution-of-python-scripts-using-viri.html</guid><category>backup</category><category>logging</category><category>scripts</category></item></channel></rss>