<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Wed, 05 Sep 2012 00:00:00 +0000</lastBuildDate><item><title>The Dungeon Master's guide to Django's ORM</title><link>http://pyvideo.org/djangocon-2012/the-dungeon-masters-guide-to-djangos-orm.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If you've ever been curious about Django's ORM implementation, you will
have noticed the required learning curve. Some of the code is fairly
complicated. Other bits are worse. Here comes a 30 or 40 minute guided
tour of the uncharted realms: how the pieces fit together, where to look
for things, why the current design is what it is. A portion of this is
my fault; I should probably explain myself.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django's database layer is a necessarily complicated piece of code. It
is a very powerful API that works more or less seamlessly across
multiple database storage systems, smoothing over many of the
inconsistencies and implementation differences that go with the
territory. This is great for developers who use Django.&lt;/p&gt;
&lt;p&gt;It's a little less awesome for the maintainers of that code; working in
that environment is fairly difficult. Still, we all like a challenge.
Problem is: where to start? Coming to grips with the ORM code isn't
easy. The code is well written and documented, but the entry points are
particularly well highlighted and, really, the sheer mass of code is an
obstacle to be overcome.&lt;/p&gt;
&lt;p&gt;This talk will look at the various layers of the ORM, from the public
gateways, to the semi-public doors into the implementation, to the
deeper internals and down to the interaction with databases. In effect,
following the journey of a couple of adventurous young queries as they
traverse the pathways to bring back some data, smelted into just the
right format.&lt;/p&gt;
&lt;p&gt;The goal is to provide some kind of mental map of the code. Some tips
for orienting yourself in the future and how to examine new nooks and
corners without losing your mind. We obviously cannot cover everything,
but let's go over the common paths and show how the other pieces hang
off that backbone.&lt;/p&gt;
&lt;p&gt;Along the way, we'll put some of the details into historical
perspective. Getting inside the mind of previous adventurers might help
understand why things are the way they are.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Malcolm Tredinnick</dc:creator><pubDate>Wed, 05 Sep 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-09-05:djangocon-2012/the-dungeon-masters-guide-to-djangos-orm.html</guid><category>django</category><category>django-orm</category></item></channel></rss>