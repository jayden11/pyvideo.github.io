<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_ivan-tsyganov.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-07-03T00:00:00+00:00</updated><entry><title>Осторожно, DSL!</title><link href="http://pyvideo.org/pycon-russia-2016/ostorozhno-dsl.html" rel="alternate"></link><published>2016-07-03T00:00:00+00:00</published><updated>2016-07-03T00:00:00+00:00</updated><author><name>Ivan Tsyganov</name></author><id>tag:pyvideo.org,2016-07-03:pycon-russia-2016/ostorozhno-dsl.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Каждый разработчик рано или поздно сталкивается с предметно-ориентированными языками (DSL). Мы разберемся, зачем же нам нужны DSL, и какие проблемы они нам помогают решать. Поймем, в каких случаях нам стоит разрабатывать свой язык, а в каких — использовать уже существующий. Попробуем провести грань и решить, где у нас просто библиотека, а где — предметно ориентированный язык. Придумаем свой DSL и сравним различные подходы к работе с ним в Python. Увидим, как работают лексический и синтаксический анализаторы. Обязательно поговорим про то, как облегчить жизнь пользователям нашего языка. Как сделать информативными сообщения об ошибках? Как тестировать сценарии, написанные на нашем языке? На эти вопросы мы сможем дать ответ.&lt;/p&gt;
</summary></entry></feed>