<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_ruben-orduz.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-05-09T00:00:00+00:00</updated><entry><title>A Better User Experience in the Command Line</title><link href="http://pyvideo.org/pycon-se-2016/a-better-user-experience-in-the-command-line.html" rel="alternate"></link><published>2016-05-09T00:00:00+00:00</published><updated>2016-05-09T00:00:00+00:00</updated><author><name>Ruben Orduz</name></author><id>tag:pyvideo.org,2016-05-09:pycon-se-2016/a-better-user-experience-in-the-command-line.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you used &lt;cite&gt;openssl&lt;/cite&gt;? The ubiquitous &lt;cite&gt;curl&lt;/cite&gt;? What do they have in common?&lt;/p&gt;
&lt;p&gt;Very confusing, unclear arguments, unhelpful docs and sometimes outright impossible to use without Googling first.&lt;/p&gt;
&lt;p&gt;In this talk I will show you why this is the case and how to avoid them on your command-line tool.&lt;/p&gt;
</summary></entry></feed>