<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_open-source.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-09-21T00:00:00+00:00</updated><entry><title>A Year of Pyxley: My First Open Source Adventure</title><link href="http://pyvideo.org/pydata-chicago-2016/a-year-of-pyxley-my-first-open-source-adventure.html" rel="alternate"></link><published>2016-08-28T00:00:00+00:00</published><updated>2016-08-28T00:00:00+00:00</updated><author><name>Nicholas Kridler</name></author><id>tag:pyvideo.org,2016-08-28:pydata-chicago-2016/a-year-of-pyxley-my-first-open-source-adventure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Last year, I created my first Flask-powered web application utilizing React.js and D3. I refactored it into reusable components and released it as Pyxley. In this talk, I’ll introduce the basics of Pyxley and discuss what has and hasn’t worked. More importantly, I’ll talk about what it’s like to maintain an open-source project for the first time.&lt;/p&gt;
</summary><category term="adventure"></category><category term="Open Source"></category></entry><entry><title>When Dependencies between Test Cases are Inevitable</title><link href="http://pyvideo.org/pycon-israel-2016/when-dependencies-between-test-cases-are-inevitable.html" rel="alternate"></link><published>2016-09-21T00:00:00+00:00</published><updated>2016-09-21T00:00:00+00:00</updated><author><name>Irina Gulina</name></author><id>tag:pyvideo.org,2016-09-21:pycon-israel-2016/when-dependencies-between-test-cases-are-inevitable.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You need to test your images on various instance types in the cloud, but which tools do you use? How to run dozens of thousands of test cases on hundreds of machines in the cloud in parallel? Is it OK to have dependencies between test cases to make this task less expensive?&lt;/p&gt;
&lt;p&gt;Dva is an open source validation tool which is applicable to various images and instance types. Using your image, it will launch instances of different types in defined regions and will execute test cases in parallel. How?&lt;/p&gt;
&lt;p&gt;All test cases are represented as a Directed Acyclic Graph structure – parents and children. Then these test cases are assigned to workers by a modified BFS algorithm that allows processing of sibling test cases in parallel. It includes test result processing tools such as a Bugzilla module to report bugs for you. 3rd-party test case modules are supported too.&lt;/p&gt;
&lt;p&gt;This tool is used by Red Hat QE for RHEL image release sanity testing in EC2, however Fedora images and OpenStack cloud are supported too. To test a RHEL release, Dva launches hundreds of machines of various types in all EC2 regions and executes a set of nearly 70 test cases with dependencies on every machine in parallel.&lt;/p&gt;
&lt;p&gt;Source Code/Home page: &lt;a class="reference external" href="https://github.com/RedHatQE/dva/"&gt;https://github.com/RedHatQE/dva/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Topics: Open Source, Cloud, QA/QE, Automation, Python&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="http://il.pycon.org/2016/static/sessions/irina-igulina.pdf"&gt;http://il.pycon.org/2016/static/sessions/irina-igulina.pdf&lt;/a&gt;&lt;/p&gt;
</summary><category term="Open Source"></category><category term="Cloud"></category><category term="QA/QE"></category><category term="Automation"></category></entry><entry><title>eGenix PyRun - Python Laufzeitumgebung in einer Datei</title><link href="http://pyvideo.org/pycon-de-2012/egenix-pyrun-python-laufzeitumgebung-in-einer.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Marc-André Lemburg</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/egenix-pyrun-python-laufzeitumgebung-in-einer.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;eGenix PyRun kondensiert eine komplette Python Laufzeitumgebung mit
Interpreter und Standardbibliothek in eine einzige sehr kompakte
ausführbare pyrun Programmdatei.&lt;/p&gt;
&lt;p&gt;Da PyRun keine Installation benötigt und unabhängig von einer Python
System Installation arbeitet, bietet es sich damit als portable Lösung
für Skripte, Applikationen und in der Entwicklung als virtualenv Ersatz
an.&lt;/p&gt;
&lt;p&gt;PyRun ist nur 12-13MB groß, enthält aber den größten Teil einer
üblicherweise ca. 100MB großen Python Installation. Die Größe kann per
gzexe oder upx auf unter 4MB reduziert werden.&lt;/p&gt;
&lt;p&gt;Es bietet damit eine ganze Reihe von Vorteilen gegenüber einer regulären
Python Installation. Hier die wichtigsten Aspekte:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Sehr kompakt&lt;/li&gt;
&lt;li&gt;Keine Installation oder Root Rechte notwendig&lt;/li&gt;
&lt;li&gt;Kann unabhängig von einer System Python Installation verwendet werden&lt;/li&gt;
&lt;li&gt;Bessere Startzeit als reguläres Python&lt;/li&gt;
&lt;li&gt;Kompatibel mit distutils/setuptools/pip/etc.&lt;/li&gt;
&lt;li&gt;virtualenv Ersatz&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Derzeit unterstützte Systeme sind Linux, Mac OS X und FreeBSD. Es sollte
aber auch auf anderen Unix Systemen verwendbar sein. PyRun wird von
eGenix unter einer Open Source Lizenz verfügbar gemacht.&lt;/p&gt;
&lt;p&gt;Der Vortrag wird das Projekt vorstellen, eine Anwendungsdemo zeigen und
je nach verfügbarer Zeit auch die Übersetzung demonstrieren.&lt;/p&gt;
</summary><category term="interpreter"></category><category term="kompakt"></category><category term="laufzeitumgebung"></category><category term="open-source"></category><category term="python"></category><category term="virtualenv"></category></entry><entry><title>Practical DevOps</title><link href="http://pyvideo.org/pycon-de-2012/practical-devops.html" rel="alternate"></link><published>2012-10-31T00:00:00+00:00</published><updated>2012-10-31T00:00:00+00:00</updated><author><name>Schlomo Schapiro</name></author><id>tag:pyvideo.org,2012-10-31:pycon-de-2012/practical-devops.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;DevOps ist eine aktuelle Bewegung in der IT, die sich zur Aufgabe macht,
ein Umdenken in den klassischen Lagern Entwicklung und Betrieb
einzuleiten. Der Vortrag wirft einen Blick auf die noch junge Bewegung
und zeigt mit Geschichten aus dem wahren Leben, wie sich die agile
Denkweise fortschreiben lässt, die mit SCRUM ins allgemeine Bewusstsein
getreten ist.&lt;/p&gt;
&lt;p&gt;Schlomo gibt einen Überblick über das Thema und berichtet über die
DevOps Erfolge bei der
&lt;a class="reference external" href="http://www.immobilienscout24.de"&gt;ImmobilienScout24&lt;/a&gt;. Nach 2 Jahren
agilem Umdenken in der Entwicklung zeigte sich, dass die klassische
Gewaltenteilung Plan - Build - Run einfach nicht mehr gut funktioniert
weil sich die Anforderungen und Erwartungen sowohl in der Entwicklung
als auch im Betrieb ändern und daher auch eine neue Form der
Zusammenarbeit nahe legen.&lt;/p&gt;
&lt;p&gt;Die Ideen aus der DevOps Bewegung lassen sich fast überall einsetzen, wo
bisher ein &amp;quot;über den Zaun werfen&amp;quot; gespielt wird und haben das primäre
Ziel, alle Beteiligten gemeinsam an einem Strang ziehen zu lassen. Mit
den Ideen und Erfahrungen aus dem Vortrag lassen sich sicher die ersten
Schritte in die richtige Richtung einleiten.&lt;/p&gt;
</summary><category term="agile"></category><category term="devops"></category><category term="kanban"></category><category term="open source"></category><category term="python"></category><category term="scrum"></category><category term="web"></category></entry><entry><title>Grundlagen des Open-Source-Lizenzrechts</title><link href="http://pyvideo.org/pycon-de-2012/grundlagen-des-open-source-lizenzrechts.html" rel="alternate"></link><published>2012-10-30T00:00:00+00:00</published><updated>2012-10-30T00:00:00+00:00</updated><author><name>Andreas Schreiber</name></author><id>tag:pyvideo.org,2012-10-30:pycon-de-2012/grundlagen-des-open-source-lizenzrechts.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Ein kompakter Überblick über die rechtlichen Aspekte von
Open-Source-Software. Neben den rechtlichen Grundlagen werden die
wesentlichen Eigenschaften von Open-Source-Lizenzen vorgestellt.
Außerdem werden einige verbreitete Lizenzen detaillierter erläutert.&lt;/p&gt;
&lt;p&gt;Inhalt:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Rechtliche Grundlagen: Urheberrecht und Lizenzrecht&lt;/li&gt;
&lt;li&gt;Open-Source-Software: Lizenzarten von Software, Definition
Open-Source-Software, Open-Source-Lizenzmodelle, Copyleft vs.
Non-Copyleft&lt;/li&gt;
&lt;li&gt;Ausgewählte Open-Source-Lizenzen: Apache License, GPL, AGPL, LGPL,
BSD License, Eclipse Public License, ...&lt;/li&gt;
&lt;li&gt;Praktische Nutzung von Open-Source-Software: Lizenzkompatibilität,
Nutzung von Open-Source-Software in eigenen Programmen, Auswahl einer
Open-Source-Lizenz für eigene Programme&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="open-source"></category><category term="recht"></category></entry><entry><title>Introduction to django CMS</title><link href="http://pyvideo.org/pycon-de-2013/introduction-to-django-cms.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Benjamin Wohlwend</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/introduction-to-django-cms.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Wir werden das Open Source Content Management System «django CMS»
vorstellen. Einerseits zeigen wir das Backend, aber auch das Frontend,
geben Erfahrungen von Developern weiter und von CMS-Verwendern. Patrick
Lauber, als Senior Web Developer geht in die Tiefe, Stefanie Weilenmann
wir das CMS anhand einer kurzen Schulung zeigen.&lt;/p&gt;
</summary><category term="django"></category><category term="django cms"></category><category term="open source"></category><category term="python"></category><category term="website"></category></entry><entry><title>Sponsoring von Open-Source - und damit den Chef überzeugen</title><link href="http://pyvideo.org/pycon-de-2013/sponsoring-von-open-source-und-damit-den-chef-u.html" rel="alternate"></link><published>2013-10-15T00:00:00+00:00</published><updated>2013-10-15T00:00:00+00:00</updated><author><name>Schlomo Schapiro</name></author><id>tag:pyvideo.org,2013-10-15:pycon-de-2013/sponsoring-von-open-source-und-damit-den-chef-u.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Nutzen Sie Open-Source-Software?&lt;/p&gt;
&lt;p&gt;Haben Sie schon einmal eine Kleinigkeit ändern wollen?&lt;/p&gt;
&lt;p&gt;Konnten Sie für “Einwurf kleiner Münzen” diese Änderung machen lassen?&lt;/p&gt;
&lt;p&gt;Open-Source-Software zeichnet sich unter anderem durch die leichte
Anpassbarkeit an die eigenen Bedürfnisse aus. Doch nicht jeder kann oder
möchte die Software selbst ändern. Lieber würde man die Autoren oder
andere Spezialisten damit beauftragen.&lt;/p&gt;
&lt;p&gt;Der Vortrag gibt Einblick in die praktische Arbeit mit dem Sponsoring
von Open-Source-Projekten und beantwortet die Frage, wie man mit Hilfe
von Sponsoring seine eigenen Probleme schneller und günstiger lösen
kann: Nach der Vorstellung typischer Entwicklungsmodelle von
Open-Source-Projekten erfahren Besucher, wie sie Kontakte zu Open-Source
Projekten knüpfen können und damit jemanden finden, der ihnen weiter
hilft.&lt;/p&gt;
&lt;p&gt;Weitere Themen sind&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;rechtliche Aspekte wie ein Werksvertrag, Gewährleistung und einfache
Abwicklung&lt;/li&gt;
&lt;li&gt;Anforderungen so formulieren, dass der Kundennutzen und die
Nachhaltigkeit im Vordergrund steht&lt;/li&gt;
&lt;li&gt;Abnahmekriterien für den Auftrag&lt;/li&gt;
&lt;li&gt;Wirtschaftlichkeitsberechnung und Kosten-Nutzen-Abwägung&lt;/li&gt;
&lt;li&gt;Nachhaltige Lösungen statt ewigen Workarounds&lt;/li&gt;
&lt;li&gt;Mehrwert für sich und die Open-Source-Gemeinschaft schaffen&lt;/li&gt;
&lt;li&gt;Imagepflege über Open-Source-Sponsoring&lt;/li&gt;
&lt;li&gt;Eigene Open-Source Projekte durch Externe weiterentwickeln lassen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Als konkrete Beispiele dienen diverse in Python entwickelte Open-Source
Projekte der ImmobilienScout24.&lt;/p&gt;
</summary><category term="geld"></category><category term="kultur"></category><category term="open-source"></category><category term="politik"></category><category term="wirtschaft"></category></entry></feed>