<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 21 May 2017 00:00:00 +0000</lastBuildDate><item><title>Probabilistic Programming with PyMC3</title><link>http://pyvideo.org/pycon-us-2017/probabilistic-programming-with-pymc3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Bayesian statistics offers robust and flexible methods for data analysis
that, because they are based on probability models, have the added
benefit of being readily interpretable by non-statisticians. Until
recently, however, the implementation of Bayesian models has been
prohibitively complex for use by most analysts. But, the advent of
probabilistic programming has served to abstract the complexity of
Bayesian statistics, making such methods more broadly available. PyMC3
is a open-source Python module for probabilistic programming that
implements several modern, computationally-intensive statistical
algorithms for fitting Bayesian models, including Hamiltonian Monte
Carlo (HMC) and variational inference. PyMC3â€™s intuitive syntax is
helpful for new users, and the reliance on Theano for much of the
computational work has allowed developers to keep the code base simple,
making it easy to extend the software to meet analytic needs. PyMC3
itself extends Python's powerful &amp;quot;scientific stack&amp;quot; of development
tools, which provide fast and efficient data structures, parallel
processing, and interfaces for describing statistical models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Sun, 21 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-21:pycon-us-2017/probabilistic-programming-with-pymc3.html</guid></item><item><title>Introduction to Statistical Modeling with Python</title><link>http://pyvideo.org/pycon-us-2017/introduction-to-statistical-modeling-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This intermediate-level tutorial will provide students with hands-on
experience applying practical statistical modeling methods on real data.
Unlike many introductory statistics courses, we will not be applying
&amp;quot;cookbook&amp;quot; methods that are easy to teach, but often inapplicable;
instead, we will learn some foundational statistical methods that can be
applied generally to a wide variety of problems: maximum likelihood,
bootstrapping, linear regression, and other modern techniques. The
tutorial will start with a short introduction on data manipulation and
cleaning using &lt;a class="reference external" href="http://pandas.pydata.org/"&gt;pandas&lt;/a&gt;, before proceeding
on to simple concepts like fitting data to statistical distributions,
and how to use Monte Carlo simulation for data analysis. Slightly more
advanced topics include bootstrapping (for estimating uncertainty around
estimates) and flexible linear regression methods using Bayesian
methods. By using and modifying hand-coded implementations of these
techniques, students will gain an understanding of how each method
works. Students will come away with knowledge of how to deal with very
practical statistical problems, such as how to deal with missing data,
how to check a statistical model for appropriateness, and how to
properly express the uncertainty in the quantities estimated by
statistical methods.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-17:pycon-us-2017/introduction-to-statistical-modeling-with-python.html</guid></item><item><title>35. PyMC: Markov chain Monte Carlo in Python</title><link>http://pyvideo.org/pycon-us-2012/35-pymc-markov-chain-monte-carlo-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;PyMC implements a suite of Markov chain Monte Carlo (MCMC) sampling
algorithms making it extremely flexible, extensible and applicable to a
large suite of statistical modeling problems. PyMC's clear, concise
syntax allows scientists to flexibly implement Bayesian models without
hand-coding samplers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-11:pycon-us-2012/35-pymc-markov-chain-monte-carlo-in-python.html</guid></item></channel></rss>