<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 24 Jul 2011 00:00:00 +0000</lastBuildDate><item><title>Scraping Techniques to Extract Advertisements from Web Pages</title><link>http://pyvideo.org/europython-2011/scraping-techniques-to-extract-advertisements-fro.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Mirko Urru,Stefano Cotta Ramusino - 24 June 2011 in
&amp;quot;Track Tagliatelle &amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Online Advertising is an emerging research field, at the intersection of
Information Retrieval, Machine Learning, Optimization, and
Microeconomics. Its main goal is to choose the right ads to present to a
user engaged in a given task, such as Sponsored Search Advertising or
Contextual Advertising. The former puts ads on the page returned from a
Web search engine following a query. The latter puts ads within the
content of a generic, third party, Web page. The ads themselves are
selected and served by automated systems based on the content displayed
to the user.&lt;/p&gt;
&lt;p&gt;Web scraping is the set of techniques used to automatically get some
information from a website instead of manually copying it. In
particular, we're interested in studying and adopting scraping
techniques for: i. accessing tags as object members ii. finding out tags
whose name, contents or attributes match selection criteria iii.
accessing tag attributes by using a dictionary-like syntax.&lt;/p&gt;
&lt;p&gt;In this talk, we focus on the adoption of scraping techniques in the
contextual advertising field. In particular, we present a system aimed
at finding the most relevant ads for a generic web page p. Starting from
p, the system selects a set of its inlinks (i.e., the pages that link p)
and extracts the ads contained into them. Selection is performed
querying the Google search engine, whereas extraction is made by using
suitable scraping techniques.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mirko Urru</dc:creator><pubDate>Sun, 24 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-24:europython-2011/scraping-techniques-to-extract-advertisements-fro.html</guid><category>google</category><category>scraping</category><category>search</category><category>web</category></item><item><title>What is Google App Engine?</title><link>http://pyvideo.org/europython-2011/what-is-google-app-engine.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] wesley chun - 23 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Google App Engine is a unique hosting platform that lets you build
applications and run them in Google's data centers using the massive
global infrastructure built to run the Internet's most powerful company.
App Engine offers a development environment that uses familiar
technologies (Java and Python) and provides a powerful and robust set of
APIs to users while maintaining security and independence from other
apps running in the cloud. It is always free to get started so you can
try it out with no risk, and if you need additional computing resources,
you can purchase additional computing resources beyond the free quota
limits. (If you enable billing and trust us with your credit card, we
will extend your free quotas even further; you won't get charged until
you exceed those &lt;em&gt;extended&lt;/em&gt; quotas.) Scale your application to millions
of users and pay only for what you use at competitive market pricing.&lt;/p&gt;
&lt;p&gt;In this session, we provide an update of the newest features found in
the most recent releases of the App Engine platform. We also share some
suggestions for best practices to existing App Engine developers.&lt;/p&gt;
&lt;p&gt;Beginners to the App Engine platform will be interested in the
introductory workshop which may be offered (see description below).&lt;/p&gt;
&lt;p&gt;Google App Engine workshop&lt;/p&gt;
&lt;p&gt;In this tutorial, we'll give you a comprehensive introduction to the
platform in two/three components:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;1-hour Introduction to Cloud computing and Google App Engine seminar&lt;/li&gt;
&lt;li&gt;3-hour App Engine hands-on workshop/codelab&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the first hour, we review Cloud Computing as an industry and where
Google App Engine fits into the picture. Specifically, we discuss App
Engine as a PaaS solution because of the inherent challenges of building
web and other applications. We'll outline the architecture of App
Engine, what it's major components are, introduce its features and APIs,
discuss the service and how it works (including information on the free
quotas), present some information about current users and usage,
including integration with Google Apps, and finally, give an overview of
its enterprise edition called Google App Engine for Business.&lt;/p&gt;
&lt;p&gt;After the approximately one-hour lecture, we'll show you how to create
applications that run on App Engine by building a simple but real web
application from the ground up via a hands-on coding laboratory.
Although based on the online tutorial, this codelab goes up and beyond
what's in the documentation: you will get a more detailed step-by-step
instructions to replicate that example as well as have the opportunity
to extend your application with some of the newer APIs that come with
App Engine. The codelab will cover the Users service, non-relational
Datastore, and Memcache APIs. Time-permitting, we'll also discuss some
of the newest features found in recent App Engine releases.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wesley J. Chun</dc:creator><pubDate>Sun, 24 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-24:europython-2011/what-is-google-app-engine.html</guid><category>architecture</category><category>cloud</category><category>google</category><category>hosting</category><category>infrastructure</category><category>memcache</category><category>security</category><category>web</category></item><item><title>Latest advances in the Google APIs platform</title><link>http://pyvideo.org/europython-2011/latest-advances-in-the-google-apis-platform.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Ali Afshar - 21 June 2011 in &amp;quot;Track Ravioli&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will give an outline of the advances that Google have made in
API delivery over the last year, and how it is relevant to you as a
Python developer. The talk is suitable for beginners and advanced
developers.&lt;/p&gt;
&lt;p&gt;We will describe the underlying platform, and the built-in features that
all Google APIs inherit.&lt;/p&gt;
&lt;p&gt;We will focus on how the Python libraries for this API platform are
generated and can be used as a single library that doesn't require
updating with API updates, as Python lends itself perfectly to the
nature of this platform.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ali Afshar</dc:creator><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-18:europython-2011/latest-advances-in-the-google-apis-platform.html</guid><category>api</category><category>google</category><category>updating</category></item><item><title>Web API Mashups in a Python Application</title><link>http://pyvideo.org/europython-2011/web-api-mashups-in-a-python-application.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Johan Euphrosine - 21 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will cover: - How to use OAuth into your webapp so users can
give permission to access their data stored in third party web
application. - How your webapp can interact with their Web API using
RESTful JSON protocols.&lt;/p&gt;
&lt;p&gt;This talk is suitable for beginners already familiar with any WSGI web
framework.&lt;/p&gt;
&lt;p&gt;This talk will be illustrated with code samples using Google App Engine
and Google APIs client library.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Johan Euphrosine</dc:creator><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-18:europython-2011/web-api-mashups-in-a-python-application.html</guid><category>api</category><category>google</category><category>json</category><category>oauth</category><category>web</category><category>wsgi</category></item><item><title>Making use of OpenStreetMap data with Python</title><link>http://pyvideo.org/europython-2011/making-use-of-openstreetmap-data-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Andrii Mishkovskyi - 22 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wondered how web maps are created? Ever wondered if you could build
something like Google Maps over a weekend? You probably can't, but this
talk will show you the basics of what you need to know, such as
importing data, rendering maps and even building simple routes. And all
of this in Python!&lt;/p&gt;
&lt;p&gt;Abstract: * Learning how OSM data looks * Parsing and importing the
data * Rendering maps with Mapnik * Bits of code required to build
geocoder * Building simple router with Python and PostGIS * And anything
else I forgot to mention in this abstract but will talk about&lt;/p&gt;
&lt;p&gt;Definitions: OpenStreetMap - the so-called &amp;quot;Wikipedia of maps&amp;quot; project,
with thousands of contributors who edit the map data of the whole world.
Unlike similar projects, the map data is completely free (both as in
beer and as in speech) and thus anyone can make use of it. Mapnik -
rendering framework, created specifically for OpenStreetMap, written in
C++ and Python. PostGIS - an extension of PostgreSQL database, with
support for many useful GIS features.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrii Mishkovskyi</dc:creator><pubDate>Wed, 13 Jul 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-07-13:europython-2011/making-use-of-openstreetmap-data-with-python.html</guid><category>gis</category><category>google</category><category>importing</category><category>learning</category><category>maps</category><category>parsing</category><category>postgresql</category><category>web</category></item><item><title>PyConAU 2010: Lightning talks - Saturday</title><link>http://pyvideo.org/pycon-au-2010/pyconau-2010--lightning-talks---saturday.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks - Saturday&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;00:00 - Amy Maree: Talking about OLPC XO, Python and Pippy.&lt;/li&gt;
&lt;li&gt;05:55 - Jurgen Brendel: Jython and writing performance critical parts
in Java.&lt;/li&gt;
&lt;li&gt;09:50 - Dave Claridge: Embedding Python and robots that play soccer.&lt;/li&gt;
&lt;li&gt;15:10 - Paul Dyson: inflect.py&lt;/li&gt;
&lt;li&gt;20:20 - Richard Jones: cocos2d, a python game library&lt;/li&gt;
&lt;li&gt;25:40 - Brian Quinlan: Why you probably don't want to work for Google&lt;/li&gt;
&lt;li&gt;30:50 - Nick Coghlan: Running Python scripts.&lt;/li&gt;
&lt;li&gt;34:55 - Philip: How to introduce Python to a large organization&lt;/li&gt;
&lt;li&gt;38:55 - Ryan Kelly: with hacks: re-usable tools for with-statement
hackery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PMC curator notes: Paul Dyson's demo at 18:28 is great.&lt;/p&gt;
&lt;p&gt;If anyone know's Philip's last name (and/or if we spelled his first name
wrong, too), let us know in the comments.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unknown</dc:creator><pubDate>Mon, 01 Jan 1990 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,1990-01-01:pycon-au-2010/pyconau-2010--lightning-talks---saturday.html</guid><category>cocos2d</category><category>google</category><category>hacks</category><category>inflect.py</category><category>jython</category><category>olpc</category><category>pippy</category><category>pyconau</category><category>pyconau2010</category><category>robots</category><category>scripts</category><category>with</category></item></channel></rss>