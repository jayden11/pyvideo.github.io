<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Mon, 01 Jan 1990 00:00:00 +0000</lastBuildDate><item><title>Robert Coup - /me wants it. Scraping sites to get data.</title><link>http://pyvideo.org/kiwi-pycon-2009/robert-coup----me-wants-it--scraping-sites-to-get.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;/me wants it. Scraping sites to get data.&lt;/p&gt;
&lt;p&gt;Presented by Robert Coup&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Building scrapers for grabbing data from websites. Tools, techniques,
and tips.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Life would be so much easier if the data contained in websites was
available raw via APIs. Alas, until that mythical day comes we either
need to deal with unhelpful people via email and phone, or just get it
ourselves. Python has some great tools available to help with building
scrapers and for parsing and formatting the data we get. Starting off
with the basics - tracking what needs to be done, making web requests,
parsing HTML, following links, and extricating data from Excel and PDF
documents. Our scraper needs to be resilient against too-clever content
management systems, Frontpage-era HTML, and plain dodgy data. We may
need to pass through logins and other messiness. There are some
techniques and tips for approaching the problems and keeping your
solution flexible and as simple as possible. We'll discuss some scrapers
built for New Zealand data, and introduce a new project from the NZ open
government data group to provide a RESTful interface to scrapers -
effectively creating a nice API where there isn't one.&lt;/p&gt;
&lt;p&gt;Slides:
&lt;a class="reference external" href="http://www.slideshare.net/rcoup/me-wants-it-scraping-sites-to-get-data"&gt;http://www.slideshare.net/rcoup/me-wants-it-scraping-sites-to-get-
data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Coup</dc:creator><pubDate>Mon, 01 Jan 1990 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,1990-01-01:kiwi-pycon-2009/robert-coup----me-wants-it--scraping-sites-to-get.html</guid><category>api</category><category>html</category><category>kiwipycon</category><category>kiwipycon2009</category><category>rest</category><category>scraping</category><category>web</category></item><item><title>Robert Coup - Monitoring and debugging your live applications</title><link>http://pyvideo.org/kiwi-pycon-2009/robert-coup---monitoring-and-debugging-your-live-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Monitoring and debugging your live application&lt;/p&gt;
&lt;p&gt;Presented by Robert Coup&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Ever wondered what is going on inside your app? Learn some tools and
ideas you can use for sussing it out.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Debugging issues in live applications can be a real nightmare. Add some
more logging, restart it, wait for the failure/load case and try and
deduce a bit more. Even with awesome test coverage you still need to
debug those tricky problems. This talk will introduce some ideas for
monitoring and debugging your live applications. The key things to cover
are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the standard logging module and learning how to drive it well. How to
log effectively so it makes sense later, and what sorts of things we
should be instrumenting and measuring.&lt;/li&gt;
&lt;li&gt;how to set up a remote console session into our running application,
so we can interrogate variables and run code to figure out what's
going on.&lt;/li&gt;
&lt;li&gt;how to incorporate IRC or IM bots so we can interact with our apps
from the desktop, and how they can interact with us.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Coup</dc:creator><pubDate>Mon, 01 Jan 1990 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,1990-01-01:kiwi-pycon-2009/robert-coup---monitoring-and-debugging-your-live-.html</guid><category>debugging</category><category>im</category><category>irc</category><category>kiwipycon</category><category>kiwipycon2009</category><category>logging</category></item></channel></rss>