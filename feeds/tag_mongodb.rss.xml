<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Thu, 09 Jun 2011 00:00:00 +0000</lastBuildDate><item><title>PyGotham 2011: Rapid and Scalable Development with MongoDB, PyMongo, and Ming</title><link>http://pyvideo.org/pygotham-2011/pygotham-2011-rapid-and-scalable-development-wit.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This intermediate-level talk will teach you techniques using the popular
NoSQL database MongoDB and the Python library Ming to write
maintainable, high- performance, and scalable applications. We will
cover everything you need to become an effective Ming/MongoDB developer
from basic PyMongo queries to high- level object-document mapping setups
in Ming.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard D. Copeland, Jr.</dc:creator><pubDate>Mon, 01 Jan 1990 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,1990-01-01:pygotham-2011/pygotham-2011-rapid-and-scalable-development-wit.html</guid><category>ming</category><category>mongodb</category><category>nosql</category><category>pygotham</category><category>pygotham2011</category></item><item><title>PyOhio 2010: Getting to know MongoDB using Python and IronPython</title><link>http://pyvideo.org/pyohio-2010/pyohio-2010--getting-to-know-mongodb-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Getting to know MongoDB using Python and IronPython&lt;/p&gt;
&lt;p&gt;Presented by Sam Corder&lt;/p&gt;
&lt;p&gt;Is your RDBMS not coping with the load anymore and can't be scaled out
any further? Are you designing the next big thing and know your RDBMS
won't be able to handle it? Are you tired of shoe-horning a data model
into where it doesn't belong? Are you just curious what this thing
called MongoDB is? In this session you will explore a popular
alternative to the RDBMS called Mongo from one who has battled with BSON
to write the original .Net driver. You'll learn basics of schema design,
document manipulation, several ways to get at your data, something odd
called map/reduce and all from the comfort of Python and the slightly
uncomfortable IronPython.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Corder</dc:creator><pubDate>Mon, 01 Jan 1990 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,1990-01-01:pyohio-2010/pyohio-2010--getting-to-know-mongodb-using-python.html</guid><category>ironpython</category><category>mongodb</category><category>nosql</category><category>pyohio</category><category>pyohio2010</category></item><item><title>GNU MediaGoblin for a federated media future</title><link>http://pyvideo.org/chipy/gnu-mediagoblin-for-a-federated-media-future.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Christopher Allan Webber talks about GNU MediaGoblin, a federated
(decentralized) media publishing system (images, and later other media
like video) written in python and under the AGPL. Infrastructure
discussion describes what it means that GNU MediaGoblin uses an
unframework / is &amp;quot;wsgi minimalist&amp;quot;, about the choice of MongoDB and
MongoKit, and how to impress an audience with ascii art mockups.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Allan Webber</dc:creator><pubDate>Thu, 09 Jun 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-06-09:chipy/gnu-mediagoblin-for-a-federated-media-future.html</guid><category>chipy</category><category>foss</category><category>gnu</category><category>media</category><category>mediagoblin</category><category>mongodb</category><category>mongokit</category><category>wsgi</category></item><item><title>How Python, TurboGears, and MongoDB are Transforming SourceForge.net (#47)</title><link>http://pyvideo.org/pycon-us-2010/pycon-2010--how-python--turbogears--and-mongodb-a.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How Python, TurboGears, and MongoDB are transforming SourceForge.net&lt;/p&gt;
&lt;p&gt;Presented by Rick Copeland&lt;/p&gt;
&lt;p&gt;In mid-2009, SourceForge embarked on a quest to modernize our websites,
starting with the download (consumer) flow on SourceForge.net. A small
team was tasked the rewrite, converting a site originally implemented in
PHP with Python. Using a customized TurboGears as a core component, the
rewrite was completed and the new site deployed in under 2 months. This
talk tells the story of that rewrite and explains our new technology
stack, which includes TurboGears, MongoDB, and Jinja templates.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rick Copeland</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--how-python--turbogears--and-mongodb-a.html</guid><category>jinja</category><category>mongodb</category><category>pycon</category><category>pycon2010</category><category>turbogears</category></item><item><title>Sprox: data driven web development (#137)</title><link>http://pyvideo.org/pycon-us-2010/pycon-2010--sprox--data-driven-web-development---.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sprox: data driven web development&lt;/p&gt;
&lt;p&gt;Presented by Jorge L Vargas&lt;/p&gt;
&lt;p&gt;Sprox is a web frontend tool built to handle the creation and
manipulation of data.&lt;/p&gt;
&lt;p&gt;Sprox is smart about your data. You should never write repetitive code
again. Sane defaults and easy overwrites is what makes Sprox guess what
you need for your fields.&lt;/p&gt;
&lt;p&gt;This talk will give an overview of Sprox, what it does and how to use
it. Then we'll explore the available backends (SQLAlchemy, MongoDB) and
dive into the tgext.admin package, which is the &amp;quot;Admin Tool&amp;quot; for the
TurboGears2 framework.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jorge L Vargas</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--sprox--data-driven-web-development---.html</guid><category>mongodb</category><category>pycon</category><category>pycon2010</category><category>sprox</category><category>sqlalchemy</category></item><item><title>MongoDB + Pylons at Catch.com: Scalable Web Apps with Python and NoSQL</title><link>http://pyvideo.org/pycon-us-2011/pycon-2011--mongodb---pylons-at-catch-com--scalab.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MongoDB + Pylons at Catch.com: Scalable Web Apps with Python and NoSQL&lt;/p&gt;
&lt;p&gt;Presented by Niall O'Higgins&lt;/p&gt;
&lt;p&gt;The Catch.com backend provides an API for publishing and querying your
personal data - used by many hugely popular Android, iOS and Web
clients. We ported this system to Python and MongoDB, using the Pylons
Web framework. This talk details our reasoning for choosing - and
experiences with - these cutting-edge Web and NoSQL database
technologies in a high-traffic, real-world production system.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Faced with the limits of our initial Catch.com Java/BDB backend
implemention, we evaluated various alternative technologies including
Amazon SimpleDB, MySQL, Cassandra and MongoDB. Eventually we settled on
Python, Pylons and MongoDB.&lt;/p&gt;
&lt;p&gt;We found Python and MongoDB gave us unique flexibility with our data
model, allowed us to scale for increased reliability and performance and
decreased feature development time - and in this talk we'll describe
exactly how.&lt;/p&gt;
&lt;p&gt;While there are many advantages, Python/Pylons and MongoDB (as a
relative newcomer on the database scene) certainly have issues and
limitations which must be taken into careful consideration for any
real-world production deployment.&lt;/p&gt;
&lt;p&gt;We compare MongoDB with other database technologies such as more
traditional RDBMS like MySQL and competing NoSQL options such as
Cassandra, CouchDB and BDB.&lt;/p&gt;
&lt;p&gt;We give a detailed introducton to data modeling in MongoDB - with
special attention paid to how this differs from a traditional relational
system - the operators provided by its rich query language and utilizing
advanced features such as GeoSpatial indexing, Replica Sets, Sharding -
and how to deal with some of the more publicized limitations of the
system (such as single-server durability).&lt;/p&gt;
&lt;p&gt;While much of this talk will be about using MongoDB with Python, we will
also touch on issues surrounding production deployment of the Pylons Web
framework, including how we work around the GIL to take advantage of
multi-core machines.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Niall O'Higgins</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-03-11:pycon-us-2011/pycon-2011--mongodb---pylons-at-catch-com--scalab.html</guid><category>casestudy</category><category>mongodb</category><category>nosql</category><category>pycon</category><category>pycon2011</category><category>pylons</category><category>scalable</category></item></channel></rss>