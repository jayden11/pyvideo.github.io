<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Mon, 03 Aug 2015 00:00:00 +0000</lastBuildDate><item><title>Distributed locks with Python and Redis</title><link>http://pyvideo.org/europython-2015/distributed-locks-with-python-and-redis.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sebastian Buczyński - Distributed locks with Python and Redis
[EuroPython 2015]
[22 July 2015]
[Bilbao, Euskadi, Spain]&lt;/p&gt;
&lt;p&gt;Traditional methods of coping with concurrent programming problems are
well-known and described in literature. Many programming languages,
including Python, contain in their standard libraries tools and
primitives such as semaphores and can spawn threads or subprocesses.&lt;/p&gt;
&lt;p&gt;However, in the face of increasing interest in service oriented
architecture and building distributed systems, that span across many
independent server nodes, emerges a need to adapt traditional
solutions, so they can be applied in the new environment.&lt;/p&gt;
&lt;p&gt;In this talk I will share my experiences gathered during building a
modern contact center - highly concurrent system, which requires
certain resources to be accessed exclusively by several self-contained
components.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Buczyński</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-03:europython-2015/distributed-locks-with-python-and-redis.html</guid></item></channel></rss>