<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_nick-coghlan.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-02-17T00:00:00+00:00</updated><entry><title>[Keynote] Opportunities and Challenges in Open Collaboration</title><link href="http://pyvideo.org/pycon-pune-2017/keynote-opportunities-and-challenges-in-open-collaboration.html" rel="alternate"></link><published>2017-02-17T00:00:00+00:00</published><updated>2017-02-17T00:00:00+00:00</updated><author><name>Nick Coghlan</name></author><id>tag:pyvideo.org,2017-02-17:pycon-pune-2017/keynote-opportunities-and-challenges-in-open-collaboration.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Nick Coghlan&lt;/p&gt;
&lt;p&gt;About Speaker:
Nick Coghlan works on software supply chain management tools for Red Hat, and has been a CPython core developer since 2005. Prior to joining Red Hat in June 2011, Nick spent over 12 years working as a software developer, system integrator and system architect in Australia's aerospace &amp;amp; defence sector.&lt;/p&gt;
</summary></entry><entry><title>Contributors, Colleagues, Clients &amp; Customers: Sustaining Open Source Communities</title><link href="http://pyvideo.org/pycon-pl-2015/contributors-colleagues-clients-customers-sustaining-open-source-communities.html" rel="alternate"></link><published>2015-10-17T00:00:00+00:00</published><updated>2015-10-17T00:00:00+00:00</updated><author><name>Nick Coghlan</name></author><id>tag:pyvideo.org,2015-10-17:pycon-pl-2015/contributors-colleagues-clients-customers-sustaining-open-source-communities.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When it comes to open source software, what do you want to be doing? Do you want an occasional hobby where you can have fun contributing back to the community? Have a significant impact on the world by being able to commit full time to growing the available pool of free &amp;amp; open source software? Spend time getting to know the needs of a particular organisation, and applying open source tools to solve their problems? Or perhaps you'd prefer to understand the general needs of a broad category of potential users, and design open source tools that will solve their problems without customisation? Getting involved in open source development communities can offer all these opportunities and more, but it also makes it incredibly easy for us to overcommit and burn ourselves out. If we're not careful, our unrealistic expectations can also contribute to the burnout of our peers. To ensure sustainability, we need to come to a shared understanding of some of the different ways we can engage with open source communities, what we can reasonably offer for free, and what we should expect to be paid for.&lt;/p&gt;
</summary></entry><entry><title>Contributors, Colleagues, Clients &amp; Customers: Sustaining Open Source Communities (Keynote)</title><link href="http://pyvideo.org/pygotham-2015/contributors-colleagues-clients-customers-su.html" rel="alternate"></link><published>2015-08-15T00:00:00+00:00</published><updated>2015-08-15T00:00:00+00:00</updated><author><name>Nick Coghlan</name></author><id>tag:pyvideo.org,2015-08-15:pygotham-2015/contributors-colleagues-clients-customers-su.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When it comes to open source software, what do you want to be doing? Do
you want an occasional hobby where you can have fun contributing back to
the community? Have a significant impact on the world by being able to
commit full time to growing the available pool of free &amp;amp; open source
software? Spend time getting to know the needs of a particular
organisation, and applying open source tools to solve their problems? Or
perhaps you'd prefer to understand the general needs of a broad category
of potential users, and design open source tools that will solve their
problems without customisation?&lt;/p&gt;
&lt;p&gt;Getting involved in open source development communities can offer all
these opportunities and more, but it also makes it incredibly easy for
us to overcommit and burn ourselves out. If we're not careful, our
unrealistic expectations can also contribute to the burnout of our
peers. To ensure sustainability, we need to come to a shared
understanding of some of the different ways we can engage with open
source communities, what we can reasonably offer for free, and what we
should expect to be paid for.&lt;/p&gt;
</summary></entry><entry><title>Python Beyond CPython: Adventures in Software Distribution</title><link href="http://pyvideo.org/scipy-2014/python-beyond-cpython-adventures-in-software-dis.html" rel="alternate"></link><published>2014-07-13T00:00:00+00:00</published><updated>2014-07-13T00:00:00+00:00</updated><author><name>Nick Coghlan</name></author><id>tag:pyvideo.org,2014-07-13:scipy-2014/python-beyond-cpython-adventures-in-software-dis.html</id><summary type="html"></summary></entry><entry><title>Nick Coghlan: Python Beyond (C)Python (Keynote)</title><link href="http://pyvideo.org/kiwi-pycon-2014/nick-coghlan-python-beyond-cpython-keynote.html" rel="alternate"></link><published>2014-09-13T00:00:00+00:00</published><updated>2014-09-13T00:00:00+00:00</updated><author><name>Nick Coghlan</name></author><id>tag:pyvideo.org,2014-09-13:kiwi-pycon-2014/nick-coghlan-python-beyond-cpython-keynote.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/nick-coghlan-python-beyond-c-python-adventures-in-software-distribution"&gt;https://speakerdeck.com/nzpug/nick-coghlan-python-beyond-c-python-adventures-in-software-distribution&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Panel: Python 3</title><link href="http://pyvideo.org/pycon-au-2011/panel-python-3.html" rel="alternate"></link><published>2011-08-23T00:00:00+00:00</published><updated>2011-08-23T00:00:00+00:00</updated><author><name>Nick Coghlan</name></author><id>tag:pyvideo.org,2011-08-23:pycon-au-2011/panel-python-3.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This is a panel discussion in which Nick Coghlan, Raymond Hettinger and
Richard Jones discuss the state of Python 3, some of the new features,
the 3rd party adoption, migration strategies and open to the floor for
questions.&lt;/p&gt;
</summary><category term="migration"></category><category term="python3"></category></entry><entry><title>How Python Evolves (and How You Can Help Make It Happen)</title><link href="http://pyvideo.org/pycon-au-2011/how-python-evolves-and-how-you-can-help-make-it.html" rel="alternate"></link><published>2011-08-22T00:00:00+00:00</published><updated>2011-08-22T00:00:00+00:00</updated><author><name>Nick Coghlan</name></author><id>tag:pyvideo.org,2011-08-22:pycon-au-2011/how-python-evolves-and-how-you-can-help-make-it.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The CPython reference interpreter lies at the heart of a much wider
Python ecosystem. The decisions that shape the future development of
CPython ripple out and have a broad impact on the entire Python
community. This talk covers the special place CPython occupies in the
broader Python community, how the decisions that affect CPython's
development are made, and how new developers can become involved in that
process..&lt;/p&gt;
</summary><category term="cpython"></category></entry><entry><title>Path Dependent Development: Why on Earth are you using SQL Alchemy as a JSON validator?</title><link href="http://pyvideo.org/pycon-au-2012/path-dependent-development-why-on-earth-are-you.html" rel="alternate"></link><published>2012-08-22T00:00:00+00:00</published><updated>2012-08-22T00:00:00+00:00</updated><author><name>Nick Coghlan</name></author><id>tag:pyvideo.org,2012-08-22:pycon-au-2012/path-dependent-development-why-on-earth-are-you.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The PulpDist project uses SQL Alchemy as part of a custom JSON
validator. This could be seen as an unusual choice, so it's worth
exploring the way this approach came to be adopted. Practicing iterative
development means coping with the tension between &amp;quot;doing the simplest
thing that could possibly work&amp;quot; to meet immediate project requirements
and avoiding &amp;quot;reinventing the wheel&amp;quot;.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PulpDist project uses SQL Alchemy as part of a custom JSON
validator. This could be seen as an unusual choice, so it's worth
exploring the way this approach came to be adopted.&lt;/p&gt;
&lt;p&gt;Practicing iterative development means coping with the inevitable
tension between &amp;quot;doing the simplest thing that could possibly work&amp;quot; to
meet immediate project requirements and avoiding &amp;quot;reinventing the wheel&amp;quot;
in order to take full advantage of existing software components.&lt;/p&gt;
&lt;p&gt;This means that iterative software designs are inevitably path
dependent: decisions made in early iterations can shape later aspects of
a project in unexpected ways. These early influences may even predate
the project itself, instead being a consequence of wider organisational
policies and the personal preferences and abilities of key developers.&lt;/p&gt;
&lt;p&gt;Understanding some of these factors can help with understanding why:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;good enough&amp;quot; is usually a better target than &amp;quot;perfect&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;Not Invented Here&amp;quot; syndrome is not always the villain it is
frequently made out to be&lt;/li&gt;
&lt;li&gt;the need to extensively rewrite existing components is not always a
sign of past failure&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="pulpdist"></category></entry><entry><title>Nobody Expects the Python Packaging Authority</title><link href="http://pyvideo.org/pycon-au-2013/nobody-expects-the-python-packaging-authority.html" rel="alternate"></link><published>2013-07-06T00:00:00+00:00</published><updated>2013-07-06T00:00:00+00:00</updated><author><name>Nick Coghlan</name></author><id>tag:pyvideo.org,2013-07-06:pycon-au-2013/nobody-expects-the-python-packaging-authority.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;These are interesting times for the Python packaging ecosystem, with the
Python Packaging Authority (creators of the popular pip and virtualenv
tools) emerging as the umbrella brand for a suite of related tools that
will bring support for updated packaging standards to both the upcoming
Python 3.4 and to existing versions of Python.&lt;/p&gt;
&lt;p&gt;This talk will cover some of the history of Python's packaging tools and
systems, where we are now, and where we aim to go in the future.&lt;/p&gt;
</summary></entry><entry><title>Python's Transition to Multilingual Programming</title><link href="http://pyvideo.org/pycon-au-2015/pythons-transition-to-multilingual-programming.html" rel="alternate"></link><published>2015-08-04T00:00:00+00:00</published><updated>2015-08-04T00:00:00+00:00</updated><author><name>Nick Coghlan</name></author><id>tag:pyvideo.org,2015-08-04:pycon-au-2015/pythons-transition-to-multilingual-programming.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Ugh, why does Unicode have to be so complicated? It's just text, why
can't it be as simple as writing a note for myself?&amp;quot;&lt;/p&gt;
&lt;p&gt;One of the more controversial changes in Python 3 is the decision to
handle text data entirely as Unicode code points. In this presentation,
CPython core developer Nick Coghlan will explore some of the background
of that design decision, the capabilities it grants Python 3 over Python
2, and some of the related features of the upcoming Python 3.5 release.&lt;/p&gt;
</summary></entry><entry><title>Panel: Directions for Packaging</title><link href="http://pyvideo.org/pycon-us-2013/panel-directions-for-packaging.html" rel="alternate"></link><published>2013-03-16T00:00:00+00:00</published><updated>2013-03-16T00:00:00+00:00</updated><author><name>Daniel Holth</name></author><id>tag:pyvideo.org,2013-03-16:pycon-us-2013/panel-directions-for-packaging.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;What needs to happen to finally offer a first-class packaging experience
to Python users? Several of the people working directly on that problem
will be here to answer your questions.&lt;/p&gt;
</summary><category term="talk"></category></entry></feed>