<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_tom-christie.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-05-20T00:00:00+00:00</updated><entry><title>Level up! Rethinking the Web API framework.</title><link href="http://pyvideo.org/pycon-us-2017/level-up-rethinking-the-web-api-framework.html" rel="alternate"></link><published>2017-05-20T00:00:00+00:00</published><updated>2017-05-20T00:00:00+00:00</updated><author><name>Tom Christie</name></author><id>tag:pyvideo.org,2017-05-20:pycon-us-2017/level-up-rethinking-the-web-api-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Think there's nothing left to explore in how we design Web API
frameworks? Think again.&lt;/p&gt;
&lt;p&gt;The author of Django REST framework walks through how we might approach
designing a new Python-based API framework from scratch, and looks at
how we can start building smarter, more productive API tooling as a
result.&lt;/p&gt;
&lt;p&gt;You should come away from this talk with a better appreciation of:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How best to provide API client libraries and API documentation to
your users.&lt;/li&gt;
&lt;li&gt;How to build APIs that support both realtime and request/response
interfaces.&lt;/li&gt;
&lt;li&gt;How to build APIs that are web-browsable.&lt;/li&gt;
&lt;li&gt;Why you might want to consider taking a schema-first approach to your
API design.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Django REST framework</title><link href="http://pyvideo.org/pycon-uk-2016/django-rest-framework.html" rel="alternate"></link><published>2016-09-17T00:00:00+00:00</published><updated>2016-09-17T00:00:00+00:00</updated><author><name>Tom Christie</name></author><id>tag:pyvideo.org,2016-09-17:pycon-uk-2016/django-rest-framework.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django REST framework: Schemas, Hypermedia &amp;amp; Client libraries.&lt;/p&gt;
&lt;p&gt;Tom Christie&lt;/p&gt;
&lt;p&gt;An introduction into using the very latest features of Django REST framework.&lt;/p&gt;
&lt;p&gt;This talk will demonstrate creating schema-driven &amp;amp; hypermedia-driven APIs. We'll look how you can interacting with these APIs using a dynamic client library, and discuss the design considerations of taking an interface-first approach to API design.&lt;/p&gt;
</summary></entry><entry><title>Introducing Django REST framework</title><link href="http://pyvideo.org/europython-2011/introducing-django-rest-framework.html" rel="alternate"></link><published>2011-07-13T00:00:00+00:00</published><updated>2011-07-13T00:00:00+00:00</updated><author><name>Tom Christie</name></author><id>tag:pyvideo.org,2011-07-13:europython-2011/introducing-django-rest-framework.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Tom Christie - 23 June 2011 in &amp;quot;Track Tagliatelle&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Django REST framework is a new project that aims to make it easy to
build RESTful Web APIs.&lt;/p&gt;
&lt;p&gt;The APIs it creates are fully Web browse-able, using an awesome Django
admin style interface, allowing them to be truly self-describing,
well-connected systems.&lt;/p&gt;
&lt;p&gt;The talk will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;RESTful Web APIs and Django - what batteries aren't in the box&lt;/li&gt;
&lt;li&gt;An introduction to the framework - What it is, what problems it tries
to solve&lt;/li&gt;
&lt;li&gt;Why it's so important that Web APIs should be Web browse-able&lt;/li&gt;
&lt;li&gt;A live coding demonstration&lt;/li&gt;
&lt;li&gt;Audience discussion&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sign up for the &lt;a class="reference external" href="http://ep2011.europython.eu/p3/sprints/"&gt;sprint&lt;/a&gt;
More &lt;a class="reference external" href="http://django-rest-framework.org"&gt;info&lt;/a&gt;&lt;/p&gt;
</summary><category term="django"></category><category term="framework"></category><category term="rest"></category><category term="web"></category></entry><entry><title>Documenting your project with MkDocs.</title><link href="http://pyvideo.org/europython-2014/documenting-your-project-with-mkdocs.html" rel="alternate"></link><published>2014-07-22T00:00:00+00:00</published><updated>2014-07-22T00:00:00+00:00</updated><author><name>Tom Christie</name></author><id>tag:pyvideo.org,2014-07-22:europython-2014/documenting-your-project-with-mkdocs.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;MkDocs is a new tool for creating documentation from Markdown.&lt;/p&gt;
&lt;p&gt;The talk will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to write, theme and publish your documentation.&lt;/li&gt;
&lt;li&gt;The background and motivation for MkDocs.&lt;/li&gt;
&lt;li&gt;Choosing between MkDocs or Sphinx.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will be a practical introduction to MkDocs, a new tool for
creating documentation from Markdown:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The background behind MkDocs and the motivation for creating a new
documentation tool.&lt;/li&gt;
&lt;li&gt;Comparing against Sphinx - what benefits each tool provides.&lt;/li&gt;
&lt;li&gt;Getting starting with MkDocs - how to write, theme and publish your
documentation.&lt;/li&gt;
&lt;li&gt;Under the covers - how MkDocs works, and some asides on a couple of
the neat Python libraries that it uses.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>