<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 21 May 2017 00:00:00 +0000</lastBuildDate><item><title>aiosmtpd - A better asyncio based SMTP server</title><link>http://pyvideo.org/pycon-us-2017/aiosmtpd-a-better-asyncio-based-smtp-server.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;smtpd.py has been in the standard library for many years. It's been a
common tool for deploying SMTP and LMTP servers that handle email-based
communication in Python, providing both basic protocol implementations
and a fundamental module for higher level tools, such as lazr.smtptest
for testing email clients. Based on asyncore and asynchat, smtpd.py is
showing its age, and its API is unwieldy.&lt;/p&gt;
&lt;p&gt;Fortunately, there's a new alternative available. aiosmtpd is a modern
reinvention based on asyncio, with all the improvements that come along
with such a new implementation. It provides servers for both the SMTP
and LMTP protocols, as well as a higher level &amp;quot;controller&amp;quot; API for
testing SMTP and LMTP clients. It exposes a much better API for
customization, allowing the user to associate a simple &amp;quot;handler&amp;quot; to
process incoming messages without having to worry about the details of
the protocols, and it provides some useful hooks for subclassing.&lt;/p&gt;
&lt;p&gt;This talk will describe the purpose and history of smtpd.py and
aiosmtpd, show how users can extend the servers and implement
specialized handlers, and show how applications can use the testing API
for ensuring that their email sending applications do the right things.
Examples will be taken from GNU Mailman 3, which uses aiosmtpd
extensively.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Barry Warsaw</dc:creator><pubDate>Sun, 21 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-21:pycon-us-2017/aiosmtpd-a-better-asyncio-based-smtp-server.html</guid></item><item><title>Tai Chi Principles for Mindful Programmers</title><link>http://pyvideo.org/kiwi-pycon-2016/tai-chi-principles-for-mindful-programmers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Barry Warsaw
&lt;a class="reference external" href="https://kiwi.pycon.org/schedule/presentation/141/"&gt;https://kiwi.pycon.org/schedule/presentation/141/&lt;/a&gt;
I've been playing music all my life, programming for almost 40 years, using Python for more than 20, and studying tai chi for nearly 15.  These life-long pursuits continue to reveal their truths as fun and interesting vocations and avocations.  My study of tai chi has had particularly profound consequences and in this talk I'll explore some of its applications to the world of programming.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Barry Warsaw</dc:creator><pubDate>Sun, 11 Sep 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-09-11:kiwi-pycon-2016/tai-chi-principles-for-mindful-programmers.html</guid></item><item><title>Mailman 3</title><link>http://pyvideo.org/pycon-us-2012/mailman-3.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mailman 3 has been in development for several years. This is an
evolution of the ever popular mailing list management system that runs
thousands of mailing lists around the world. This talk describes how the
code has been modernized and how the architectural deficiencies of
Mailman 2 have been addressed using REST and other technologies. This is
a spinoff from the AOSA chapter on Mailman 3.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Barry Warsaw</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2012-03-10:pycon-us-2012/mailman-3.html</guid></item></channel></rss>