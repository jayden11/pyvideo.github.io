<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_elasticsearch.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-10-09T00:00:00+00:00</updated><entry><title>ElasticSearch and Redis How and When to Use Them</title><link href="http://pyvideo.org/pydata-dc-2016/elasticsearch-and-redis-how-and-when-to-use-them.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Tim Marcinowski</name></author><id>tag:pyvideo.org,2016-10-09:pydata-dc-2016/elasticsearch-and-redis-how-and-when-to-use-them.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;When working with data, you have some viable options for keeping them in short and long-term storage. I will be going over why ElasticSearch and Redis are great for data storage. This talk will explain the purpose of each datastore when visualizing on Kibana or websockets.&lt;/p&gt;
</summary><category term="elasticsearch"></category><category term="redis"></category></entry><entry><title>Implantación de ElasticSearch: problemas y soluciones</title><link href="http://pyvideo.org/pycon-es-2015/implantacion-de-elasticsearch-problemas-y-soluciones.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>M. Sánchez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/implantacion-de-elasticsearch-problemas-y-soluciones.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla se presentará de manera resumida un caso real: el proceso de implantación de ElasticSearch en una aplicación de Django. Partiendo de la motivación de implementar un buscador, veremos los problemas encontrados por nuestro equipo (¡y sus soluciones!). A saber: instalación, definición de los documentos, modo de conexión, indexado, particionado y sincronía con nuestra base de datos.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="elasticsearch"></category><category term="django"></category></entry><entry><title>Komponenten einer komplexen Web-Applikation</title><link href="http://pyvideo.org/pycon-de-2013/komponenten-einer-komplexen-web-applikation.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Daniel Hepper</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/komponenten-einer-komplexen-web-applikation.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Komplexe Web-Applikationen bestehen aus mehr als einem Webserver, einer
Datenbank und etwas Code. Dieser Vortrag gibt einen Überblick über die
typischen Bausteine wie Celery als Task Queue, Haystack für
Volltextsuche, Sentry als Log-Diensten und automatischem Deployment mit
Fabric und Salt. Die vorgestellte Komponenten werden anhand einer
Django-Applikation erläutert, sind jedoch zum Großteil auch mit anderen
Frameworks nutzbar.&lt;/p&gt;
</summary><category term="celery"></category><category term="deployment"></category><category term="django"></category><category term="elasticsearch"></category><category term="fabric"></category><category term="haystack"></category><category term="salt"></category><category term="search"></category><category term="sentry"></category><category term="solr"></category></entry></feed>