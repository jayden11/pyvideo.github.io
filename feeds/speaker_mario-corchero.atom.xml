<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_mario-corchero.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-05-20T00:00:00+00:00</updated><entry><title>It's time for datetime. Painless working with time in python</title><link href="http://pyvideo.org/fosdem-2017/its-time-for-datetime-painless-working-with-time-in-python.html" rel="alternate"></link><published>2017-02-05T00:00:00+00:00</published><updated>2017-02-05T00:00:00+00:00</updated><author><name>Mario Corchero</name></author><id>tag:pyvideo.org,2017-02-05:fosdem-2017/its-time-for-datetime-painless-working-with-time-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with time is not a trivial challenge. Python includes a native module in the standard library to work with it but datetime keeps being together with unicode a common source of errors. This often leads to the widespread of many other libraries in the attempt of easing the work of working with datetime. Datetime is one of those API that looks easy to use but given the many concepts around time, is it easy to get backfired if the developer has not solid knowledge about the them.In this talk we will overview the main concepts about timestamps represented through datetime objects, the limitations on the standard library and some simple steps to try to avoid the common mistakes that everyone can fall into.Naive datetimes (which the datetime API works by default with) are a great tool to represent calendar times, but when talking about timestamps (focus of this talk) timezones is n essential part of it and the datetime module can be tricky to use for that use cases.We will also speak about different standards of time, time zones, Daylight Saving Times, leap seconds, serialization and datetime arithmetics.The talk will be focused on giving the foundations that everyone knows to be able to understand and work efficiently and without making painful mistakes when dealing with time related algorithms.&lt;/p&gt;
</summary></entry><entry><title>It's time for datetime</title><link href="http://pyvideo.org/pycon-us-2017/its-time-for-datetime.html" rel="alternate"></link><published>2017-05-20T00:00:00+00:00</published><updated>2017-05-20T00:00:00+00:00</updated><author><name>Mario Corchero</name></author><id>tag:pyvideo.org,2017-05-20:pycon-us-2017/its-time-for-datetime.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with time is not a trivial challenge. Python includes a native
module in the standard library to work with it but datetime keeps being
together with unicode a common source of errors. This often leads to the
widespread of many other libraries in the attempt of easing the work of
working with datetime. Datetime is one of those API that looks easy to
use but given the many concepts around time, is it easy to get backfired
if the developer has not solid knowledge about the them.&lt;/p&gt;
&lt;p&gt;In this talk we will overview the main concepts about timestamps
represented through datetime objects, the limitations on the standard
library and some simple steps to try to avoid the common mistakes that
everyone can fall into.&lt;/p&gt;
&lt;p&gt;Naive datetimes (which the datetime API works by default with) are a
great tool to represent calendar times, but when talking about
timestamps (focus of this talk) timezones is n essential part of it and
the datetime module can be tricky to use for that use cases.&lt;/p&gt;
&lt;p&gt;We will also speak about different standards of time, time zones,
Daylight Saving Times, leap seconds, serialization and datetime
arithmetics.&lt;/p&gt;
&lt;p&gt;The talk will be focused on giving the foundations that everyone knows
to be able to understand and work efficiently and without making painful
mistakes when dealing with time related algorithms.&lt;/p&gt;
</summary></entry><entry><title>Traveling in datetime</title><link href="http://pyvideo.org/pycon-es-2016/traveling-in-datetime.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Mario Corchero</name></author><id>tag:pyvideo.org,2016-10-08:pycon-es-2016/traveling-in-datetime.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tras un repaso rápido sobre el modulo time y datetime veremos los diferentes problemas que surgen al trabajar con zonas horarias y operaciones sobre fechas. La presentación incluirá un pequeño repaso sobre las diferentes formas de representar fechas.&lt;/p&gt;
&lt;p&gt;Presentación disponible en &lt;a class="reference external" href="https://mariocj89.github.io/reveal.js/datetime-pycones2016.html"&gt;https://mariocj89.github.io/reveal.js/datetime-pycones2016.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://2016.es.pycon.org/"&gt;http://2016.es.pycon.org/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>