<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Wed, 23 Jul 2014 00:00:00 +0000</lastBuildDate><item><title>An HTTP request's journey through a platform-as-a-service</title><link>http://pyvideo.org/europython-2014/an-http-requests-journey-through-a-platform-as-a.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;PythonAnywhere hosts tens of thousands of Python web applications, with
traffic ranging from a couple of hits a week to dozens of hits a second.
Hosting this many sites reliably at a reasonable cost requires a
well-designed infrastructure, but it uses the same standard components
as many other Python-based websites. We've built our stack on GNU/Linux,
nginx, uWSGI, Redis, and Lua -- all managed with Python. In this talk
we'll give a high-level overview of how it all works, by tracing how a
request goes from the browser to the Python application and its response
goes back again. As well as showing how a fairly large deployment works,
we'll give tips on scaling and share a few insights that may help people
running smaller sites discover how they can speed things up.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giles Thomas</dc:creator><pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-23:europython-2014/an-http-requests-journey-through-a-platform-as-a.html</guid></item></channel></rss>