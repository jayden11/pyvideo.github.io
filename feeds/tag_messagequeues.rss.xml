<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Thu, 09 Sep 2010 00:00:00 +0000</lastBuildDate><item><title>Massaging the Pony: Message Queues and You</title><link>http://pyvideo.org/djangocon-2010/djangocon-2010--massaging-the-pony--message-queue.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Message queues are a potential solution for any site that needs to
facilitate robust asynchronous operations on your website including
carrying out intensive or long-running actions or synchronizing off-site
services. We will look at how PBS has used Celery and RabbitMQ to
provide more reliable service and how to set up a robust message queue
solution in a cloud hosting environment.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;In maintaining several different site projects written in Django over
the past four years, the PBS Education team repeatedly found the need
for the ability to create asynchronous processes that could handle
long-running actions and mission-critical synchronization. We needed a
way to handle tasks such as generating reports on large data sets and
executing remote processes on fussy third-party services. The clear
solution to the problems we encountered was to implement a robust
message queue solution.&lt;/p&gt;
&lt;p&gt;Message queues allow sites to execute processes outside the normal HTTP
request cycle and then deliver the results of those processes in a
variety of ways. After a survey of all available message queue solutions
we settled on a combination of Celery and RabbitMQ to create a reliable,
always-available system that can handle mission-critical tasks. We can
easily develop against a message queue in our development builds, and we
have an infrastucture based in a cloud hosting service that allows us to
rely on the message queue without reservation.&lt;/p&gt;
&lt;p&gt;In this talk will will look at what a message queue does for your site,
how to implement a message queue in your Django code, and how to set up
a reliable message queue infrastructure on your servers. We will show
examples from some of our sites at PBS so it is clear how message queues
work and to present some common use cases that warrant a message queue
solution. We will also discuss some of the design patterns that made it
easy to switch to message queue based processing for discreet tasks, as
well as some of the things we learned that have made the solution even
easier to implement for new tasks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shawn Rider</dc:creator><pubDate>Thu, 09 Sep 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-09-09:djangocon-2010/djangocon-2010--massaging-the-pony--message-queue.html</guid><category>celery</category><category>djangocon</category><category>djangocon2010</category><category>messagequeues</category><category>queues</category><category>rabbitmq</category></item></channel></rss>