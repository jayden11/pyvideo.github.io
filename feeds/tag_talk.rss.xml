<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 02 Aug 2015 00:00:00 +0000</lastBuildDate><item><title>Atypes, Btypes and Ctypes</title><link>http://pyvideo.org/pyohio-2013/atypes-btypes-and-ctypes.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Ctypes is a great way to bring the depth and breadth of C libraries into
Python. Whether trying not to reinvent the wheel, squeezing a bit more
performance out of your code or needing to interoperate with C software,
ctypes could be exactly what you need.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Timby</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-28:pyohio-2013/atypes-btypes-and-ctypes.html</guid><category>talk</category></item><item><title>diesel: Simple and Scalable Network Applications</title><link>http://pyvideo.org/pyohio-2013/diesel-simple-and-scalable-network-applications.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An introduction to writing client and server applications using the
diesel network programming framework.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Wyglendowski</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-28:pyohio-2013/diesel-simple-and-scalable-network-applications.html</guid><category>talk</category></item><item><title>Django Powered Mobile Apps</title><link>http://pyvideo.org/pyohio-2013/django-powered-mobile-apps.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Django is a great platform for developing the infrastructure for mobile
apps. This talk will cover API design, prototyping, and writing
excellent documentation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Kuehlhorn</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-28:pyohio-2013/django-powered-mobile-apps.html</guid><category>talk</category></item><item><title>Gittle: Pure Python Git</title><link>http://pyvideo.org/pyohio-2013/gittle-pure-python-git.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A talk about implementing the git protocol entirely in Python by
building on top of Dulwich and then building a higher level library
called gittle which basically is &amp;quot;git for humans&amp;quot;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aaron O'Mullan</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-28:pyohio-2013/gittle-pure-python-git.html</guid><category>talk</category></item><item><title>Hardware Design in Python</title><link>http://pyvideo.org/pyohio-2013/hardware-design-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will review the MyHDL package and digital hardware design at
the RTL level with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Felton</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-28:pyohio-2013/hardware-design-in-python.html</guid><category>talk</category></item><item><title>Keeping library compatible with Python 2.6-3.4 using python-systemd as example</title><link>http://pyvideo.org/pyohio-2013/keeping-library-compatible-with-python-26-34-u.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How hard is it to port a library to python 3? How much work is it going
forward? Based on two examples (a pure Python, and a C-extension-based
library), I want to show how in my experience the work required is
modest, without significant impact on old code. At the same time,
keeping Python2 compatibility constrains development under Python 3
because only the common subset of features can be used.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zbigniew Jędrzejewski-Szmek</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-28:pyohio-2013/keeping-library-compatible-with-python-26-34-u.html</guid><category>talk</category></item><item><title>My Adventures with Mock</title><link>http://pyvideo.org/pyohio-2013/my-adventures-with-mock.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Mock is a powerful testing library. Unfortunately, there seems to be a
trend of confusion and distress among those who are just getting started
with Mock. This talk will highlight my experience learning Mock, and
will list a few of the patterns that I've seen emerge during my quest
for 100% test coverage.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Montgomery</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-28:pyohio-2013/my-adventures-with-mock.html</guid><category>talk</category></item><item><title>Python + FUSE</title><link>http://pyvideo.org/pyohio-2013/python-fuse.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;FUSE allows you to fake a filesystem in your userspace without mucking
around in the kernel. This allows you to do things like showing remote
cloud-based backup products as local filesystems. This talk explores
such an implementation for mounting a Copy.com account as a local
filesystem, and addresses some of the common gotchas to help you
implement a FUSE layer for your preferred service.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zach Wick</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-28:pyohio-2013/python-fuse.html</guid><category>talk</category></item><item><title>Saturday Morning BreakfastSerial: Hacking Arduinos in Python</title><link>http://pyvideo.org/pyohio-2013/saturday-morning-breakfastserial-hacking-arduino.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Normally when you want to hack on a sweet hardware project, you bust out
your Arduino and start coding in what may as well be C. We as Python
developers know that sucks! Introducing BreakfastSerial, a framework
that makes it super simple to interact with Arduinos using just Python.
In this session, you'll learn the basics, see some fun demos, and become
a hardware-hacking pro in no time flat.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Swift</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-28:pyohio-2013/saturday-morning-breakfastserial-hacking-arduino.html</guid><category>talk</category></item><item><title>The IPython Notebook Revolution</title><link>http://pyvideo.org/pyohio-2013/the-ipython-notebook-revolution.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;If you think of IPython as simply an enhanced version of the live Python
prompt, you are in need of re-education. No matter what you do with
Python, applying the IPython Notebook imaginatively will revolutionize
the way you do it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Devlin</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-28:pyohio-2013/the-ipython-notebook-revolution.html</guid><category>talk</category></item><item><title>A Text Adventure in Python</title><link>http://pyvideo.org/pyohio-2013/a-text-adventure-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Ever want to write interactive fiction using your favorite language?
Using only the Python standard library, one can write a modestly
functional text adventure from scratch. This interactive talk will
quickly walk through the process, touching a number of standard library
modules, from command lines to string handling to data storage, that can
help bring a game to life.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffrey Armstrong</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/a-text-adventure-in-python.html</guid><category>talk</category></item><item><title>APIs made for mobile networks</title><link>http://pyvideo.org/pyohio-2013/apis-made-for-mobile-networks.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Python and web development communities have gotten pretty good at
writing REST APIs for browsers and desktop clients. But porting that to
the high-latency wild-west of mobile networks requires a paradigm shift.
Learn how you can speed up your mobile API using proven technologies -
and avoid writing your own protocol!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Ridenour</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/apis-made-for-mobile-networks.html</guid><category>talk</category></item><item><title>Arbitrage on Amazon: Exploiting the Textbook Trade-ins with Python</title><link>http://pyvideo.org/pyohio-2013/arbitrage-on-amazon-exploiting-the-textbook-trad.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Amazon introduced the ability to trade-in previously owned textbooks in
exchange for Amazon gift cards. With an opportunity to &amp;quot;buy low-sell
high&amp;quot;, Brandon leveraged Python to automate many facets of simple
workflows and operate at scale. This talk focuses how to enslave the
Machine and put it to work for you with a full teardown of Brandon's
automated Amazon adventure for fun and profit.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Lorenz</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/arbitrage-on-amazon-exploiting-the-textbook-trad.html</guid><category>talk</category></item><item><title>Better Mapping with Shapely</title><link>http://pyvideo.org/pyohio-2013/better-mapping-with-shapely.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will be about using the Python package Shapely, its features,
and how to use them to build better maps and data visualizations.&lt;/p&gt;
&lt;p&gt;This talk will be accesible to anyone who understands basic geometry and
how to read a map.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alison Alvarez</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/better-mapping-with-shapely.html</guid><category>talk</category></item><item><title>Code Reading Python</title><link>http://pyvideo.org/pyohio-2013/code-reading-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;You know enough Python now to write small programs, but you want to be
able to write bigger ones. A good step towards that is studying existing
programs, and open source provides lots to learn from. You may even want
to choose one so you can contribute to it.&lt;/p&gt;
&lt;p&gt;Reading code is an acquired skill, we will explore ways to do that
effectively.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Fetherston</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/code-reading-python.html</guid><category>talk</category></item><item><title>Flasky Goodness</title><link>http://pyvideo.org/pyohio-2013/flasky-goodness.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk dives into Service-Oriented Architecture and why Django isn't
always the best tool for the job. We'll overview the Flask web
framework, and how it can be a great fit for distributed applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Reitz</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/flasky-goodness.html</guid><category>talk</category></item><item><title>Introduction to SQLAlchemy and Alembic Migrations</title><link>http://pyvideo.org/pyohio-2013/introduction-to-sqlalchemy-and-alembic-migrations.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk, we'll examine how to use SQLAlchemy ORM and Core in both
simple queries and query builder type applications. Next, we'll explore
Alembic database migrations and how we can use them to handle database
changes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Myers</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/introduction-to-sqlalchemy-and-alembic-migrations.html</guid><category>talk</category></item><item><title>PyOhio 2013 Keynote: Sine Qua Nons</title><link>http://pyvideo.org/pyohio-2013/keynote-4.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;What are the key features of a modern dynamic language like Python that
let a programmer make progress even against difficult problems, even on
days when things are not going well? Starting simple and then ramping up
to complex, Brandon takes us from how beginners can use a Python
dictionary to pair up matching data, to how to use ctypes to work around
limitations in the built-in Python SSL module, as he takes us through
the tools and approaches that for a Python programmer are all part of a
day's work — the features without which we would not be as productive.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/keynote-4.html</guid><category>talk</category></item><item><title>Large scale network analysis w/ python and igraph</title><link>http://pyvideo.org/pyohio-2013/large-scale-network-analysis-w-python-and-igraph.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Networks are a convenient way to model messy problems. I will talk about
my 2.5 year sideproject, my ambitious attempt to map and model the
nuance and beautiful complexity of the twittersphere.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Timothy Wilson</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/large-scale-network-analysis-w-python-and-igraph.html</guid><category>talk</category></item><item><title>ORM vs SQL Roundup</title><link>http://pyvideo.org/pyohio-2013/orm-vs-sql-roundup.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;We will be discussing pros and cons of various Python ORMs vs. using
straight SQL. The goal will be to help developers decide the right
decision next time they have to decide what to do for database access
for their app.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Robellard</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/orm-vs-sql-roundup.html</guid><category>talk</category></item><item><title>Pika and Queues</title><link>http://pyvideo.org/pyohio-2013/pika-and-queues.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In a world of distributed programming and asynchronous web apps, a
dedicated message passing service is useful. Enter the Asynchronous
Message Queue Protocol(AMQP) and Pika python library. With RabbitMQ as
our AMQP provider, we will explore the use of Pika to setup a workqueue
between two services, distribute tasks between workers, setup a PubSub
service, and improve responsiveness of websites.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matthew Lauber</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/pika-and-queues.html</guid><category>talk</category></item><item><title>Playing with PyEphem</title><link>http://pyvideo.org/pyohio-2013/playing-with-pyephem.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;PyEphem is a powerful astronomy library. This talk covers some simple
things you can do with PyEphem that relate to your everyday life, such
as matching your sleep cycle to the sunrise and seeing what the moon is
up to tonight. This will also include plotting data about the sky using
matplotlib.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ann Elliott</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/playing-with-pyephem.html</guid><category>talk</category></item><item><title>Porting Half a Million Lines to Python 3</title><link>http://pyvideo.org/pyohio-2013/porting-half-a-million-lines-to-python-3.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Eventbrite is a successful online ticketing site, built on half a
million lines of Python, dating to before 2007. Python 3 shipped four
years ago, and we're excited about all of its improvements. But what's
it like to port 6 years and half a million lines to Python 3.3? Join me
to learn about why we want to port, what the initial porting experiment
revealed, and what the trouble areas are.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Yergler</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-07-27:pyohio-2013/porting-half-a-million-lines-to-python-3.html</guid><category>talk</category></item><item><title>Bobo, a web framework that's easy to learn and remember</title><link>http://pyvideo.org/pyohio-2014/bobo-a-web-framework-thats-easy-to-learn-and-re.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Bobo is a lightweight web framework designed to be easy to use and
remember. In this talk, I'll give an introduction to Bobo. I'll discuss
micro-frameworks and why they aren't limited to small problems.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim Fulton</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/bobo-a-web-framework-thats-easy-to-learn-and-re.html</guid><category>talk</category></item><item><title>Building Web APIs with Flask-RESTful</title><link>http://pyvideo.org/pyohio-2014/building-web-apis-with-flask-restful.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The Flask framework’s DIY nature makes it ideal for implementing REST
APIs. Flask-RESTful is a Flask extension providing reusable, extensible
behavior for common elements of REST APIs like content negotiation,
input validation, and output marshalling. This talk will show how to use
Flask-RESTful to build a REST API, demonstrating how to start from a
blueprint to adapt it for your own use cases.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Kimbrel</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/building-web-apis-with-flask-restful.html</guid><category>talk</category></item><item><title>Configman - the grand unified theorem of configuration</title><link>http://pyvideo.org/pyohio-2014/configman-the-grand-unified-theorem-of-configur.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Have you ever noticed that none of the the Pythonic methods of
configuration are compatible with each other? Command line modules know
nothing of the multiple types of configuration files or environment
variables. Configman, the grand unified theorem of configuration, unites
them all, giving a single API for all configuration and offering an
inadvertent dependency injection framework with it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">K Lars Lohn</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/configman-the-grand-unified-theorem-of-configur.html</guid><category>talk</category></item><item><title>Digging into Abstract Syntax Trees for analyzing and modifying Python programs</title><link>http://pyvideo.org/pyohio-2014/digging-into-abstract-syntax-trees-for-analyzing.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will explain how the python interpreter uses the ast module to
turn the code you write into Abstract Syntax Trees which are then
executed. With an understanding of these underlying techniques we'll
examine static analysis tools such as pyflakes and talk about how to
create programs that analyze the structure of python scripts.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Haney</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/digging-into-abstract-syntax-trees-for-analyzing.html</guid><category>talk</category></item><item><title>Djangular</title><link>http://pyvideo.org/pyohio-2014/djangular.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;AngularJS is a powerful JavaScript MVC Framework that is growing in
popularity among developers every day. Paired with the power of Django's
ORM and the Django Rest Framework, developers can build complex
applications that enforce good client side and server side separation.
This talk will be a walk-through of the Django Tutorial using AngularJS
on the front end.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Camilli</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/djangular.html</guid><category>talk</category></item><item><title>Five Ounce Racer - Revving Up Pinewood Derby Software in Python</title><link>http://pyvideo.org/pyohio-2014/five-ounce-racer-revving-up-pinewood-derby-soft.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will tour you through the ins-and-outs of running a pinewood
derby, my experience revving up in Python to build the derby software,
and how the choice to learn Python over the alternatives provided all
the fuel necessary to make the job fast and fun. Revving up on Python
had its challenges, but also got me across the finish line with a
working product and time to spare.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt McElheny</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/five-ounce-racer-revving-up-pinewood-derby-soft.html</guid><category>talk</category></item><item><title>HOWTO: Teach Python to Read</title><link>http://pyvideo.org/pyohio-2014/howto-teach-python-to-read.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Not all data is numeric! People find words a more efficient means of
communication. Manually analyzing text can be slow, subjective and
inconsistent. Fortunately, the Natural Language ToolKit (NLTK) is ready
to help. NLTK can perform many techniques in natural language processing
(NLP) and ships with many corpora. This talk will survey fundamental NLP
methods and how to use them with NLTK.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Douglas  Starnes</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/howto-teach-python-to-read.html</guid><category>talk</category></item><item><title>Implementing Celery, Lessons Learned</title><link>http://pyvideo.org/pyohio-2014/implementing-celery-lessons-learned.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will include a walkthrough of using Celery and RabbitMQ. We
will cover actual issues found and fixed during an actual
implementation. such as Queues in stage and production. Handling
Failures. Retries, Failure Queues, and Logging. Integrating with SQL
Alchemy for producers and consumers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Robellard</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/implementing-celery-lessons-learned.html</guid><category>talk</category></item><item><title>Machine learning the hard way -- a story about ponies</title><link>http://pyvideo.org/pyohio-2014/machine-learning-the-hard-way-a-story-about-po.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Before you dive into a machine learning project, learn from the mistakes
that I made while building a prediction engine for betting on horse
races. In this introductory talk, learn about common data science tasks
like data munging, pre-processing, classification, regression, and
interpreting results.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Taggart</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/machine-learning-the-hard-way-a-story-about-po.html</guid><category>talk</category></item><item><title>Painting on a Distributed Canvas: An Advanced Guide to Celery Workflows</title><link>http://pyvideo.org/pyohio-2014/painting-on-a-distributed-canvas-an-advanced-gui.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Celery is great for asynchronously sending emails from your web app. But
what happens when you grow beyond simple &amp;quot;set it and forget it&amp;quot; tasks?
This talk explores Celery's workflow primitives and how to create
complex distributed applications. It assumes knowledge of Python and
Celery. By the end, you will better understand how to structure
distributed work that robustly scales.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Gouldin</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/painting-on-a-distributed-canvas-an-advanced-gui.html</guid><category>talk</category></item><item><title>Python, Hardware, Networks and your toolbox for Interactive Art.</title><link>http://pyvideo.org/pyohio-2014/python-hardware-networks-and-your-toolbox-for-i.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Issac builds art and tells stories professionally with hardware and
software. With an extraordinary project come extraordinary challenges.
Having the right toolkit keeps you nimble enough to forge into the
unknown with confidence. In this talk we'll explore a contrived art
project with hardware, software, and networks, built with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Issac Kelly</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/python-hardware-networks-and-your-toolbox-for-i.html</guid><category>talk</category></item><item><title>Recognizing Speech in Python</title><link>http://pyvideo.org/pyohio-2014/recognizing-speech-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;When it comes to computing heavy application such as recognizing speech,
there is a tendency to move towards statically typed compiled languages
citing speed. However I have built a speech recognizer completely in
Python and able to achieve very good performance with it and hence would
like to give a demo of it and share my experience.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anoop Hallur</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/recognizing-speech-in-python.html</guid><category>talk</category></item><item><title>Software Radio with CTypes</title><link>http://pyvideo.org/pyohio-2014/software-radio-with-ctypes.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;The RTL-SDR is a ~$20 USB stick made for watching the European digital
TV DVB standard. It was discovered it can also be a general purpose
radio receiver and spectrum analyzer. We will evaluate these devices by
listening to broadcast FM or emergency frequencies, and demonstrate an
original open source Python library I wrote for them.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Winningham</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/software-radio-with-ctypes.html</guid><category>talk</category></item><item><title>The Clean Architecture in Python</title><link>http://pyvideo.org/pyohio-2014/the-clean-architecture-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Even design-conscious programmers find large applications difficult to
maintain. Come learn about how the recently propounded “Clean
Architecture” applies in Python, and how this high-level design pattern
fits particularly well with the features of the Python language and
answers questions that experienced programmers have been asking. (An
update of my un-recorded talk from PyCon Ireland 2013!)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/the-clean-architecture-in-python.html</guid><category>talk</category></item><item><title>The Quest for the Pocket-Sized Python</title><link>http://pyvideo.org/pyohio-2014/the-quest-for-the-pocket-sized-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk surveys the current landscape of Python on the major Mobile
platforms, and ways you can start targeting Mobile platforms with your
Python code. We'll look at considerations for Mobile web development,
the state of Python-based mobile toolkits, and progress towards
Python-coded native UIs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Neugebauer</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/the-quest-for-the-pocket-sized-python.html</guid><category>talk</category></item><item><title>Using ZMQ for Fun and Profit</title><link>http://pyvideo.org/pyohio-2014/using-zmq-for-fun-and-profit.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk, we will discuss how to use the ZMQ library to build a
distributed computing system. We will cover the basics of getting
started with ZMQ, designing the flow of data through the system and
offer some advice on best practices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Blewett</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/using-zmq-for-fun-and-profit.html</guid><category>talk</category></item><item><title>Warming up to Graphs</title><link>http://pyvideo.org/pyohio-2014/warming-up-to-graphs.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Graphs are a powerful data structure and are increasingly relevant for
today's social and data-centric applications. This talk offers a brief
overview of Graphs, Graph theory, and explores scenarios where using a
Graph database (particularly Neo4j) can be of great benefit.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Montgomery</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-27:pyohio-2014/warming-up-to-graphs.html</guid><category>talk</category></item><item><title>A gentle introduction to asyncio</title><link>http://pyvideo.org/pyohio-2014/a-gentle-introduction-to-asyncio.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Asyncio is the new standard library module for doing asynchronous IO and
concurrency in Python 3.4. In this talk, I'll discuss some earlier
strategies for writing such code in Python. I'll cover some of the
decisions that went into it's design. Then I'll walk through a tuturial
on asyncio itself. Finally, I'll take some well known example code for
Gevent and Twisted, and rewrite it in asyncio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Costlow</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/a-gentle-introduction-to-asyncio.html</guid><category>talk</category></item><item><title>A new default web stack</title><link>http://pyvideo.org/pyohio-2014/a-new-default-web-stack.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;When building a new web application, the default set of tools used to be
a web framework such as Django and a relational database such as
PostgreSQL. In 2014, these tools are no longer enough. In this talk,
I'll present a new default stack to help build applications that are
faster, more robust, easy to scale and still support rapid iteration and
fast feature development.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simon Willison</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/a-new-default-web-stack.html</guid><category>talk</category></item><item><title>A Python Script to Replace a DOS Batch File Adventure</title><link>http://pyvideo.org/pyohio-2014/a-python-script-to-replace-a-dos-batch-file-adven.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An engineer who turned C++ programmer began an adventure well outside
his comfort zone and found Python. The discovery is highlighted while a
dos batch script is converted into a much more powerful Python script.
Several standard modules that were useful in the script are covered.
This retrospective of one's discovery of Python is very newbie friendly
and entertaining for experienced as well.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Craig Lang</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/a-python-script-to-replace-a-dos-batch-file-adven.html</guid><category>talk</category></item><item><title>Analyzing social media data with Python</title><link>http://pyvideo.org/pyohio-2014/analyzing-social-media-data-with-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;What does the perfect tweet or a viral blog post look like? When should
it be posted? We'll introduce various tools for working with data in
terms of collecting (requests), exploring (IPython, pandas), analyzing
(NLTK, scikit-learn) and visualizing (matplotlib). In the process, we
will uncover some surprising strategies for getting content shared
across social media.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fletcher Heisler</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/analyzing-social-media-data-with-python.html</guid><category>talk</category></item><item><title>Docker 101: Meet the portable future (tutorial)</title><link>http://pyvideo.org/pyohio-2014/docker-101-meet-the-portable-future-tutorial.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Docker was one of last year’s most talked about open source projects -
but what is it? And what does it mean for deploying applications? This
tutorial will explain what docker is and where it fits in with other
deployment and configuration management tools. Students will then learn
the basics of working with docker containers, how to “dockerize” their
apps, and some emerging docker best practices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew T. Baker</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/docker-101-meet-the-portable-future-tutorial.html</guid><category>talk</category></item><item><title>Functional programming in Python with PyToolz</title><link>http://pyvideo.org/pyohio-2014/functional-programming-in-python-with-pytoolz.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Learn the principles of functional programming from the comfort of
Python. I'll motivate the principles of standardization, composability,
laziness, and purity within a standard workflow. We'll go far beyond the
standard libraries &lt;tt class="docutils literal"&gt;itertools&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;functools&lt;/tt&gt; by using a functional
standard library &lt;tt class="docutils literal"&gt;toolz&lt;/tt&gt; and its high-performance counterpart
&lt;tt class="docutils literal"&gt;cytoolz&lt;/tt&gt; written in Cython.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Welch</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/functional-programming-in-python-with-pytoolz.html</guid><category>talk</category></item><item><title>Getting Python All Up in Your Mobile with Kivy</title><link>http://pyvideo.org/pyohio-2014/getting-python-all-up-in-your-mobile-with-kivy.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;You know you can use Python to make apps for desktops and the web, but
did you know you can also use it to make mobile apps? Kivy is a Python
GUI framework for making cross-platform multitouch applications. This
talk will introduce Kivy's mobile dev stack, focusing mainly on Android.
It will be made using a Kivy app on an Android device, and which was
developed entirely on an Android device.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Rousch</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/getting-python-all-up-in-your-mobile-with-kivy.html</guid><category>kivy</category><category>talk</category></item><item><title>Introduction to Celery</title><link>http://pyvideo.org/pyohio-2014/introduction-to-celery.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Many people in the Python community have heard of Celery and aren't
really sure when to use it or how to get started. This talk covers some
of the first questions of a new Celery user. It will also point out some
common pitfalls for beginning users.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Smith</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/introduction-to-celery.html</guid><category>talk</category></item><item><title>Introduction to Pandas</title><link>http://pyvideo.org/pyohio-2014/introduction-to-pandas.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Pandas is a great library for working reporting and statistical
analysis. We will cover data manipulation using Pandas, including
indexing, alignment, join/merge methods, date/time types, and missing
data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Myers</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/introduction-to-pandas.html</guid><category>talk</category></item><item><title>Make API Calls Wicked Fast with Redis</title><link>http://pyvideo.org/pyohio-2014/make-api-calls-wicked-fast-with-redis.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Sure, your API calls may be fast. But could they be faster? Redis is a
wonderful tool that can be used as a cache API responses. By
implementing API caching, you can avoid hitting rate limits and/or
reduce the load on your database, resulting in better performance for
your web app.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lindsey Brockman</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/make-api-calls-wicked-fast-with-redis.html</guid><category>talk</category></item><item><title>Making and taking phone calls with octothorpe</title><link>http://pyvideo.org/pyohio-2014/making-and-taking-phone-calls-with-octothorpe.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An introduction to and demonstration of octothorpe, Matt's Twisted
library for controlling the Asterisk telephony engine. Watch what's
going on inside Asterisk, answer the phone with &amp;quot;hello world&amp;quot;, ring
phones, and present an interactive phone menu, connecting up to just
about anything else with Twisted.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Behrens</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/making-and-taking-phone-calls-with-octothorpe.html</guid><category>talk</category></item><item><title>Postgres with Python inside and out: PL/Python</title><link>http://pyvideo.org/pyohio-2014/postgres-with-python-inside-and-out-plpython.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This talk will primarily cover PL/Python, allowing you to write
procedural functions inside yoour databases. Specifically we'll cover
the basics of writing a function, touch upon some advanced usage like
trigger functions, and then display some fun things that can be done
when Python runs inside the database.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Williams</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/postgres-with-python-inside-and-out-plpython.html</guid><category>talk</category></item><item><title>Pushy Postgres and Python</title><link>http://pyvideo.org/pyohio-2014/pushy-postgres-and-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;PostgreSQL is widely regarded as a powerful, full-featured,
high-performance, scalable open source relational database management
system. But did you know that Postgres has a built in publish-subscribe
implementation? This powerful feature offers exciting possibilities for
distributed, data-centric applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Rocco</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/pushy-postgres-and-python.html</guid><category>talk</category></item><item><title>Python for the Class of 2023</title><link>http://pyvideo.org/pyohio-2014/python-for-the-class-of-2023.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;How do we reach students and help them learn to program in Python?&lt;/p&gt;
&lt;p&gt;By engaging teachers; but it's not as easy as it looks. Hear one
teacher's story about how the community reached her. This talk includes
coverage the Young Coders Classes she brought to her school in May 2014.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amy Flatt</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/python-for-the-class-of-2023.html</guid><category>talk</category></item><item><title>So you think you can PDB?</title><link>http://pyvideo.org/pyohio-2014/so-you-think-you-can-pdb.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;An intro to using PDB. Overview and example usage of all the basic
commands.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clayton Parker</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/so-you-think-you-can-pdb.html</guid><category>talk</category></item><item><title>Solving the Heat Equation in Python!</title><link>http://pyvideo.org/pyohio-2014/solving-the-heat-equation-in-python.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;In this talk we will solve two partial differential equations by using a
very small subset of numpy, scipy, matplotlib, and python. We will then
use a couple of techniques to generate beautiful animations of the
solutions we find. The listeners will see how easy it is to get serious
work done with only a beginner's knowledge of Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Melvyn Ian Drag</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/solving-the-heat-equation-in-python.html</guid><category>talk</category></item><item><title>Using the Shapely Package for the Care and Feeding of your 2-D Spatial Data</title><link>http://pyvideo.org/pyohio-2014/using-the-shapely-package-for-the-care-and-feedin.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Shapely is a free python package for creating and manipulating points,
lines and shapes with ease. 2-D spatial data can be used to create
games, run virtual experiments, interpret political landscapes, or model
human behavior. The concepts in this talk should be accessible to anyone
with basic python knowledge.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alison Alvarez</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/using-the-shapely-package-for-the-care-and-feedin.html</guid><category>talk</category></item><item><title>Watch your Python script with strace</title><link>http://pyvideo.org/pyohio-2014/watch-your-python-script-with-strace.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Modern operating systems sandbox each process inside of a virtual memory
map from which direct I/O operations are generally impossible. Instead,
a process has to ask the operating system every time it wants to modify
a file or communicate bytes over the network. By using operating system
specific tools to watch the system calls a Python script is making --
using &amp;quot;strace&amp;quot; under Linux or &amp;quot;truss&amp;quot; under Mac OS X -- you can study
how a program is behaving and address several different kinds of bugs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-07-26:pyohio-2014/watch-your-python-script-with-strace.html</guid><category>talk</category></item><item><title>A Trip to the SPA</title><link>http://pyvideo.org/pyohio-2015/a-trip-to-the-spa.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern web application experiences demand Single-Page-Application
architectures. Join us on a journey building a simple kanban board with
Flask and AngularJS. We'll hack together a simple server API with
Flask-SQLAlchemy and Flask-Marshmallow, then link it into a Bootstrap
frontend with ngResource.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Griffith</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/a-trip-to-the-spa.html</guid><category>talk</category></item><item><title>Catching the bus on time -- Using Python, a Pebble Watch and (kind of) Open Data</title><link>http://pyvideo.org/pyohio-2015/catching-the-bus-on-time-using-python-a-pebbl.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Taking the bus used to be hard. You'd have to find a timetable, map out
your route, and then cross your fingers that the bus actually showed up
on time! Modern transit systems have equipped their fleet with GPS
devices which provide near real-time location information. Using open
data systems, a Python webapp, and a Pebble watch, let's build a bus
time tracker that would make Dick Tracy envious!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Heinen</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/catching-the-bus-on-time-using-python-a-pebbl.html</guid><category>talk</category></item><item><title>Developing a RESTful Python service on Windows</title><link>http://pyvideo.org/pyohio-2015/developing-a-restful-python-service-on-windows.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will walk you through the development and design experience of
the speaker creating a Python web service on Windows. It will give an
overview of integrating a WSGI server with Microsoft IIS or other
alternatives. In addition to the operational server infrastructure, this
talk includes some discussion of RESTful practices and client side code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joel B. Mohler</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/developing-a-restful-python-service-on-windows.html</guid><category>talk</category></item><item><title>Fumbling Forward - Docker Don'ts</title><link>http://pyvideo.org/pyohio-2015/fumbling-forward-docker-donts.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Questing for the continuous-deployment grail, I've had plenty of pit and
prat falls. Perhaps others can learn from my mistakes and do as I
didn't. This talk will demonstrate how [not] to stitch together Docker,
Compose, Machine, Boot2Docker, YAML, CircleCI, EC2, Route53, and likely
a few other tools into a simple yet automated code -&amp;gt; commit -&amp;gt; review
-&amp;gt; deploy process.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason M. Green</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/fumbling-forward-docker-donts.html</guid><category>talk</category></item><item><title>Growler - Using asyncio to Build a Web Framework</title><link>http://pyvideo.org/pyohio-2015/growler-using-asyncio-to-build-a-web-framework.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The asyncio library introduced a native way for python programs to
handle multiple network connections with one thread, asynchronously.
Inspired by the Express framework for nodejs, I set out to write my own
web server using the new library. This is what I've learned.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Kubera</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/growler-using-asyncio-to-build-a-web-framework.html</guid><category>talk</category></item><item><title>Introduction to PySchool.net</title><link>http://pyvideo.org/pyohio-2015/introduction-to-pyschoolnet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PySchool.net is a Python programming environment where students can
create, edit, load, save and execute Python scripts directly in a
browser. The main directives of PySchool.net is to be free for educators
and students, and to reduce the technological burdens of hosting
programming classes. PySchool.net is powered by Brython, and is 100%
open source and is hosted on github.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Billy Earney</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/introduction-to-pyschoolnet.html</guid><category>talk</category></item><item><title>Making sense of CORS using web.py</title><link>http://pyvideo.org/pyohio-2015/making-sense-of-cors-using-webpy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cross-Origin Resource Sharing is the bane of Javascript API clients
existence. It is possible to easily implement CORS support in your
Python server code with just a few simple request headers. Once your API
is talking CORS, you are free from the tyranny of browsers' same-origin
security policies. This talk will explain what CORS is, why should care,
and work through an example using web.py.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zach Wick</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/making-sense-of-cors-using-webpy.html</guid><category>talk</category></item><item><title>Production Django: Building a Highly Scalable, Secure Django Site</title><link>http://pyvideo.org/pyohio-2015/production-django-building-a-highly-scalable-se.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When your Django application is ready for primetime, how do you ensure
that it won't crash the second real users begin interacting with it? In
this talk, we'll discuss building secure, scalable Django applications
and the infrastructure they need to stand up to the test of production.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joseph Mosby</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/production-django-building-a-highly-scalable-se.html</guid><category>talk</category></item><item><title>Python for Economists: An overview of Python tools for Economists</title><link>http://pyvideo.org/pyohio-2015/python-for-economists-an-overview-of-python-tool.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has developed applications in GIS, text analysis, networks,
statistics, csv manipulation, data analysis, data mining and
simulations. Despite this, there are few references for using python as
an economist. This talk provides an introduction to economic tools using
python. I conclude with python in data analysis and future projects for
economists using python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gary Hlusko</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/python-for-economists-an-overview-of-python-tool.html</guid><category>talk</category></item><item><title>Python Packaging from Init to Deploy</title><link>http://pyvideo.org/pyohio-2015/python-packaging-from-init-to-deploy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python packaging really isn't that bad (anymore.) In this talk you'll
learn how you can take your beautiful new Python code and share it with
the world in a way that everyone benefits. I will cover tools and
techniques you can use to get the boring stuff out of the way so you can
focus on your code and deploy quickly, frequently, and consistently.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Forgac</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/python-packaging-from-init-to-deploy.html</guid><category>talk</category></item><item><title>REPL-driven development</title><link>http://pyvideo.org/pyohio-2015/repl-driven-development.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You know the Read-Evaluate-Print-Loop you get when you type python,
ipython or bpython? You should spend more time in it! This talk
describes development workflows using a REPL and their associated
pitfalls. IPython and bpython features useful for writing, testing,
debugging and using code will be sprinkled throughout.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Ballinger</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/repl-driven-development.html</guid><category>talk</category></item><item><title>Synchronizing Objects to YAML using Black Magic</title><link>http://pyvideo.org/pyohio-2015/synchronizing-objects-to-yaml-using-black-magic.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lately, I've been running into many situations where I'd like to store
program configuration and/or data in version control. YORM was born to
provide automatic, bidirectional, and human-friendly mappings of Python
object attributes to YAML files. In order to explain the inner-workings
of this library, I'll be diving into some of the less common features of
Python that I learned along the way.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jace Browning</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/synchronizing-objects-to-yaml-using-black-magic.html</guid><category>talk</category></item><item><title>Testing the Database Layer: typical problems &amp; best practices</title><link>http://pyvideo.org/pyohio-2015/testing-the-database-layer-typical-problems-be.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We will cover typical problems and best practices for testing the
database layer of Python applications. We will also cover using
factories vs fixtures for loading test data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Randy Syring</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/testing-the-database-layer-typical-problems-be.html</guid><category>talk</category></item><item><title>The Well Tempered API</title><link>http://pyvideo.org/pyohio-2015/the-well-tempered-api.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I can play 400 year old music, but I can't open a Word document from
1990. Centuries ago, a revolution in music enabled compositions to last
for centuries with no bit rot. There are innumerable parallels between
music and software, why don't our programs last longer? Software
Engineering has some things to learn from the parallel world of music.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">K Lars Lohn</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/the-well-tempered-api.html</guid><category>talk</category></item><item><title>Typing better and potentially faster with python</title><link>http://pyvideo.org/pyohio-2015/typing-better-and-potentially-faster-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We'll explore areas outside QWERTY keyboard layout most of us are born
into. And we'll build tools to help us expand that (layout) universe and
understand it better using python. We'll go over my history of creating
and using my custom keyboard layout (dvorak variant), how I designed and
improved it over time, and how I confidently know it's better for me.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jamiel Almeida</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/typing-better-and-potentially-faster-with-python.html</guid><category>talk</category></item><item><title>Why You Can't Sit With Us - Understanding Network Analysis in Python With Mean Girls</title><link>http://pyvideo.org/pyohio-2015/why-you-cant-sit-with-us-understanding-network.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Network analysis is a handy tool used to understand group dynamics,
provide product recommendations, and prevent homicides (and other
things). This talk will introduce the theory behind network analysis and
showcase the flexibility of Python's NetworkX library. No knowledge of
network analysis (or Mean Girls) is needed, but basic knowledge of
Python and the iPython Notebook, will be helpful.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Harris</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-02:pyohio-2015/why-you-cant-sit-with-us-understanding-network.html</guid><category>talk</category></item><item><title>A Calendar for Mars</title><link>http://pyvideo.org/pyohio-2015/a-calendar-for-mars.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A discussion of Martian timekeeping and using Python to create a Single
Page Application about a calendar for mars using Flask, Twitter
Bootstrap, and Backbone.js.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Roche</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/a-calendar-for-mars.html</guid><category>talk</category></item><item><title>Art and Science With Six Million Timelapse Images and Python</title><link>http://pyvideo.org/pyohio-2015/art-and-science-with-six-million-timelapse-images.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I have been taking a picture every 10 seconds out my window for two
years. This talk explores all the cool things you can do with almost 4
Terabytes of images to make art and demonstrate science. We'll touch on
everything from pillow, pyephem, Django, Celery, and OpenCV.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Floehr</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/art-and-science-with-six-million-timelapse-images.html</guid><category>talk</category></item><item><title>Automating Your Browser and Desktop Apps</title><link>http://pyvideo.org/pyohio-2015/automating-your-browser-and-desktop-apps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There's a lot of data on the web and in your desktop apps, but accessing
it can involve a lot of tedious typing and clicking. In this talk Al
Sweigart explains web scraping techniques and programmatically
controlling the keyboard and mouse to automate these tasks for you.
Covers the Selenium and PyAutoGUI modules.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Al Sweigart</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/automating-your-browser-and-desktop-apps.html</guid><category>talk</category></item><item><title>Best Practices for Python Scripting</title><link>http://pyvideo.org/pyohio-2015/best-practices-for-python-scripting.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python REPL is an amazing tool for exploring a problem and quickly
finding an answer. But how do you turn that &amp;quot;quick and dirty&amp;quot; snippet
into an elegant, reusable module? In this talk, you'll learn how to
isolate input, output, configuration options and more from your core
logic to transform that block of code into a package and script that
behave well in command line environments.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Back</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/best-practices-for-python-scripting.html</guid><category>talk</category></item><item><title>Coroutines, Async/Await, Asyncio and the Pulsar Library</title><link>http://pyvideo.org/pyohio-2015/coroutines-asyncawait-asyncio-and-the-pulsar-l.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I will discuss the past benefits of using gevent, greenlet and twisted
and how asyncio acts as a new solution in Python 3. This talk will focus
on the new async/await features for Python 3.5, as well as the Pulsar
library, a powerful coroutine library that builds on asyncio coroutines.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David J Felix</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/coroutines-asyncawait-asyncio-and-the-pulsar-l.html</guid><category>talk</category></item><item><title>Data Science: It's Easy as Pyǃ</title><link>http://pyvideo.org/pyohio-2015/data-science-its-easy-as-py.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the last several years, many amazing Python projects have been
created for working with data, making Python one of the top languages
for data scientists. In this talk, I'll cover all five stages of the
OSEMN data science process, and several Python libraries that can be
used at each stage. To demo, I'll illustrate the creation of a language
classification algorithm, using Wikipedia articles.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Becker</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/data-science-its-easy-as-py.html</guid><category>talk</category></item><item><title>Filling the Flask</title><link>http://pyvideo.org/pyohio-2015/filling-the-flask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Just because Flask is a micro-framework doesn’t mean we still don’t want
to have great AAA (authentication, authorization, and accounting), email
services, simplified database access/migrations and form handling. Lets
look at some of the most common libraries used to build the powerful
simplicity of Flask into a full featured web application without having
to reinvent the wheel each time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Myers</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/filling-the-flask.html</guid><category>talk</category></item><item><title>From Synchronous to Asynchronous Postgres with Tornado</title><link>http://pyvideo.org/pyohio-2015/from-synchronous-to-asynchronous-postgres-with-to.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;During my talk two years ago &amp;quot;ORM vs SQL Roundup&amp;quot; I concluded with some
simple ways to do Object Relationship mapping without the heavy overhead
of a full featured ORM. This talk will show how I transformed the code
to work asynchronously.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Robellard</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/from-synchronous-to-asynchronous-postgres-with-to.html</guid><category>talk</category></item><item><title>How I built a power debugger out of the standard library and things I found on the internet</title><link>http://pyvideo.org/pyohio-2015/how-i-built-a-power-debugger-out-of-the-standard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Smiley spys on your application, recording everything it does, using
Python's built-in tracing facility and a database to create a complete
record of your program's runtime so you can study it. Most of the tools
I used to create Smiley are in Python's standard library, and the
history of Smiley's development serves as a framework to discuss those
tools and how you can tap their power yourself.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Doug Hellmann</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/how-i-built-a-power-debugger-out-of-the-standard.html</guid><category>talk</category></item><item><title>How I learned Python while working at Eventbrite</title><link>http://pyvideo.org/pyohio-2015/how-i-learned-python-while-working-at-eventbrite.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How do you learn a new tech stack while shipping code at the same time?
When I joined Eventbrite I knew Java and Ruby (and don't ask me to
program in either of those anymore, I don't remember). I'll give some
tips and strategies while saying what worked -- and didn't -- for me
when I was learning Django at Eventbrite.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allison Lacker</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/how-i-learned-python-while-working-at-eventbrite.html</guid><category>talk</category></item><item><title>How I taught my dog to text me selfies</title><link>http://pyvideo.org/pyohio-2015/how-i-taught-my-dog-to-text-me-selfies.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you want to get into hardware hacking but don't want to learn a new
language, this talk's for you. The Arduino Yun is Wifi enabled and comes
with Python installed. Using Python, Twilio, a webcam and a big red
button, I taught my dog how to send selfies. In this talk, we'll live
code the solution from beginning to end.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Baugues</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/how-i-taught-my-dog-to-text-me-selfies.html</guid><category>talk</category></item><item><title>How to be a good mentor</title><link>http://pyvideo.org/pyohio-2015/how-to-be-a-good-mentor.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I've been lucky enough to work with a team of 15 engineers and every
single one of them has been a mentor to me formally or informally. What
makes a great mentor? How can you encourage people to stay in the field
and help them to become better engineers. When your junior developers
are better your whole team benefits.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Liz Tom</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/how-to-be-a-good-mentor.html</guid><category>talk</category></item><item><title>Is that spam in my ham? A novice's inquiry into classification.</title><link>http://pyvideo.org/pyohio-2015/is-that-spam-in-my-ham-a-novices-inquiry-into-c.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Supervised learning, machine learning, classifiers!&lt;/strong&gt; &lt;em&gt;Help?&lt;/em&gt; In this
talk I define a problem, identifying an email as spam, from the
perspective of a beginner and show how Python can help us learn to
classify. We will translate knowing spam &amp;quot;when I see it&amp;quot; into a basic
model and use a Naive Bayes classifier to determine if email is spam. We
will train our classifier with examples and practice!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lorena Mesa</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/is-that-spam-in-my-ham-a-novices-inquiry-into-c.html</guid><category>talk</category></item><item><title>Learning to learn Python</title><link>http://pyvideo.org/pyohio-2015/learning-to-learn-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;For those new to programming and Python, the best way to learn the
language can be confusing. However, the web provides many avenues from
MOOCs, learning communities, user groups, books, online tutorials, and
Q&amp;amp;A sites to begin learning and build skills. What path should you take
as a solo learner? This talk will provide an overview of places to get
started and strategies to learn smarter. .&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ann Schoenenberger</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/learning-to-learn-python.html</guid><category>talk</category></item><item><title>Name Things Once</title><link>http://pyvideo.org/pyohio-2015/name-things-once.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Naming things is hard so you should do as little of it as possible. Your
coworkers will thank you for it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jack Diederich</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/name-things-once.html</guid><category>talk</category></item><item><title>Network Automation using Ansible and Python</title><link>http://pyvideo.org/pyohio-2015/network-automation-using-ansible-and-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session will look at some of the ways that network infrastructure
can be managed in an automated way using Ansible and Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Oswalt</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/network-automation-using-ansible-and-python.html</guid><category>talk</category></item><item><title>Pandas Dataframes At The Cinema</title><link>http://pyvideo.org/pyohio-2015/pandas-dataframes-at-the-cinema.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Using data from the Internet Movie Database, students will use the
Pandas data analysis library to search the data and answer questions
about it. This will be a more focused version of the tutorial I gave at
PyCon this year, with an emphasis on demonstrations that get the
students ready to go home and work on the several hours' worth of fun
exercises that the full tutorial includes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/pandas-dataframes-at-the-cinema.html</guid><category>talk</category></item><item><title>Python as the multitool of data science</title><link>http://pyvideo.org/pyohio-2015/python-as-the-multitool-of-data-science.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python has lead the way in making data science more accessible with a
number of solid data driven libraries. This talk will be a high
introduction to familiarize people interested in data science with some
of the more common Python tools such as pandas for data munging and
analysis, numpy for scientific computing, scikit-learn for machine
learning and matplotlib for visualizing your data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Derik Pell</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/python-as-the-multitool-of-data-science.html</guid><category>talk</category></item><item><title>Simple Games for Python Beginners</title><link>http://pyvideo.org/pyohio-2015/simple-games-for-python-beginners.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This class is designed for enthusiasts just starting out with Python. We
will design and build a simple game and, along the way, learn about
various statements and data structures in Python. If you can write and
run &amp;quot;hello, world!&amp;quot; but don't know what to do next, this class is for
you! Note that this is not a class on pyGame.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Lindstrom</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/simple-games-for-python-beginners.html</guid><category>talk</category></item><item><title>Stumbling blocks of a Python newbie</title><link>http://pyvideo.org/pyohio-2015/stumbling-blocks-of-a-python-newbie.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In our PyLadies study group the training resources we’ve used have
common stumbling blocks which can make learning difficult for the
beginner. We will provide suggestions on how to overcome these
challenges and to increase the success of learners.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amy Hubbard</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/stumbling-blocks-of-a-python-newbie.html</guid><category>talk</category></item><item><title>Super Intermediate Python 3</title><link>http://pyvideo.org/pyohio-2015/super-intermediate-python-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is a follow up of my 2013 Super Advanced Python talk, but now
will be much more focused on functional programming and data
transformation. We will deep dive into the wonders of functional
programming with Python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raymond Chandler III</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/super-intermediate-python-3.html</guid><category>talk</category></item><item><title>Teaching a Computer to Fight Itself (Implementing an OGRE AI)</title><link>http://pyvideo.org/pyohio-2015/teaching-a-computer-to-fight-itself-implementing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OGRE is an asymmetric board game pitting a futuristic fighting force of
infantry and armor against a single, massive, artificially intelligent
cyber tank. Figuring out a winning strategy was difficult, so I taught
my computer how to play the game, and learn to play it better using
Python.&lt;/p&gt;
&lt;p&gt;Source code available at: &lt;a class="reference external" href="https://github.com/gar0u/ogre-ai"&gt;https://github.com/gar0u/ogre-ai&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">William Hutton</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/teaching-a-computer-to-fight-itself-implementing.html</guid><category>talk</category></item><item><title>Using Python to Get Out the Vote</title><link>http://pyvideo.org/pyohio-2015/using-python-to-get-out-the-vote.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will explore how I used Python to power the get-out-the-vote
campaign for a local school levy ballot issue—saving thousands of
consulting dollars along the way. We’ll talk about fusing and
normalizing available data sources, reading and writing CSV files, and
data modeling and querying using SQLAlchemy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Pirnat</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/using-python-to-get-out-the-vote.html</guid><category>talk</category></item><item><title>You Gotta Want It: Building Up Women in Computer Science</title><link>http://pyvideo.org/pyohio-2015/you-gotta-want-it-building-up-women-in-computer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tech's diversity problem is well-known, and college communities are no
exception. This is the story of building up Case Western's women in
computer science community over a year, and how to apply the same
strategies to your own company or community.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephanie Hippo</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-01:pyohio-2015/you-gotta-want-it-building-up-women-in-computer.html</guid><category>talk</category></item><item><title>An introduction to Python and graph databases with Neo4j</title><link>http://pyvideo.org/kiwi-pycon-2014/an-introduction-to-python-and-graph-databases-wit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Novice&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A number of organisations have realised that the relational model for
databases is insufficient for certain scenarios. Graph databases are
good at modelling relationships. This talk will introduce you to Neo4j
(a graph database engine) with Python. How to set it up, how to use it
and some questions you can answer with it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This talk will introduce you to Neo4j (a graph database engine) with
Python. How to set it up, how to use it and some questions you can
answer with it.&lt;/p&gt;
&lt;p&gt;You don’t need any previous experience with Neo4j or NoSQL databases and
very little experience with Python.&lt;/p&gt;
&lt;p&gt;We'll cover: Introduction to Graphs Setting up your toolbox Neo4j and
Cypher A simple real-world example use case with Neo4j&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/holger-spill-an-introduction-to-python-and-graph-databases-with-neo4j"&gt;https://speakerdeck.com/nzpug/holger-spill-an-introduction-to-python-and-graph-databases-with-neo4j&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Holger Spill</dc:creator><pubDate>Sun, 14 Sep 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-09-14:kiwi-pycon-2014/an-introduction-to-python-and-graph-databases-wit.html</guid><category>talk</category></item><item><title>basil - making it easy to spin up best practice python web frameworks</title><link>http://pyvideo.org/kiwi-pycon-2014/basil-making-it-easy-to-spin-up-best-practice-p.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Audience level&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Intermediate&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python is a great language for web development but spinning up Python
web frameworks for development is still not as easy as it could be -
especially if following a particular form of best practice e.g. altering
the standard folder structure. Basil addresses this pain point. Use
cases include students building basic web apps and experienced devs
trying out less familiar web frameworks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python is a great language for web development but spinning up Python
web frameworks for development is still not as easy as it could be -
especially if you're trying to follow a particular form of best practice
e.g. altering the standard folder structure, or separating secrets
(unversioned) from settings (versioned). And even if you are familiar
with one framework, it may not be as easy to spin up another one. The
basil project is an attempt to address this pain point. Use cases may
include a teaching session where students are learning Python by
building a basic web application. Or an experienced developer wanting to
try out an alternative web framework. The presentation will look at some
of the challenges involved in designing basil.&lt;/p&gt;
&lt;p&gt;The talk will cover the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;standard user experience of setting up a web framework for Python
(contrasted with other languages)&lt;/li&gt;
&lt;li&gt;the user experience of basil&lt;/li&gt;
&lt;li&gt;use cases for basil (new developers, experienced developers,
teaching)&lt;/li&gt;
&lt;li&gt;existing alternative solutions&lt;/li&gt;
&lt;li&gt;benefits of using vagrant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Slides&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/nzpug/ben-denham-basil-making-it-easy-to-spin-up-best-practice-python-web-frameworks"&gt;https://speakerdeck.com/nzpug/ben-denham-basil-making-it-easy-to-spin-up-best-practice-python-web-frameworks&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Denham</dc:creator><pubDate>Sun, 14 Sep 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-09-14:kiwi-pycon-2014/basil-making-it-easy-to-spin-up-best-practice-p.html</guid><category>talk</category></item></channel></rss>