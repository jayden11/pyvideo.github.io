<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Fri, 18 Sep 2015 00:00:00 +0000</lastBuildDate><item><title>Connecting Patients to Doctors in Real-Time Using Django</title><link>http://pyvideo.org/djangocon-2014/connecting-patients-to-doctors-in-real-time-using.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Your challenge, should you choose to accept it, is to create a system
that allows patients to connect to doctors licensed in their state
efficiently. How I used Django, Celery, Redis and Websockets to create a
real-time matching system for Doctor On Demand.&lt;/p&gt;
&lt;p&gt;Help us caption &amp;amp; translate this video!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amara.org/v/FNEr/"&gt;http://amara.org/v/FNEr/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Sat, 13 Sep 2014 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2014-09-13:djangocon-2014/connecting-patients-to-doctors-in-real-time-using.html</guid></item><item><title>But, why is the admin slow?</title><link>http://pyvideo.org/djangocon-2015/but-why-is-the-admin-slow-by-jacinda-shelly.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;But, why is the admin slow?&lt;/p&gt;
&lt;p&gt;This is the general outline I'm working from so far. I think this could
change slightly as I develop the talk, but this outline conveys the
general theme.&lt;/p&gt;
&lt;p&gt;Introduction and display of basic django-debug-toolbar usage (2 min)&lt;/p&gt;
&lt;p&gt;Things the admin does well (3 min)&lt;/p&gt;
&lt;p&gt;Makes development very fast For many use cases, it &amp;quot;does the right
thing&amp;quot; automatically. For example, modifying the HTML in a callable
won't cause new queries. What can sneak up on you (5 min)&lt;/p&gt;
&lt;p&gt;Having lots of related items visible in the list view Using
list_select_related Overriding queryset for additional select_related
and prefetch_related options What to avoid in callables (3 min)&lt;/p&gt;
&lt;p&gt;Queries that will be executed on every row The default widgets for
many-to-many and foreign key fields (3 min)&lt;/p&gt;
&lt;p&gt;What widgets to use to replace the defaults based on how many options
you have in your database Custom aggregates in the list view (i.e.
custom querysets) (3 min)&lt;/p&gt;
&lt;p&gt;When this is a good idea When this is too slow and you need other
options More general performance improvements through caching (3-5 min)&lt;/p&gt;
&lt;p&gt;Django's caching framework Caching with third-party packages / tools
Custom caching with Redis Questions (Remaining time)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-09-18:djangocon-2015/but-why-is-the-admin-slow-by-jacinda-shelly.html</guid></item><item><title>Delving into the Django Admin</title><link>http://pyvideo.org/pycon-us-2015/delving-into-the-django-admin.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The admin interface is widely considered a &amp;quot;&amp;quot;killer feature&amp;quot;&amp;quot; of Django.
At its most basic, you can just register all your models and be on your
way, but there's so much more available within Django's admin. This
tutorial takes you step by step through the creation and progressive
improvement of an admin interface for a fictional library (all code is
publicly available).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-04-10:pycon-us-2015/delving-into-the-django-admin.html</guid></item></channel></rss>