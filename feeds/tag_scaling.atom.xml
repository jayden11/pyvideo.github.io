<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_scaling.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2016-10-08T00:00:00+00:00</updated><entry><title>Scaling up to Big Data Devops for Data Science</title><link href="http://pyvideo.org/pydata-dc-2016/scaling-up-to-big-data-devops-for-data-science.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Marck Vaisman</name></author><id>tag:pyvideo.org,2016-10-08:pydata-dc-2016/scaling-up-to-big-data-devops-for-data-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Scaling up R/Python from a single machine to a cluster environment can be tricky. While there are many tools available that make the launching of a cluster relatively easy, they are not focused or optimized to the specific use case of analytics but mostly on operations. Come and learn about devops tips and tricks to optimize your transition into the big data world as a data scientist.&lt;/p&gt;
</summary><category term="big data"></category><category term="Data"></category><category term="data science"></category><category term="devops"></category><category term="scaling"></category><category term="science"></category></entry><entry><title>Scaling Django Web Applications</title><link href="http://pyvideo.org/djangocon-2009/djangocon-2009--scaling-django-web-applications.html" rel="alternate"></link><published>2009-09-10T00:00:00+00:00</published><updated>2009-09-10T00:00:00+00:00</updated><author><name>Mike Malone</name></author><id>tag:pyvideo.org,2009-09-10:djangocon-2009/djangocon-2009--scaling-django-web-applications.html</id><summary type="html"></summary><category term="djangocon"></category><category term="djangocon2009"></category><category term="scaling"></category></entry><entry><title>Alice in Performanceland -- Down the Rabbit Hole with Frank Wiles</title><link href="http://pyvideo.org/djangocon-2010/djangocon-2010--alice-in-performanceland----down-.html" rel="alternate"></link><published>2010-09-09T00:00:00+00:00</published><updated>2010-09-09T00:00:00+00:00</updated><author><name>Frank Wiles</name></author><id>tag:pyvideo.org,2010-09-09:djangocon-2010/djangocon-2010--alice-in-performanceland----down-.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;While pre-optimization is often the root of all evil, knowing how to
think about performance and scalability are important skills for any
geek. Learn about all the knobs you didn't know you could or should
tweak.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Code profiling and dealing with your database aren't the only places to
find performance gains. Performance and scalability are holistic
endeavors.&lt;/p&gt;
</summary><category term="djangocon"></category><category term="djangocon2010"></category><category term="optimization"></category><category term="performance"></category><category term="scaling"></category></entry><entry><title>Best Practices for Python in the Cloud</title><link href="http://pyvideo.org/europython-2011/best-practices-for-python-in-the-cloud.html" rel="alternate"></link><published>2011-07-18T00:00:00+00:00</published><updated>2011-07-18T00:00:00+00:00</updated><author><name>Gisle Aas</name></author><id>tag:pyvideo.org,2011-07-18:europython-2011/best-practices-for-python-in-the-cloud.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;[EuroPython 2011] Gisle Aas - 21 June 2011 in &amp;quot;Track Lasagne&amp;quot;&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Abstract: Whether you’re an independent developer or development manager
in a large company, “the cloud” is on everyone’s mind. But just because
it’s in the cloud, doesn’t mean development and deployment is
effortless. The cloud presents infrastructure and development challenges
in a new way.&lt;/p&gt;
&lt;p&gt;In this presentation, ActiveState's Gisle Aas will share best practices
in building and deploying a Python-centric LAMP stack(s) on the cloud
for a range of web-based applications from simple Django site to HPC GPU
Clusters.&lt;/p&gt;
&lt;p&gt;Based on ActiveState’s experiences, Gisle will discuss the challenges
faced and lessons learned in building an infrastructure to deploy web
applications to the cloud with Python.&lt;/p&gt;
&lt;p&gt;You will learn about:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Which packages are critical for a secure, Python-centric LAMP stack
(and what it takes to build them)!&lt;/li&gt;
&lt;li&gt;Tips for developing, deploying, and scaling Python applicaitons in
the cloud&lt;/li&gt;
&lt;li&gt;How to use Python to connect and build infrastructure to support and
manage your deployment&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="cloud"></category><category term="deploy"></category><category term="deployment"></category><category term="django"></category><category term="gpu"></category><category term="hpc"></category><category term="infrastructure"></category><category term="lamp"></category><category term="packages"></category><category term="scaling"></category><category term="web"></category></entry><entry><title>Actors: What, Why, and How (#161)</title><link href="http://pyvideo.org/pycon-us-2010/pycon-2010--actors--what--why--and-how---161.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Donovan Preston</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--actors--what--why--and-how---161.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Actors: What, Why and How&lt;/p&gt;
&lt;p&gt;Presented by Donovan Preston&lt;/p&gt;
&lt;p&gt;Since the dawn of concurrency research, there have been two camps:
shared everything, and shared nothing. Most modern applications use
threads for concurrency, a shared everything architecture.&lt;/p&gt;
&lt;p&gt;Actors, however, use a shared nothing architecture where lightweight
processes communicate with each other using message passing. Actors can
change their state, create a new Actor, send a message to any Actor it
has the Address of, and wait for a specific kind of message to arrive in
it's mailbox.&lt;/p&gt;
&lt;p&gt;We will discuss the benefits of using the Actor architecture and
strategies for implementing an Actor system in Python.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://bitbucket.org/fzzzy/python-%20actors/"&gt;http://bitbucket.org/fzzzy/python-actors/&lt;/a&gt;&lt;/p&gt;
</summary><category term="concurrency"></category><category term="eventlet"></category><category term="infrastructure"></category><category term="pycon"></category><category term="pycon2010"></category><category term="rest"></category><category term="scaling"></category><category term="wsgi"></category></entry><entry><title>Designing to Scale: The Story of ShootQ (#5)</title><link href="http://pyvideo.org/pycon-us-2010/pycon-2010--designing-to-scale--the-story-of-shoo.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Unknown</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--designing-to-scale--the-story-of-shoo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Designing to Scale: The story of ShootQ&lt;/p&gt;
&lt;p&gt;Jonathan LaCour (ShootQ)&lt;/p&gt;
&lt;p&gt;ShootQ is a web-based studio management solution for professional
photography studios, designed to automate and simplify the task of
running a small business. In this talk, Jonathan LaCour, the CTO of
ShootQ, hopes to share his experience designing a web application that
can scale up to meet the demands of a rapidly growing customer base. The
talk will cover a variety of topics including TurboGears 2.0, WSGI,
horizontal and vertical scaling, database replication, load balancing,
deployment, and more.&lt;/p&gt;
</summary><category term="deployment"></category><category term="loadbalancing"></category><category term="pycon"></category><category term="pycon2010"></category><category term="replication"></category><category term="scaling"></category><category term="turbogears"></category><category term="wsgi"></category></entry><entry><title>Scaling your Python application on EC2 (#191)</title><link href="http://pyvideo.org/pycon-us-2010/pycon-2010--scaling-your-python-application-on-ec.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Jeremy Edberg</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--scaling-your-python-application-on-ec.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scaling Your Python Application on EC2&lt;/p&gt;
&lt;p&gt;Presented by Jeremy Edberg&lt;/p&gt;
&lt;p&gt;Come hear about the trials and tribulations of moving reddit's Python
application from physical hardware to EC2's cloud infrastructure, and
how they have scaled since moving. Will include general discussion of
their learnings about scaling as well cloud specific issues.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Missing audio first few seconds]&lt;/p&gt;
</summary><category term="pycon"></category><category term="pycon2010"></category><category term="reddit"></category><category term="scaling"></category><category term="web"></category></entry><entry><title>What every developer should know about database scalability (#21)</title><link href="http://pyvideo.org/pycon-us-2010/pycon-2010--what-every-developer-should-know-abou.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Jonathan Ellis</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--what-every-developer-should-know-abou.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What every developer should know about database scalability&lt;/p&gt;
&lt;p&gt;Presented by Jonathan Ellis&lt;/p&gt;
&lt;p&gt;Caching, replication, partitioning, and distributed databases: how these
can (and can't!) help you scale your data.&lt;/p&gt;
</summary><category term="caching"></category><category term="distributeddatabases"></category><category term="partitioning"></category><category term="pycon"></category><category term="pycon2010"></category><category term="replication"></category><category term="scaling"></category></entry></feed>